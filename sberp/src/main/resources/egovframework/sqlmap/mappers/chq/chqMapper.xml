<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="egovframework.chq.service.ChqMapper">

	<select id="isCnfrmDt" parameterType="List" resultType="int">
		select 
			sum(if(SLS_TB.CNFRM_DT is null,0,1))
		from QUO_TB
			left join SLS_TB
		    on QUO_TB.QUO_SEQ = SLS_TB.QUO_SEQ
		    and QUO_TB.QUO_YM = SLS_TB.QUO_YM
		
		where 1=1
		and 
		<foreach collection="quoIds" item="quoId"  open="(" close=")" separator="or">
		(QUO_TB.quo_ym = substring(#{quoId},2,4) and QUO_TB.quo_seq = substring(#{quoId},8,4))
		</foreach>
	</select>
	
	<select id="isSameCons" parameterType="List" resultType="int">
		select 
			if(count(distinct cmpy_seq)=1,0,1)
		from QUO_TB
			left join JOB_TB
		    on QUO_TB.QUO_SEQ = JOB_TB.QUO_SEQ
		    and QUO_TB.QUO_YM = JOB_TB.QUO_YM
		
		where 1=1
		and 
		<foreach collection="quoIds" item="quoId"  open="(" close=")" separator="or">
		(QUO_TB.quo_ym = substring(#{quoId},2,4) and QUO_TB.quo_seq = substring(#{quoId},8,4))
		</foreach>
	</select>
	
	<select id="isChq" parameterType="List" resultType="int">
		select 
			if(count(distinct CHQ_SEQ)=1,0,1)
		from QUO_TB
		where 1=1
		and 
		<foreach collection="quoIds" item="quoId"  open="(" close=")" separator="or">
		(QUO_TB.quo_ym = substring(#{quoId},2,4) and QUO_TB.quo_seq = substring(#{quoId},8,4))
		</foreach>
	</select>
	
	<insert id="insert" parameterType="chqDTO">
		<selectKey keyProperty="chqSeq" resultType="int" order="BEFORE">
	        SELECT ifnull(max(CHQ_SEQ),0)+1 FROM CHQ_TB WHERE substring(CHQ_YM,1,2) = date_format(now(), '%y')
	    </selectKey>
	    INSERT INTO CHQ_TB
	    (
	    	CHQ_YM,
			CHQ_SEQ,
			INS_MEM_ID,
			UDT_MEM_ID
	    )
	    VALUES
	    (
	    	date_format(now(), '%y%m'),
	    	#{chqSeq},
	    	#{insMemId},
			#{udtMemId}
	    )
	</insert>
	
	<update id="updateQuo">
		UPDATE QUO_TB
		SET 
			CHQ_YM = date_format(now(), '%y%m'),
			CHQ_SEQ = #{chqSeq}
		WHERE 
		<foreach collection="quoIds" item="quoId"  open="(" close=")" separator="or">
		(QUO_TB.quo_ym = substring(#{quoId},2,4) and QUO_TB.quo_seq = substring(#{quoId},8,4))
		</foreach>		
	</update>
	
	<select id="selectListCnt" parameterType="comParam" resultType="int">
		SELECT
			count(1)
		FROM
			(
				select
					CHQ_TB.CHQ_SEQ
				from
					CHQ_TB
					inner join QUO_TB on QUO_TB.CHQ_YM = CHQ_TB.CHQ_YM
					and QUO_TB.CHQ_SEQ = CHQ_TB.CHQ_SEQ
					LEFT JOIN SLS_TB on SLS_TB.chq_ym = QUO_TB.chq_ym AND SLS_TB.chq_seq = QUO_TB.chq_seq
				    AND SLS_TB.state != 'D'
					inner join TEST_ITEM_TB on QUO_TB.QUO_YM = TEST_ITEM_TB.QUO_YM
					and QUO_TB.QUO_SEQ = TEST_ITEM_TB.QUO_SEQ
					and TEST_ITEM_TB.state != 'D'
					INNER JOIN JOB_TB ON QUO_TB.QUO_YM = JOB_TB.QUO_YM
					AND QUO_TB.quo_seq = JOB_TB.QUO_SEQ
					AND JOB_TB.state != 'D'
					LEFT JOIN CMPY_TB ON JOB_TB.CMPY_SEQ = CMPY_TB.CMPY_SEQ
				where
					CHQ_TB.state != 'D'
		<if test="searchVO != null">
	        <foreach collection="searchVO" item="item" separator="">
	       
	        	<choose>
					<!-- 4	컨설팅명 -->
					<when test="item.searchCode == 4">and IFNULL(CMPY_TB.CMPY_NAME, '') like concat('%',#{item.searchWord},'%')</when>
					<!-- 7	취합자 -->
					<when test="item.searchCode == 7">and FN_MEM_NAME(CHQ_TB.ins_mem_id) like concat('%',#{item.searchWord},'%')</when>
					<!-- 15	취합생성일 -->
					<when test="item.searchCode == 15">and date_format(CHQ_TB.ins_dt, '%Y%m%d') between date_format(#{item.startDate}, '%Y%m%d') and date_format(#{item.endDate}, '%Y%m%d')</when>
					<!-- 16	매출확정일 -->
					<when test="item.searchCode == 16">and date_format(SLS_TB.CNFRM_DT, '%Y%m%d') between date_format(#{item.startDate}, '%Y%m%d') and date_format(#{item.endDate}, '%Y%m%d')</when>					<!-- 25	시험배정 -->
	        	</choose>
	        	
	        </foreach>
        </if>
				group by
					CHQ_TB.CHQ_YM,
					CHQ_TB.CHQ_SEQ
			) CNT
	</select>
	
	<select id="selectList" parameterType="comParam" resultType="egovMap">
		set @rownum:=0;
		
		SELECT
			@rownum:=@rownum+1 as no,
			lst.*
		FROM (
			SELECT
			    IFNULL (DATE_FORMAT(CHQ_TB.INS_DT, '%Y-%m-%d'), '') insDtStr,
			    CONCAT (
			        'CH',
			        CHQ_TB.CHQ_YM,
			        '-',
			        LPAD (CHQ_TB.CHQ_SEQ, 3, 0)
			    ) chqId,
			    FN_MEM_NAME (CHQ_TB.INS_MEM_ID) memName,
			    IFNULL (DATE_FORMAT(SLS_TB.CNFRM_DT, '%Y-%m-%d'), '') cnfrmDtStr,
			    
			    FN_CODE_NAME (
			    	IF (VERSION = 1, 
			    					IFNULL ((SELECT CMPY_CODE FROM CMPY_TB WHERE CMPY_SEQ = JOB_TB.CMPY_SEQ), '9999')
									, CASE PRTN_YN WHEN 1 THEN '0000' WHEN 0 THEN '1000' ELSE '9999' END)
				, 'PT') CMPY_TYPE,
				
			    IFNULL (CMPY_TB.CMPY_NAME, '') cmpyTitle,
			    SUM(QUO_TB.TOTAL_VAT) CHRGS,
			    SUM(items.NET_SALES) NET_SALES
			FROM CHQ_TB
			    
			    INNER JOIN QUO_TB ON QUO_TB.CHQ_YM = CHQ_TB.CHQ_YM AND QUO_TB.CHQ_SEQ = CHQ_TB.CHQ_SEQ
			    LEFT JOIN SLS_TB ON SLS_TB.CHQ_YM = QUO_TB.CHQ_YM AND SLS_TB.CHQ_SEQ = QUO_TB.CHQ_SEQ AND SLS_TB.STATE != 'D'
                INNER JOIN (
					SELECT QUO_YM, QUO_SEQ, SUM(CHRGS) CHRGS, SUM(NET_SALES) NET_SALES
					FROM TEST_ITEM_TB
			        WHERE STATE != 'D'
			        GROUP BY QUO_YM, QUO_SEQ
			    ) items
			    ON QUO_TB.QUO_YM = items.QUO_YM
			    AND QUO_TB.quo_seq = items.QUO_SEQ
			    INNER JOIN JOB_TB ON QUO_TB.QUO_YM = JOB_TB.QUO_YM AND QUO_TB.quo_seq = JOB_TB.QUO_SEQ AND JOB_TB.state != 'D'
			    LEFT JOIN CMPY_TB ON JOB_TB.CMPY_SEQ = CMPY_TB.CMPY_SEQ
			WHERE
			    CHQ_TB.state != 'D'
			<if test="searchVO != null">
		        <foreach collection="searchVO" item="item" separator="">
		       
		        	<choose>
						<!-- 4	컨설팅명 -->
						<when test="item.searchCode == 4">and IFNULL(CMPY_TB.CMPY_NAME, '') like concat('%',#{item.searchWord},'%')</when>
						<!-- 7	취합자 -->
						<when test="item.searchCode == 7">and FN_MEM_NAME(CHQ_TB.ins_mem_id) like concat('%',#{item.searchWord},'%')</when>
						<!-- 15	취합생성일 -->
						<when test="item.searchCode == 15">and date_format(CHQ_TB.ins_dt, '%Y%m%d') between date_format(#{item.startDate}, '%Y%m%d') and date_format(#{item.endDate}, '%Y%m%d')</when>
						<!-- 16	매출확정일 -->
						<when test="item.searchCode == 16">and date_format(SLS_TB.CNFRM_DT, '%Y%m%d') between date_format(#{item.startDate}, '%Y%m%d') and date_format(#{item.endDate}, '%Y%m%d')</when>					<!-- 25	시험배정 -->
		        	</choose>
		        	
		        </foreach>
	        </if>
			GROUP BY
				CHQ_TB.CHQ_YM,
				CHQ_TB.CHQ_SEQ
			ORDER BY 
				CHQ_TB.CHQ_YM,
				CHQ_TB.CHQ_SEQ
		) lst
		ORDER BY NO DESC
		LIMIT #{pageUnit} OFFSET #{firstIndex};
	</select>
	
	<resultMap type="chqSub" id="chqMap">
		<id column="quoId" property="quoId"/>
		<result column="sbkId" property="sbkId"/>
		<result column="VERSION" property="version"/>
		<result column="cnfrmDtStr" property="cnfrmDtStr"/>
		<result column="cmpyTitle" property="cmpyTitle"/>
		<result column="CMPY_NAME" property="cmpyName"/>
		<result column="PRDCT_NAME" property="prdctName"/>
		<result column="VAT_YN" property="vatYn"/>
		<collection property="items" ofType="testItemDTO">
			<id column="test_item_seq" property="testItemSeq"/>
			<result column="testCate" property="testCate"/>
			<result column="model" property="model"/>
			<result column="memo" property="memo"/>
			<result column="TEST_TYPE" property="testType"/>
			<result column="FEE" property="fee"/>
       	 	<result column="LCNS_TAX" property="lcnsTax"/>
       	 	<result column="TEST_FEE" property="testFee"/>
       	 	<result column="cancelFixYn" property="cancelFixYn"/>
		</collection>
	</resultMap>
	<select id ="selectDetail" parameterType="String" resultMap="chqMap">
		SELECT
			FN_GET_SEQSTRING ('Q', QUO_TB.quo_ym, type, QUO_TB.quo_seq) quoId,
			CONCAT ('SB', JOB_TB.SBK_YM, '-' , JOB_TB.SBK_TYPE, LPAD(JOB_TB.SBK_SEQ,4,0), IF(SBK_REVISION > 0, CONCAT ('-',SBK_REVISION), '')) sbkId,
			QUO_TB.VERSION,
			IFNULL (DATE_FORMAT(SLS_TB.CNFRM_DT, '%Y-%m-%d'), '') cnfrmDtStr,
			IFNULL (CMPY_TB.CMPY_NAME, '') cmpyTitle,
			IFNULL (CASE IFNULL(JOB_TB.DIRT_SEQ, 0) WHEN 0 THEN JOB_TB.CMPY_NAME ELSE dirt.CMPY_NAME END, '') CMPY_NAME,
			PRDCT_NAME,
			/* 시험항목 및 비용 */
			TEST_ITEM_TB.TEST_ITEM_SEQ,
			CONCAT (B.NAME, '-', A.NAME) testCate,
			IFNULL (TEST_ITEM_TB.MODEL, '-') model,
			IFNULL (TEST_ITEM_TB.MEMO, '') memo,
			IFNULL (
				FN_CODE_NAME (TEST_ITEM_TB.TEST_TYPE_CODE, 'TT'),
				'-'
			) TEST_TYPE,
			FEE,
			LCNS_TAX,
			IF (CANCEL_YN = 1, NET_SALES, TEST_FEE) TEST_FEE,
			IF (CANCEL_YN = 1, '취소', '정상') cancelFixYn,
			IF(QUO_TB.VAT_YN=1,'O','') VAT_YN
		FROM
			CHQ_TB
			
			INNER JOIN QUO_TB ON QUO_TB.CHQ_YM = CHQ_TB.CHQ_YM
			AND QUO_TB.CHQ_SEQ = CHQ_TB.CHQ_SEQ
			
			INNER JOIN TEST_ITEM_TB ON QUO_TB.QUO_YM = TEST_ITEM_TB.QUO_YM
			AND QUO_TB.QUO_SEQ = TEST_ITEM_TB.QUO_SEQ
			AND TEST_ITEM_TB.STATE != 'D'
			
			INNER JOIN JOB_TB ON QUO_TB.QUO_YM = JOB_TB.QUO_YM
			AND QUO_TB.QUO_SEQ = JOB_TB.QUO_SEQ
			AND JOB_TB.STATE != 'D'
			
			LEFT JOIN CMPY_TB ON JOB_TB.CMPY_SEQ = CMPY_TB.CMPY_SEQ
			LEFT JOIN CMPY_TB dirt ON JOB_TB.DIRT_SEQ = dirt.CMPY_SEQ
			LEFT JOIN TEST_STNDR_TB ON TEST_ITEM_TB.TEST_STNDR_SEQ = TEST_STNDR_TB.TEST_STNDR_SEQ
			LEFT JOIN TEST_CATE_TB A ON TEST_ITEM_TB.CRTF_TYPE_SEQ = A.TEST_CATE_SEQ
			LEFT JOIN TEST_CATE_TB B ON A.TOP_DEPTH_SEQ = B.TEST_CATE_SEQ
			LEFT JOIN SLS_TB on SLS_TB.CHQ_YM = CHQ_TB.CHQ_YM AND SLS_TB.CHQ_SEQ = CHQ_TB.CHQ_SEQ AND SLS_TB.STATE != 'D'
		WHERE
			CHQ_TB.STATE != 'D'
			and CHQ_TB.CHQ_YM = SUBSTRING(#{chqId},3,4)
			and CHQ_TB.CHQ_SEQ = SUBSTRING(#{chqId},8,3)
	</select>
	
	<select id="selectInfo" parameterType="String" resultType="chqRes">
		SELECT
		    cmpyTitle,
		    insDtStr,
		    memName,
		    cnfrmDtStr,
		    sum(cnt) cnt,
		    sum(FEE) FEE,
		    sum(LCNS_TAX) LCNS_TAX,
		    sum(TEST_FEE) TEST_FEE,
		    sum(COST_TOTAL) COST_TOTAL,
		    sum(SPCL_DSCNT) SPCL_DSCNT,
		    sum(TOTAL_VAT) TOTAL_VAT
		FROM
		    (
		        SELECT
		            CHQ_TB.CHQ_YM,
		            CHQ_TB.CHQ_SEQ,
		            IFNULL (CMPY_TB.CMPY_NAME, '') cmpyTitle,
		            IFNULL (DATE_FORMAT(CHQ_TB.INS_DT, '%Y-%m-%d'), '') insDtStr,
		            CONCAT (
		                FN_DEPT_NAME (CHQ_TB.INS_MEM_ID),
		                ' ',
		                FN_MEM_NAME (CHQ_TB.INS_MEM_ID)
		            ) memName,
		            IFNULL (DATE_FORMAT(SLS_TB.CNFRM_DT, '%Y-%m-%d'), '') cnfrmDtStr,
		            COUNT(1) cnt,
		            SUM(TEST_ITEM_TB.FEE) FEE,
		            SUM(TEST_ITEM_TB.LCNS_TAX) LCNS_TAX,
		            SUM(IF (CANCEL_YN = 1, NET_SALES, TEST_FEE)) TEST_FEE,
		            QUO_TB.COST_TOTAL COST_TOTAL,
		            SUM(TEST_ITEM_TB.SPCL_DSCNT) SPCL_DSCNT,
		            QUO_TB.TOTAL_VAT TOTAL_VAT
		        FROM CHQ_TB
		            
		            INNER JOIN QUO_TB ON QUO_TB.CHQ_YM = CHQ_TB.CHQ_YM AND QUO_TB.CHQ_SEQ = CHQ_TB.CHQ_SEQ
		            LEFT JOIN SLS_TB ON SLS_TB.QUO_YM = QUO_TB.QUO_YM AND SLS_TB.QUO_SEQ = QUO_TB.QUO_SEQ
		            INNER JOIN TEST_ITEM_TB on QUO_TB.QUO_YM = TEST_ITEM_TB.QUO_YM AND QUO_TB.QUO_SEQ = TEST_ITEM_TB.QUO_SEQ AND TEST_ITEM_TB.state != 'D'
		            INNER JOIN JOB_TB ON QUO_TB.QUO_YM = JOB_TB.QUO_YM AND QUO_TB.quo_seq = JOB_TB.QUO_SEQ AND JOB_TB.STATE != 'D'
		            
		            LEFT JOIN CMPY_TB ON JOB_TB.CMPY_SEQ = CMPY_TB.CMPY_SEQ
		            LEFT JOIN TEST_STNDR_TB ON TEST_ITEM_TB.TEST_STNDR_SEQ = TEST_STNDR_TB.TEST_STNDR_SEQ
		            LEFT JOIN TEST_CATE_TB A on TEST_ITEM_TB.CRTF_TYPE_SEQ = A.TEST_CATE_SEQ
		            LEFT JOIN TEST_CATE_TB B on A.TOP_DEPTH_SEQ = B.TEST_CATE_SEQ
		        
		        WHERE
		            CHQ_TB.state != 'D'
		            AND CHQ_TB.CHQ_YM = SUBSTRING(#{chqId}, 3, 4)
		            AND CHQ_TB.CHQ_SEQ = SUBSTRING(#{chqId}, 8, 3)
		        GROUP BY
		            QUO_TB.QUO_YM,
		            QUO_TB.QUO_SEQ
		    ) chq
		GROUP BY
		    CHQ_YM,
		    CHQ_SEQ
	</select>
	
	<update id="delete">
		UPDATE CHQ_TB
		SET
			UDT_MEM_ID = #{memId},
			UDT_DT = NOW(),
			STATE = 'D'
			
		WHERE 1=1 			
		AND CHQ_TB.CHQ_YM = substring(#{chqId}, 3, 4)
		AND CHQ_TB.CHQ_SEQ = substring(#{chqId}, 8, 3)
	</update>

	<update id="deletQuo">
		UPDATE QUO_TB
		SET
			CHQ_YM = null,
			CHQ_SEQ = 0,
			UDT_MEM_ID = #{memId},
			UDT_DT = NOW()
		WHERE 1=1 			
		AND QUO_TB.CHQ_YM = substring(#{chqId}, 3, 4)
		AND QUO_TB.CHQ_SEQ = substring(#{chqId}, 8, 3)
	</update>
		
	<select id="isSecret" parameterType="List" resultType="int">
		SELECT 
			IF(SUM(JOB_TB.SECRET_YN) = 0,0,1)
		FROM QUO_TB
			
			LEFT JOIN JOB_TB
		    ON QUO_TB.QUO_SEQ = JOB_TB.QUO_SEQ
		    AND QUO_TB.QUO_YM = JOB_TB.QUO_YM
		
		WHERE 1=1
		AND
		<foreach collection="quoIds" item="quoId"  open="(" close=")" separator="or">
		(QUO_TB.quo_ym = substring(#{quoId},2,4) and QUO_TB.quo_seq = substring(#{quoId},8,4))
		</foreach>
	</select>
</mapper>