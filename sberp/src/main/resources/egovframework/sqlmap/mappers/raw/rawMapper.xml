<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="egovframework.raw.service.RawMapper">

	<select id="getSbkId" parameterType="int" resultType="String">
		SELECT
			CONCAT ('SB', JOB_TB.SBK_YM, '-' , 'G', LPAD(JOB_TB.SBK_SEQ,4,0), IF(JOB_TB.SBK_REVISION > 0, CONCAT ('-',JOB_TB.SBK_REVISION), '')) sbkId
		FROM
		    TEST_TB
		    INNER JOIN TEST_ITEM_TB ON TEST_TB.TEST_ITEM_SEQ = TEST_ITEM_TB.TEST_ITEM_SEQ
		    INNER JOIN JOB_TB ON TEST_ITEM_TB.QUO_YM = JOB_TB.QUO_YM
		    AND TEST_ITEM_TB.QUO_SEQ = JOB_TB.QUO_SEQ
		WHERE TEST_SEQ = #{testSeq}		
	</select>
	
	<insert id="insert" parameterType="rawData">
		<selectKey resultType="int" keyProperty="rawSeq" order="BEFORE">
	        SELECT IFNULL(MAX(raw_seq)+1,1) rawSeq FROM RAW_TB
	    </selectKey> 
		INSERT INTO RAW_TB
		(
			RAW_SEQ,
			SBK_NO,
			SBK_ID,
			TEST_SEQ,
			APLCN,
			EQPMN,
			MODEL,
			MNFCT_SERIAL,
			MNFCT_CMPNY,
			MNFCT_CNTRY,
			<if test="rcptDt != null and rcptDt != ''">RCPT_DT,</if>
			REPORT_NO,
			<if test="reportDt != null and reportDt != ''">REPORT_DT,</if>
			REPORT_MEMO,
			<if test="testSDt != null and testSDt != ''">TEST_S_DT,</if>
			<if test="testEDt != null and testEDt != ''">TEST_E_DT,</if>
			TEST_BY,
			TEST_SIGN_URL,
			REV_BY,
			REV_SIGN_URL,
			TBR_KC_EMC_YN,
			TBR_KC_RF_EMC_YN,
			TBR_EMCD_YN,
			TBR_FCC_YN,
			TBR_PSE_YN,
			TBR_KT_YN,
			TBR_ETC,
			TBR_ETC_YN,
			CLASS_A_YN,
			CLASS_B_YN,
			CLASS_ETC,
			CLASS_ETC_YN,
			PRD_EXPLN,
			PRD_USES,
			CLOCK_FRQNC,
			CLOCK_FRQNC_CODE,
			RATED_POWER,
			TEST_POWER,
			USER_PORT,
			ADMIN_PORT,
			PRD_FNC,
			WRL_FNC,
			CMP,
			ETC,
			WHT_USE_CRT_YN,
			CRT_NBR,
			CRT_MEMO,
			MOD_URL,
			MOD_MEMO,
			MOD_CHECK1_YN,
			MOD_CHECK2_YN,
			SYS_HEAD,
			TEST_FLOOR_YN,
			TEST_TABLE_YN,
			TEST_FSTT_YN,
			TEST_ETC_YN,
			OPR_CND,
			SETUP_URL,
			STD_MEMO,
			ADD_TEST_DIS,
			ADD_TEST_CABLE,
			ADD_TEST_DATA,
			ADD_TEST_AUDIO,
			INS_MEM_ID,
			UDT_MEM_ID
		)
		VALUES
		(
			#{rawSeq},
			(SELECT IFNULL (MAX(SBK_NO)+1,1) FROM RAW_TB sub WHERE sub.SBK_ID = #{sbkId}),
			#{sbkId},
			#{testSeq},
			#{aplcn},
			#{eqpmn},
			#{model},
			#{mnfctSerial},
			#{mnfctCmpny},
			#{mnfctCntry},
			<if test="rcptDt != null and rcptDt != ''">#{rcptDt},</if>
			#{reportNo},
			<if test="reportDt != null and reportDt != ''">#{reportDt},</if>
			#{reportMemo},
			<if test="testSDt != null and testSDt != ''">#{testSDt},</if>
			<if test="testEDt != null and testEDt != ''">#{testEDt},</if>
			#{testBy},
			#{testSignUrl},
			#{revBy},
			#{revSignUrl},
			#{tbrKcEmcYn},
			#{tbrKcRfEmcYn},
			#{tbrEmcdYn},
			#{tbrFccYn},
			#{tbrPseYn},
			#{tbrKtYn},
			#{tbrEtc},
			#{tbrEtcYn},
			#{classAYn},
			#{classBYn},
			#{classEtc},
			#{classEtcYn},
			#{prdExpln},
			#{prdUses},
			#{clockFrqnc},
			#{clockFrqncCode},
			#{ratedPower},
			#{testPower},
			#{userPort},
			#{adminPort},
			#{prdFnc},
			#{wrlFnc},
			#{cmp},
			#{etc},
			#{whtUseCrtYn},
			#{crtNbr},
			#{crtMemo},
			#{modUrl},
			#{modMemo},
			#{modCheck1Yn},
			#{modCheck2Yn},
			#{sysHead},
			#{testFloorYn},
			#{testTableYn},
			#{testFsttYn},
			#{testEtcYn},
			#{oprCnd},
			#{setupUrl},
			#{stdMemo},
			#{addTestDis},
			#{addTestCable},
			#{addTestData},
			#{addTestAudio},
			#{insMemId},
			#{udtMemId}
		);
	</insert>

	<insert id="insertSpec">
		INSERT INTO RAW_SPEC_TB
		(
			RAW_SEQ,
			ITEM,
			MEMO
		)
		VALUES
		<foreach collection="rawSpecList" item="item" separator=",">
		(
			#{rawSeq},
			#{item.item},
			#{item.memo}
		)
		</foreach>
	</insert>

	<update id="updateSpec">
		<foreach collection="rawSpecList" item="item" separator=";">
			UPDATE RAW_SPEC_TB
			SET
				ITEM = #{item.item},
				MEMO = #{item.memo},
				STATE = #{item.state}
			WHERE SPEC_SEQ = #{item.specSeq}
		</foreach>
	</update>

	<update id="deleteSpec">
		<foreach collection="rawSpecList" item="item" separator=";">
			UPDATE RAW_SPEC_TB
			SET
				STATE = #{item.state}
			WHERE SPEC_SEQ = #{item.specSeq}
		</foreach>
	</update>
		
	<insert id="insertTchn">
		INSERT INTO RAW_TCHN_TB
		(
			RAW_SEQ,
			TYPE,
			CHECK_YN,
			TEXT
		)
		VALUES
		<foreach collection="rawTchnList" item="item" separator=",">
		(
			#{rawSeq},
			#{item.type},
			#{item.checkYn},
			#{item.text}
		)
		</foreach>
	</insert>

	<update id="updateTchn">
		<foreach collection="rawTchnList" item="item" separator=";">
			UPDATE RAW_TCHN_TB
			SET
				TYPE = #{item.type},
				CHECK_YN = #{item.checkYn},
				TEXT = #{item.text},
				STATE = #{item.state}
			WHERE TCHN_SEQ = #{item.tchnSeq}
		</foreach>
	</update>

	<update id="deleteTchn">
		<foreach collection="rawTchnList" item="item" separator=";">
			UPDATE RAW_TCHN_TB
			SET
				STATE = #{item.state}
			WHERE TCHN_SEQ = #{item.tchnSeq}
		</foreach>
	</update>
		
	<insert id="insertAsstn">
		INSERT INTO RAW_ASSTN_TB
		(
			RAW_SEQ,
			EQPMN,
			MODEL,
			SERIAL_NO,
			MNFCT_CMPNY,
			MEMO
		)
		VALUES
		<foreach collection="rawAsstnList" item="item" separator=",">
		(
			#{rawSeq},
			#{item.eqpmn},
			#{item.model},
			#{item.serialNo},
			#{item.mnfctCmpny},
			#{item.memo}
		)
		</foreach>
	</insert>

	<update id="updateAsstn">
		<foreach collection="rawAsstnList" item="item" separator=";">
		UPDATE RAW_ASSTN_TB
		SET
			EQPMN = #{item.eqpmn},
			MODEL = #{item.model},
			SERIAL_NO = #{item.serialNo},
			MNFCT_CMPNY = #{item.mnfctCmpny},
			MEMO = #{item.memo},
			STATE = #{item.state}
		WHERE ASSTN_SEQ = #{item.asstnSeq}
		</foreach>
	</update>

	<update id="deleteAsstn">
		<foreach collection="rawAsstnList" item="item" separator=";">
		UPDATE RAW_ASSTN_TB
		SET
			STATE = #{item.state}
		WHERE ASSTN_SEQ = #{item.asstnSeq}
		</foreach>
	</update>
			
	<insert id="insertSys">
		INSERT INTO RAW_SYS_TB
		(
			RAW_SEQ,
			ITEM,
			MODEL,
			SERIAL_NO,
			MNFCT_CMPNY,
			MEMO
		)
		VALUES
		<foreach collection="rawSysList" item="item" separator=",">
		(
			#{rawSeq},
			#{item.item},
			#{item.model},
			#{item.serialNo},
			#{item.mnfctCmpny},
			#{item.memo}
		)
		</foreach>
	</insert>

	<update id="updateSys">
		<foreach collection="rawSysList" item="item" separator=";">
		UPDATE RAW_SYS_TB
		SET
			ITEM = #{item.item},
			MODEL = #{item.model},
			SERIAL_NO = #{item.serialNo},
			MNFCT_CMPNY = #{item.mnfctCmpny},
			MEMO = #{item.memo},
			STATE = #{item.state}
		WHERE SYS_SEQ = #{item.sysSeq}		
		</foreach>
	</update>

	<update id="deleteSys">
		<foreach collection="rawSysList" item="item" separator=";">
		UPDATE RAW_SYS_TB
		SET
			STATE = #{item.state}
		WHERE SYS_SEQ = #{item.sysSeq}		
		</foreach>
	</update>
			
	<insert id="insertCable">
		INSERT INTO RAW_CABLE_TB
		(
			RAW_SEQ,
			DF_NAME,
			DF_MODE,
			DF_PORT,
			DT_NAME,
			DT_PORT,
			CS_M,
			CS_YN
		)
		VALUES
		<foreach collection="rawCableList" item="item" separator=",">
		(
			#{rawSeq},
			#{item.dfName},
			#{item.dfMode},
			#{item.dfPort},
			#{item.dtName},
			#{item.dtPort},
			#{item.csM},
			#{item.csYn}
		)
		</foreach>
	</insert>
	
	<update id="updateCable">
		<foreach collection="rawCableList" item="item" separator=";">
		UPDATE RAW_CABLE_TB
		SET
			DF_NAME = #{item.dfName},
			DF_MODE = #{item.dfMode},
			DF_PORT = #{item.dfPort},
			DT_NAME = #{item.dtName},
			DT_PORT = #{item.dtPort},
			CS_M = #{item.csM},
			CS_YN = #{item.csYn},
			STATE = #{item.state}
		WHERE CABLE_SEQ = #{item.cableSeq}
		</foreach>
	</update>

	<update id="deleteCable">
		<foreach collection="rawCableList" item="item" separator=";">
		UPDATE RAW_CABLE_TB
		SET
			STATE = #{item.state}
		WHERE CABLE_SEQ = #{item.cableSeq}
		</foreach>
	</update>
	
	<update id="update" parameterType="rawData">
		UPDATE RAW_TB
		SET 
			APLCN = #{aplcn},
			EQPMN = #{eqpmn},
			MODEL = #{model},
			MNFCT_SERIAL = #{mnfctSerial},
			MNFCT_CMPNY = #{mnfctCmpny},
			MNFCT_CNTRY = #{mnfctCntry},
			<if test="rcptDt != null and rcptDt != ''">RCPT_DT = #{rcptDt},</if>
			REPORT_NO = #{reportNo},
			<if test="reportDt != null and reportDt != ''">REPORT_DT = #{reportDt},</if>
			REPORT_MEMO = #{reportMemo},
			<if test="testSDt != null and testSDt != ''">TEST_S_DT = #{testSDt},</if>
			<if test="testEDt != null and testEDt != ''">TEST_E_DT = #{testEDt},</if>
			TEST_BY = #{testBy},
			<if test="testSignUrl != null and testSignUrl != ''">TEST_SIGN_URL = #{testSignUrl},</if>
			REV_BY = #{revBy},
			<if test="revSignUrl != null and revSignUrl != ''">REV_SIGN_URL = #{revSignUrl},</if>
			TBR_KC_EMC_YN = #{tbrKcEmcYn},
			TBR_KC_RF_EMC_YN = #{tbrKcRfEmcYn},
			TBR_EMCD_YN = #{tbrEmcdYn},
			TBR_FCC_YN = #{tbrFccYn},
			TBR_PSE_YN = #{tbrPseYn},
			TBR_KT_YN = #{tbrKtYn},
			TBR_ETC = #{tbrEtc},
			TBR_ETC_YN = #{tbrEtcYn},
			CLASS_A_YN = #{classAYn},
			CLASS_B_YN = #{classBYn},
			CLASS_ETC = #{classEtc},
			CLASS_ETC_YN = #{classEtcYn},
			PRD_EXPLN = #{prdExpln},
			PRD_USES = #{prdUses},
			CLOCK_FRQNC = #{clockFrqnc},
			CLOCK_FRQNC_CODE = #{clockFrqncCode},
			RATED_POWER = #{ratedPower},
			TEST_POWER = #{testPower},
			USER_PORT = #{userPort},
			ADMIN_PORT = #{adminPort},
			PRD_FNC = #{prdFnc},
			WRL_FNC = #{wrlFnc},
			CMP = #{cmp},
			ETC = #{etc},
			WHT_USE_CRT_YN = #{whtUseCrtYn},
			CRT_NBR = #{crtNbr},
			CRT_MEMO = #{crtMemo},
			<if test="modUrl != null and modUrl != ''">MOD_URL = #{modUrl},</if>
			MOD_MEMO = #{modMemo},
			MOD_CHECK1_YN = #{modCheck1Yn},
			MOD_CHECK2_YN = #{modCheck2Yn},
			SYS_HEAD = #{sysHead},
			TEST_FLOOR_YN = #{testFloorYn},
			TEST_TABLE_YN = #{testTableYn},
			TEST_FSTT_YN = #{testFsttYn},
			TEST_ETC_YN = #{testEtcYn},
			OPR_CND = #{oprCnd},
			<if test="setupUrl != null and setupUrl != ''">SETUP_URL = #{setupUrl},</if>
			STD_MEMO = #{stdMemo},
			ADD_TEST_DIS = #{addTestDis},
			ADD_TEST_CABLE = #{addTestCable},
			ADD_TEST_DATA = #{addTestData},
			ADD_TEST_AUDIO = #{addTestAudio},
			UDT_MEM_ID = #{udtMemId},
			UDT_DT = NOW()
		WHERE RAW_SEQ = #{rawSeq}
	</update>
	
	<select id="detail" parameterType="int" resultType="rawData">
		SELECT
		    RAW_SEQ,
		    CONCAT (
		        SBK_ID,
		        '-',
		        (
		            select
		                CONCAT (TEST_TYPE_CODE, LPAD (TEST_TB.TEST_NO, 4, 0))
		            from
		                TEST_TB
		            where
		                TEST_SEQ = RAW_TB.TEST_SEQ
		        ),
		        '-RD'
		    ) rawId,
		    SBK_NO,
		    SBK_ID,
		    RAW_TB.TEST_SEQ,
		    /* 고정 > 신청인 */
		    JOB_TB.cmpy_name APLCN,
		    /* 고정 > 기자재명칭 */
		    if (
		        TEST_ITEM_TB.product = '',
		        JOB_TB.PRDCT_NAME,
		        TEST_ITEM_TB.product
		    ) EQPMN,
		    /* 고정 > 모델 */
		    if (
		        TEST_ITEM_TB.model = '',
		        JOB_TB.MODEL_NAME,
		        TEST_ITEM_TB.model
		    ) model,
		    MNFCT_SERIAL,
		    /* 고정 > 제조사 */
		    SBK_TB.MNFCT_CMPNY MNFCT_CMPNY,
		    /* 고정 > 제조국가 */
		    fn_code_name (SBK_TB.MNFCT_CNTRY_CODE, 'SN') MNFCT_CNTRY,
		    /* 고정 입수일 */
		    STR_TO_DATE (
		        concat (
		            SBK_TB.APP_YEAR,
		            LPAD (SBK_TB.APP_MON, 2, 0),
		            LPAD (SBK_TB.APP_DAY, 2, 0)
		        ),
		        '%Y%m%d'
		    ) RCPT_DT,
		    REPORT_NO,
		    REPORT_DT,
		    REPORT_MEMO,
		    TEST_S_DT,
		    TEST_E_DT,
		    TEST_BY,
		    FN_GET_IMAGE (RAW_TB.TEST_SIGN_URL, 0) TEST_SIGN_URL,
		    REV_BY,
		    FN_GET_IMAGE (RAW_TB.REV_SIGN_URL, 0) REV_SIGN_URL,
		    TBR_KC_EMC_YN,
		    TBR_KC_RF_EMC_YN,
		    TBR_EMCD_YN,
		    TBR_FCC_YN,
		    TBR_PSE_YN,
		    TBR_KT_YN,
		    TBR_ETC,
		    TBR_ETC_YN,
		    RAW_TB.CLASS_A_YN,
		    RAW_TB.CLASS_B_YN,
		    CLASS_ETC,
		    CLASS_ETC_YN,
		    PRD_EXPLN,
		    PRD_USES,
		    RAW_TB.CLOCK_FRQNC,
		    RAW_TB.CLOCK_FRQNC_CODE,
		    RATED_POWER,
		    TEST_POWER,
		    USER_PORT,
		    ADMIN_PORT,
		    PRD_FNC,
		    WRL_FNC,
		    CMP,
		    ETC,
		    WHT_USE_CRT_YN,
		    CRT_NBR,
		    CRT_MEMO,
		    MOD_URL,
		    MOD_MEMO,
		    RAW_TB.MOD_CHECK1_YN,
		    RAW_TB.MOD_CHECK2_YN,
		    RAW_TB.SYS_HEAD,
		    TEST_FLOOR_YN,
		    TEST_TABLE_YN,
		    TEST_FSTT_YN,
		    TEST_ETC_YN,
		    OPR_CND,
		    SETUP_URL,
		    STD_MEMO,
		    ADD_TEST_DIS,
		    ADD_TEST_CABLE,
		    ADD_TEST_DATA,
		    ADD_TEST_AUDIO
		FROM
		    RAW_TB
		    INNER JOIN TEST_TB ON RAW_TB.TEST_SEQ = TEST_TB.TEST_SEQ
		    INNER JOIN TEST_ITEM_TB ON TEST_TB.TEST_ITEM_SEQ = TEST_ITEM_TB.TEST_ITEM_SEQ
		    INNER JOIN JOB_TB ON TEST_ITEM_TB.QUO_YM = JOB_TB.QUO_YM 
		    AND TEST_ITEM_TB.QUO_SEQ = JOB_TB.QUO_SEQ
		    INNER JOIN SBK_TB ON JOB_TB.SBK_YM = SBK_TB.SBK_YM 
		    AND JOB_TB.SBK_SEQ = SBK_TB.SBK_SEQ AND JOB_TB.SBK_REVISION = SBK_TB.REVISION
		WHERE
		    1 = 1
		AND RAW_TB.TEST_SEQ = #{testSeq}
	</select>
	
	<select id="tchnList" parameterType="int" resultType="egovMap">
		SELECT TCHN_SEQ,
		    TYPE,
		    CHECK_YN,
		    TEXT,
		    STATE
		FROM RAW_TCHN_TB
		WHERE 1=1
		AND STATE != 'D'
		AND RAW_SEQ = #{rawSeq}
	</select>

	<select id="specList" parameterType="int" resultType="egovMap">
		SELECT SPEC_SEQ,
		    ITEM,
		    MEMO,
		    STATE
		FROM RAW_SPEC_TB
		WHERE 1=1
		AND STATE != 'D'
		AND RAW_SEQ = #{rawSeq}
	</select>
	
	<select id="asstnList" parameterType="int" resultType="egovMap">
		SELECT ASSTN_SEQ,
		    EQPMN,
		    MODEL,
		    SERIAL_NO,
		    MNFCT_CMPNY,
		    MEMO,
		    STATE
		FROM RAW_ASSTN_TB
		WHERE 1=1
		AND STATE != 'D'
		AND RAW_SEQ = #{rawSeq}
	</select>
	
	<select id="sysList" parameterType="int" resultType="egovMap">
		SELECT SYS_SEQ,
		    ITEM,
		    MODEL,
		    SERIAL_NO,
		    MNFCT_CMPNY,
		    MEMO,
		    STATE
		FROM RAW_SYS_TB
		WHERE 1=1
		AND STATE != 'D'
		AND RAW_SEQ = #{rawSeq}
	</select>
	
	<select id="cableList" parameterType="int" resultType="egovMap">
		SELECT CABLE_SEQ,
		    DF_NAME,
		    DF_MODE,
		    DF_PORT,
		    DT_NAME,
		    DT_PORT,
		    CS_M,
		    CS_YN,
		    STATE
		FROM RAW_CABLE_TB
		WHERE 1=1
		AND STATE != 'D'
		AND RAW_SEQ = #{rawSeq}
	</select>
	
	<insert id="insertMethod">
		<foreach collection="methodList" item="item" separator=";">
		INSERT INTO RAW_MET_TB
		(
			MET_SEQ,
			RAW_SEQ,
			CHECK_YN,
			TYPE,
			MEMO
		)
		VALUES
		(
			#{item.metSeq},
			#{rawSeq},
			#{item.checkYn},
			#{item.type},
			#{item.memo}
		)
		ON DUPLICATE KEY UPDATE
			CHECK_YN = #{item.checkYn},
			TYPE = #{item.type},
			MEMO = #{item.memo}
		</foreach>
	</insert>
	
	<select id="methodList" parameterType="int" resultType="rawMet">
		SELECT MET_SEQ,
		    CHECK_YN,
		    TYPE,
		    MEMO,
		    if(MEMO = '','',concat(@num:=@num+1,'. ',MEMO)) reportMemo, 
		    if(MEMO = '','',concat('NOTE ',@num)) as note
		FROM RAW_MET_TB,  (select @num:=0) note
		WHERE 1=1
		AND RAW_SEQ = #{rawSeq}
		ORDER BY MET_SEQ
	</select>
	
	
	<select id="info" parameterType="int" resultType="infoDTO">
		SELECT
		    JOB_TB.CMPY_NAME,
		    if (
		        TEST_ITEM_TB.model = '',
		        JOB_TB.MODEL_NAME,
		        TEST_ITEM_TB.model
		    ) MODEL,
		    if (
		        TEST_ITEM_TB.product = '',
		        JOB_TB.PRDCT_NAME,
		        TEST_ITEM_TB.product
		    ) PRODUCT,
		    SBK_TB.MNFCT_CMPNY,
		    SBK_TB.MNFCT_CNTRY_CODE,
		    fn_code_name (SBK_TB.MNFCT_CNTRY_CODE, 'SN') MNFCT_CNTRY,
		    STR_TO_DATE (
		        CONCAT (SBK_TB.APP_YEAR, SBK_TB.APP_MON, SBK_TB.APP_DAY),
		        '%Y%m%d'
		    ) receiptDt,
		    (
		        SELECT
		            DATE_FORMAT (INS_DT, '%Y-%m-%d')
		        FROM
		            TEST_STATE_TB
		        WHERE
		            TEST_SEQ = #{testSeq}
		            AND STATE_CODE = 2
		        ORDER BY
		            INS_DT DESC
		        LIMIT
		            1
		    ) testStartDt
		FROM
		    TEST_TB
		    INNER JOIN TEST_ITEM_TB on TEST_TB.TEST_ITEM_SEQ = TEST_ITEM_TB.TEST_ITEM_SEQ
		    INNER JOIN JOB_TB ON TEST_ITEM_TB.QUO_YM = JOB_TB.QUO_YM 
		    AND TEST_ITEM_TB.QUO_SEQ = JOB_TB.QUO_SEQ
		    INNER JOIN SBK_TB ON JOB_TB.SBK_YM = SBK_TB.SBK_YM
		    AND JOB_TB.SBK_SEQ = SBK_TB.SBK_SEQ AND JOB_TB.SBK_REVISION = SBK_TB.REVISION
		WHERE TEST_SEQ = #{testSeq}		
	</select>
	
	<select id="hisList" parameterType="String" resultType="egovMap">
		SELECT 
		
			date_format(RAW_HIS_TB.ins_dt, '%Y-%m-%d %T') intDtStr,
		    MEMBER_TB.MEM_NAME,
		    FN_POS_NAME(RAW_HIS_TB.MEM_ID) memPos
			
		FROM RAW_HIS_TB
		
			inner join MEMBER_TB
		    on RAW_HIS_TB.MEM_ID = MEMBER_TB.ID
		    
		WHERE 1=1
		AND RAW_HIS_TB.RAW_ID = #{rawSeq}
		
		order by RAW_HIS_TB.INS_DT desc
	</select>
	
	<select id="report" parameterType="int" resultType="reportDTO">
		SELECT
		    RAW_TB.SBK_ID,
		    CONCAT (
		        SBK_ID,
		        '-',
		        (
		            SELECT
		                CONCAT (TEST_TYPE_CODE, LPAD (TEST_TB.TEST_NO, 4, 0))
		            FROM
		                TEST_TB
		            WHERE
		                TEST_SEQ = RAW_TB.TEST_SEQ
		        )
		    ) testId,
		    /* 1	발급번호 */
		    REPORT_NO,
		    REPORT_DT,
		    REPORT_MEMO,
		    /* 2	접수일 */
		    DATE_FORMAT (STR_TO_DATE (
		        CONCAT (SBK_TB.APP_YEAR, SBK_TB.APP_MON, SBK_TB.APP_DAY),
		        '%Y%m%d'
		    ), '%Y년 %m월 %d일') RCPT_DT,
		    /* 3	시험기간 */
		    date_format (TEST_S_DT, '%Y년 %m월 %d일') TEST_S_DT,
		    date_format (TEST_E_DT, '%Y년 %m월 %d일') TEST_E_DT,
		    /* 4	고정 > 신청인(상호명) */
		    JOB_TB.CMPY_NAME APLCN,
		    /* 4-1	사업자등록번호 */
		    BSNS_RGNMB,
		    /* 4-2	대표자 성명 */
		    RPRSN,
		    /* 4-3	주소 */
		    ADDRESS,
		    /* 5	고정 > 기자재명칭 / 모델명 */
		    if (
		        TEST_ITEM_TB.product = '',
		        JOB_TB.PRDCT_NAME,
		        TEST_ITEM_TB.product
		    ) EQPMN,
		    if (
		        TEST_ITEM_TB.model = '',
		        JOB_TB.MODEL_NAME,
		        TEST_ITEM_TB.model
		    ) MODEL,
		    MNFCT_SERIAL,
		    /* 6	고정 > 제조자 / 제조국가 */
		    SBK_TB.MNFCT_CMPNY MNFCT_CMPNY,
		    fn_code_name (SBK_TB.MNFCT_CNTRY_CODE, 'SN') MNFCT_CNTRY,
		    /* 1-1. 시험기자재 (제품구분) */
		    RAW_TB.CLASS_A_YN,
		    RAW_TB.CLASS_B_YN,
		    /* 1-2. 시험기준 >> 고정 */
		    TBR_KC_EMC_YN,
		    TBR_KC_RF_EMC_YN,
		    TBR_EMCD_YN,
		    TBR_FCC_YN,
		    TBR_PSE_YN,
		    TBR_KT_YN,
		    TBR_ETC,
		    TBR_ETC_YN,
		    RAW_TB.CLASS_A_YN rawClassAYn,
		    RAW_TB.CLASS_B_YN rawClassBYn,
		    CLASS_ETC rawClassEtc,
		    CLASS_ETC_YN rawClassEtcYn,
		    /* 1-3. 시험방법 >> 고정*/
		    /* 1-4. 인증받은 모듈 사용 유무 */
		    WHT_USE_CRT_YN,
		    CRT_NBR,
		    CRT_MEMO,
		    /* 1-5. 특기사항 */
		    STD_MEMO,
		    /* 1. 시험원 */
		    TEST_BY,
		    FN_GET_IMAGE (RAW_TB.TEST_SIGN_URL, 0) TEST_SIGN_URL,
		    REV_BY,
		    FN_GET_IMAGE (RAW_TB.REV_SIGN_URL, 0) REV_SIGN_URL,
		    /* 3.2 시험항목 >> methodList */
		    /* 3.3 피시험기기의 보완내용 >> modList  */
		    MOD_URL,
		    MOD_MEMO,
		    RAW_TB.MOD_CHECK1_YN,
		    RAW_TB.MOD_CHECK2_YN,
		    RAW_TB.SYS_HEAD,
		    /* 4.1 제품 개요 */
		    PRD_EXPLN,
		    PRD_USES,
		    /* 4.2 기술 제원 */
		    FN_CODE_NAME (CLOCK_FRQNC_CODE, 'RC') CLOCK_FRQNC_CODE,
		    RAW_TB.CLOCK_FRQNC,
		    RATED_POWER,
		    TEST_POWER,
		    USER_PORT,
		    ADMIN_PORT,
		    PRD_FNC,
		    WRL_FNC,
		    CMP,
		    ETC,
		    /* 5.1 전체구성 >> AsstnList */
		    /* 5.2 시스템구성 (시험기자재가 컴퓨터 및 시스템인 경우) >> sysList */
		    /* 5.3 접속 케이블 >> cableList */
		    /* 5.4 시험기자재의 동작상태 */
		    TEST_FLOOR_YN,
		    TEST_TABLE_YN,
		    TEST_FSTT_YN,
		    TEST_ETC_YN,
		    OPR_CND,
		    /* 5.5 배치도 >> setupList */
		    SETUP_URL,
		    /* 8. 추가시험 요건 */
		    ADD_TEST_DIS,
		    ADD_TEST_CABLE,
		    ADD_TEST_DATA,
		    ADD_TEST_AUDIO,
		    SBK_ID
		FROM
		    RAW_TB
		    INNER JOIN TEST_TB ON RAW_TB.TEST_SEQ = TEST_TB.TEST_SEQ
		    INNER JOIN TEST_ITEM_TB ON TEST_TB.TEST_ITEM_SEQ = TEST_ITEM_TB.TEST_ITEM_SEQ
		    INNER JOIN JOB_TB ON TEST_ITEM_TB.QUO_YM = JOB_TB.QUO_YM 
		    AND TEST_ITEM_TB.QUO_SEQ = JOB_TB.QUO_SEQ
		    INNER JOIN SBK_TB ON JOB_TB.SBK_YM = SBK_TB.SBK_YM 
		    AND JOB_TB.SBK_SEQ = SBK_TB.SBK_SEQ AND JOB_TB.SBK_REVISION = SBK_TB.REVISION
		WHERE RAW_SEQ = #{rawSeq}
	</select>
	
	<insert id="insertFile" parameterType="fileRaw">
		INSERT INTO FILE_RAW_TB
		(
			TEST_SEQ,
			FILE_TYPE,
			TITLE,
			ATCH_FILE_ID,
			INS_MEM_ID,
			UDT_MEM_ID
		)
		VALUES
		(
			#{testSeq},
			#{fileType},
			#{title},
			#{atchFileId},
			#{insMemId},
			#{udtMemId}
		)
	</insert>

	<select id="fileRawListCnt" resultType="int">
	SELECT COUNT(1) FROM (	
		select
			count(1)
		from FILE_RAW_TB
			inner join FILE_DETAIL_TB
		    ON FILE_RAW_TB.ATCH_FILE_ID = FILE_DETAIL_TB.ATCH_FILE_ID
		where 1=1
		and test_seq = #{testSeq}
		<if test="comParam.searchVO != null">
	        <foreach collection="comParam.searchVO" item="item" separator="">
	       
	        	<choose>
	        		<!-- 2	작성자 -->
					<when test="item.searchCode == 2">and IFNULL(FN_MEM_NAME(FILE_RAW_TB.INS_MEM_ID), '') like concat('%',#{item.searchWord},'%')</when>
					<!-- 15	작성일 -->
					<when test="item.searchCode == 15">and date_format(FILE_RAW_TB.ins_dt, '%Y%m%d') between date_format(#{item.startDate}, '%Y%m%d') and date_format(#{item.endDate}, '%Y%m%d')</when>
					<!-- 32	첨부파일용도 -->
					<when test="item.searchCode == 32">and file_type = #{item.searchWord}</when>
					<!-- 33	제목 -->
					<when test="item.searchCode == 33">and IFNULL(FILE_RAW_TB.title, '') like concat('%',#{item.searchWord},'%')</when>
					<!-- 34	파일명 -->
	        		<when test="item.searchCode == 34">and IFNULL(FILE_DETAIL_TB.ORIGNL_FILE_NM, '') like concat('%',#{item.searchWord},'%')</when>
	        	</choose>
	        	
	        </foreach>
        </if>
		group by FILE_RAW_TB.file_raw_seq
        
    ) cnt
	</select>

	<resultMap type="fileRawDTO" id="fileRawMap">
		<id column="file_raw_seq" property="fileRawSeq"/>
		<result column="no" property="no"/>
		<result column="insDtStr" property="insDtStr"/>
		<result column="file_type" property="fileType"/>
		<result column="title" property="title"/>
		<result column="memName" property="memName"/>
		<collection property="fileList" ofType="FileVO">
			<result column="ORIGNL_FILE_NM" property="orignlFileNm"/>
			<result column="ATCH_FILE_ID" property="atchFileId"/>
			<result column="FILE_SN" property="fileSn"/>
		</collection>
	</resultMap>
	<select id="fileRawList" resultMap="fileRawMap">
		set @dense_rank:=0;
		set @prev_value:=null;
		
		SELECT
		    if(
		        @prev_value = file_raw_seq,
		        @dense_rank,
		        @dense_rank := @dense_rank + 1
		    ) AS no,
		    @prev_value := file_raw_seq,
		    lst.*
		FROM
		    (
				SELECT
				    FILE_RAW_SEQ,
				    TEST_SEQ testSeq,
				    DATE_FORMAT (FILE_RAW_TB.ins_dt, '%Y-%m-%d') insDtStr,
				    FN_CODE_NAME (FILE_TYPE, 'RF') file_type,
				    TITLE,
				    FN_MEM_NAME (FILE_RAW_TB.ins_mem_id) memName,
				    FILE_DETAIL_TB.ORIGNL_FILE_NM,
				    FILE_DETAIL_TB.ATCH_FILE_ID,
				    FILE_DETAIL_TB.FILE_SN
				FROM
				    FILE_RAW_TB
				    INNER JOIN FILE_DETAIL_TB ON FILE_RAW_TB.ATCH_FILE_ID = FILE_DETAIL_TB.ATCH_FILE_ID
				WHERE
				    1 = 1
				AND TEST_SEQ = #{testSeq}
			<if test="comParam.searchVO != null">
		        <foreach collection="comParam.searchVO" item="item" separator="">
		       
		        	<choose>
		        		<!-- 2	작성자 -->
						<when test="item.searchCode ==  2">AND IFNULL(FN_MEM_NAME(FILE_RAW_TB.INS_MEM_ID), '') like concat('%',#{item.searchWord},'%')</when>
						<!-- 15	작성일 -->
						<when test="item.searchCode == 15">AND DATE_FORMAT (FILE_RAW_TB.ins_dt, '%Y%m%d') BETWEEN date_format(#{item.startDate}, '%Y%m%d') AND date_format(#{item.endDate}, '%Y%m%d')</when>
						<!-- 32	첨부파일용도 -->
						<when test="item.searchCode == 32">AND FILE_TYPE = #{item.searchWord}</when>
						<!-- 33	제목 -->
						<when test="item.searchCode == 33">AND IFNULL(FILE_RAW_TB.title, '') like concat('%',#{item.searchWord},'%')</when>
						<!-- 34	파일명 -->
		        		<when test="item.searchCode == 34">AND IFNULL(FILE_DETAIL_TB.ORIGNL_FILE_NM, '') like concat('%',#{item.searchWord},'%')</when>
		        	</choose>
		        	
		        </foreach>
	        </if>
			ORDER BY FILE_RAW_TB.FILE_RAW_SEQ
		) lst
        WHERE 1=1
        order by no desc
	</select>
	
</mapper>



