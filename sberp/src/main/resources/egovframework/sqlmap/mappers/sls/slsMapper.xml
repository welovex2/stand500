<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="egovframework.sls.service.SlsMapper">

	<select id="selectListCnt" parameterType="comParam" resultType="int">
		SELECT
			Count(distinct slsId)
		from(
			SELECT
					
				    FN_GET_SEQSTRING ('M', SLS_TB.sls_ym, '', SLS_TB.sls_seq) slsId
			FROM
			    SLS_TB
			    inner join QUO_TB on (
			        SLS_TB.quo_ym = QUO_TB.quo_ym
			        and SLS_TB.quo_seq = QUO_TB.quo_seq
			    )
			    
			   LEFT JOIN (
					SELECT QUO_YM, QUO_SEQ, sum(CHRGS) CHRGS, sum(NET_SALES) NET_SALES
					FROM TEST_ITEM_TB
			        where state != 'D'
			        group by QUO_YM, QUO_SEQ
			    ) items
			    ON QUO_TB.QUO_YM = items.QUO_YM
			    AND QUO_TB.quo_seq = items.QUO_SEQ
			    
			    INNER JOIN JOB_TB ON SLS_TB.QUO_YM = JOB_TB.QUO_YM
			    AND SLS_TB.quo_seq = JOB_TB.QUO_SEQ
			    AND JOB_TB.state != 'D'
			    INNER JOIN BILL_TB ON SLS_TB.SLS_YM = BILL_TB.SLS_YM
			    AND SLS_TB.SLS_SEQ = BILL_TB.SLS_SEQ
			    INNER JOIN MEMBER_TB ON SLS_TB.cnfrm_id = MEMBER_TB.id
			    LEFT JOIN CMPY_TB ON JOB_TB.CMPY_SEQ = CMPY_TB.CMPY_SEQ
			    LEFT JOIN QUO_MOD_TB ON QUO_MOD_TB.QUO_MOD_SEQ = (
			        select
			            QUO_MOD_SEQ
			        from
			            QUO_MOD_TB sub
			        where
			            sub.quo_ym = QUO_TB.quo_ym
			            and sub.quo_seq = QUO_TB.quo_seq
			        order by
			            QUO_MOD_SEQ desc
			        limit
			            1
			    )
			WHERE
			    1 = 1
			    AND SLS_TB.STATE != 'D'
			    
				<include refid="whereList"/>
				
			UNION ALL
            
			SELECT
				
			    FN_GET_SEQSTRING ('M', SLS_TB.sls_ym, '', SLS_TB.sls_seq) slsId
			    
			FROM
			    SLS_TB
			    inner join QUO_TB on
			        SLS_TB.chq_ym = QUO_TB.chq_ym
			        and SLS_TB.chq_seq = QUO_TB.chq_seq
			    
			    
			   LEFT JOIN (
					SELECT QUO_YM, QUO_SEQ, sum(CHRGS) CHRGS, sum(NET_SALES) NET_SALES
					FROM TEST_ITEM_TB
			        where state != 'D'
			        group by QUO_YM, QUO_SEQ
			    ) items
			    ON QUO_TB.QUO_YM = items.QUO_YM
			    AND QUO_TB.quo_seq = items.QUO_SEQ
			    
			    INNER JOIN JOB_TB ON QUO_TB.QUO_YM = JOB_TB.QUO_YM
			    AND QUO_TB.quo_seq = JOB_TB.QUO_SEQ
			    AND JOB_TB.state != 'D'
			    INNER JOIN BILL_TB ON SLS_TB.SLS_YM = BILL_TB.SLS_YM
			    AND SLS_TB.SLS_SEQ = BILL_TB.SLS_SEQ
			    INNER JOIN MEMBER_TB ON SLS_TB.cnfrm_id = MEMBER_TB.id
			    LEFT JOIN CMPY_TB ON JOB_TB.CMPY_SEQ = CMPY_TB.CMPY_SEQ
			    
			WHERE
			    1 = 1
			    AND SLS_TB.STATE != 'D'  
			    
				<include refid="whereListChq"/>
			
                GROUP BY SLS_TB.CHQ_YM, SLS_TB.CHQ_SEQ
	         ) cnt
	</select>
	<resultMap type="slsRes" id="slsMap">
		<id column="slsId" property="slsId"/>
		<result column="no" property="no"/>
		<result column="chqId" property="chqId"/>
		<result column="quoId" property="quoId"/>
		<result column="cnfrmDtStr" property="cnfrmDtStr"/>
		<result column="cnfrmName" property="cnfrmName"/>
		<result column="cmpy_type" property="cmpyType"/>
		<result column="cmpyTitle" property="cmpyTitle"/>
		<result column="cmpyName" property="cmpyName"/>
		<result column="PRDCT_NAME" property="prdctName"/>
		<result column="CHRGS" property="chrgs"/>
		<result column="NET_SALES" property="netSales"/>
		<result column="ARREARS" property="arrears"/>
		<result column="MEMO" property="memo"/>
		<result column="quoState" property="quoState"/>
		<result column="prmsDtStr" property="prmsDtStr"/>
		<result column="prmsName" property="prmsName"/>
		<result column="canDelete" property="canDelete"/>
		<collection property="billList" ofType="billRes">
        	<id column="BILL_SEQ" property="billSeq"/>
        	<result column="BILL" property="bill"/>
	        <result column="BILL_YN" property="billYnStr"/>
    	    <result column="OTHER_BILL_DT" property="otherBillDt"/>
       	 	<result column="PAY_CODE" property="payCode"/>
        </collection>
	</resultMap>
	<select id="selectList" parameterType="comParam" resultMap="slsMap">
		set @dense_rank:=0;
		set @prev_value:=null;
		select * from (
			select
			    if(
			        @prev_value = slsId,
			        @dense_rank,
			        @dense_rank := @dense_rank + 1
			    ) AS no,
			    @prev_value := slsId,
			    lst.*
		FROM (
			SELECT * FROM (
				SELECT
				    FN_GET_SEQSTRING ('M', SLS_TB.sls_ym, '', SLS_TB.sls_seq) slsId,
				    if (
				        QUO_TB.chq_seq = 0,
				        '-',
				        concat (
				            'CH',
				            SLS_TB.CHQ_YM,
				            '-',
				            LPAD (SLS_TB.CHQ_SEQ, 3, 0)
				        )
				    ) chqId,
				    FN_GET_SEQSTRING ('Q', QUO_TB.quo_ym, QUO_TB.type, QUO_TB.quo_seq) quoId,
				    IFNULL (DATE_FORMAT(SLS_TB.CNFRM_DT, '%Y-%m-%d'), '') cnfrmDtStr,
				    MEMBER_TB.MEM_NAME cnfrmName,
				    IFNULL (FN_CODE_NAME (CMPY_TB.CMPY_CODE, 'PT'), '미등록') cmpy_type,
				    IFNULL (CMPY_TB.CMPY_NAME, '') cmpyTitle,
				    IFNULL (JOB_TB.CMPY_NAME, '') cmpyName,
				    JOB_TB.PRDCT_NAME,
				    SLS_TOTAL CHRGS,
				    /* 견적서 수정 바로 연동되야할때 사용 */
				    IFNULL (TOTAL_VAT, 0) QUO_CHRGS,
				    IFNULL (items.NET_SALES, 0) NET_SALES,
				    IFNULL (ARREARS, items.NET_SALES) ARREARS,
				    IF (SLS_TB.SLS_TOTAL=SLS_TB.ARREARS,'Y','N') canDelete,
				    BILL_SEQ,
				    BILL_TB.BILL,
				    IF (BILL_YN=1, '발행완료', '미발행') BILL_YN,
				    IFNULL (DATE_FORMAT(OTHER_BILL_DT, '%Y-%m-%d'), '변경') OTHER_BILL_DT,
				    IFNULL (CONCAT(fn_code_name (PAY_CODE, 'MP'),' (',DATE_FORMAT(PAY_DT, '%y-%m-%d'),')'), '미납') PAY_CODE,
				    SLS_TB.MEMO,
				    IFNULL (fn_code_name (QUO_MOD_TB.STATE_CODE, 'MM'), '-') quoState,
				    IFNULL (DATE_FORMAT(QUO_MOD_TB.PRMS_DT, '%Y-%m-%d'), DATE_FORMAT(QUO_MOD_TB.INS_DT, '%Y-%m-%d')) prmsDtStr,
				    IFNULL (FN_MEM_NAME (QUO_MOD_TB.PRMS_ID), FN_MEM_NAME (QUO_MOD_TB.INS_MEM_ID)) prmsName
				FROM
				    SLS_TB
				    inner join QUO_TB on (
				        SLS_TB.quo_ym = QUO_TB.quo_ym
				        and SLS_TB.quo_seq = QUO_TB.quo_seq
				    )
				    
				   LEFT JOIN (
						SELECT QUO_YM, QUO_SEQ, sum(CHRGS) CHRGS, sum(NET_SALES) NET_SALES
						FROM TEST_ITEM_TB
				        where state != 'D'
				        group by QUO_YM, QUO_SEQ
				    ) items
				    ON QUO_TB.QUO_YM = items.QUO_YM
				    AND QUO_TB.quo_seq = items.QUO_SEQ
				    
				    INNER JOIN JOB_TB ON SLS_TB.QUO_YM = JOB_TB.QUO_YM
				    AND SLS_TB.quo_seq = JOB_TB.QUO_SEQ
				    AND JOB_TB.state != 'D'
				    INNER JOIN BILL_TB ON SLS_TB.SLS_YM = BILL_TB.SLS_YM
				    AND SLS_TB.SLS_SEQ = BILL_TB.SLS_SEQ
				    INNER JOIN MEMBER_TB ON SLS_TB.cnfrm_id = MEMBER_TB.id
				    LEFT JOIN CMPY_TB ON JOB_TB.CMPY_SEQ = CMPY_TB.CMPY_SEQ
				    LEFT JOIN QUO_MOD_TB ON QUO_MOD_TB.QUO_MOD_SEQ = (
				        select
				            QUO_MOD_SEQ
				        from
				            QUO_MOD_TB sub
				        where
				            sub.quo_ym = QUO_TB.quo_ym
				            and sub.quo_seq = QUO_TB.quo_seq
				        order by
				            QUO_MOD_SEQ desc
				        limit
				            1
				    )
				WHERE
				    1 = 1
				    and SLS_TB.STATE != 'D'
					
					<include refid="whereList"/>
				
				UNION ALL
	            
				SELECT
				    FN_GET_SEQSTRING ('M', SLS_TB.sls_ym, '', SLS_TB.sls_seq) slsId,
				    if (
				        QUO_TB.chq_seq = 0,
				        '-',
				        concat (
				            'CH',
				            SLS_TB.CHQ_YM,
				            '-',
				            LPAD (SLS_TB.CHQ_SEQ, 3, 0)
				        )
				    ) chqId,
				    GROUP_CONCAT(FN_GET_SEQSTRING ('Q', QUO_TB.quo_ym, QUO_TB.type, QUO_TB.quo_seq) SEPARATOR ', ') quoId,
				    IFNULL (DATE_FORMAT(SLS_TB.CNFRM_DT, '%Y-%m-%d'), '') cnfrmDtStr,
				    MEMBER_TB.MEM_NAME cnfrmName,
				    IFNULL (FN_CODE_NAME (CMPY_TB.CMPY_CODE, 'PT'), '미등록') cmpy_type,
				    IFNULL (CMPY_TB.CMPY_NAME, '') cmpyTitle,
				    '-' cmpyName,
				    '-' PRDCT_NAME,
				    SLS_TOTAL CHRGS,
				    /* 견적서 수정 바로 연동되야할때 사용 */
				    SUM(QUO_TB.TOTAL_VAT) QUO_CHRGS,
				    SUM(items.NET_SALES) NET_SALES,
				    ifnull (ARREARS, SUM(items.CHRGS)) ARREARS,
				    IF (SLS_TB.SLS_TOTAL=SLS_TB.ARREARS,'Y','N') canDelete,
				    BILL_SEQ,
				    BILL_TB.BILL,
				    IF (BILL_YN=1, '발행완료', '미발행') BILL_YN,
				    ifnull (DATE_FORMAT(OTHER_BILL_DT, '%Y-%m-%d'), '변경') OTHER_BILL_DT,
				    IFNULL(CONCAT(fn_code_name (PAY_CODE, 'MP'),' (', DATE_FORMAT(PAY_DT, '%y-%m-%d'),')'), '미납') PAY_CODE,
				    SLS_TB.MEMO,
				    '-' quoState,
				    '-' prmsDtStr,
				    '-' prmsName
				FROM
				    SLS_TB
				    inner join QUO_TB on
				        SLS_TB.chq_ym = QUO_TB.chq_ym
				        and SLS_TB.chq_seq = QUO_TB.chq_seq
				    
				    
				   LEFT JOIN (
						SELECT QUO_YM, QUO_SEQ, sum(CHRGS) CHRGS, sum(NET_SALES) NET_SALES
						FROM TEST_ITEM_TB
				        where state != 'D'
				        group by QUO_YM, QUO_SEQ
				    ) items
				    ON QUO_TB.QUO_YM = items.QUO_YM
				    AND QUO_TB.quo_seq = items.QUO_SEQ
				    
				    INNER JOIN JOB_TB ON QUO_TB.QUO_YM = JOB_TB.QUO_YM
				    AND QUO_TB.quo_seq = JOB_TB.QUO_SEQ
				    AND JOB_TB.state != 'D'
				    INNER JOIN BILL_TB ON SLS_TB.SLS_YM = BILL_TB.SLS_YM
				    AND SLS_TB.SLS_SEQ = BILL_TB.SLS_SEQ
				    INNER JOIN MEMBER_TB ON SLS_TB.cnfrm_id = MEMBER_TB.id
				    LEFT JOIN CMPY_TB ON JOB_TB.CMPY_SEQ = CMPY_TB.CMPY_SEQ
				    
				WHERE
				    1 = 1
				    AND SLS_TB.STATE != 'D'  
				    
				    <include refid="whereListChq"/>
				
	                GROUP BY SLS_TB.CHQ_YM, SLS_TB.CHQ_SEQ
	                ORDER BY slsId ASC
			) uni
			
	        
        ) lst
	        WHERE 1=1
	        order by no desc
        ) paging
        WHERE 1=1
        AND no BETWEEN #{totalCount}+1-#{pageUnit}-#{firstIndex} AND #{totalCount}-#{firstIndex}
	</select>
	
	<sql id="whereList">
		<if test="searchVO != null">
	        <foreach collection="searchVO" item="item" separator="">
	        	<choose>
					<!-- 1	고객유형 -->
					<when test="item.searchCode == 1">and ifnull(CMPY_TB.CMPY_CODE,'9999') = #{item.searchWord}</when>
					<!-- 4	컨설팅명 -->
					<when test="item.searchCode == 4">and IFNULL(CMPY_TB.CMPY_NAME, '') like concat('%',#{item.searchWord},'%')</when>
					<!-- 6	제품명 -->
					<when test="item.searchCode == 6">and IFNULL(JOB_TB.PRDCT_NAME, '') like concat('%',#{item.searchWord},'%')</when>
					<!-- 12	회사명 -->
					<when test="item.searchCode == 12">and IFNULL(JOB_TB.CMPY_NAME, '') like concat('%',#{item.searchWord},'%')</when>
					<!-- 16	매출확정일 -->
					<when test="item.searchCode == 16">and date_format(SLS_TB.CNFRM_DT, '%Y%m%d') between date_format(#{item.startDate}, '%Y%m%d') and date_format(#{item.endDate}, '%Y%m%d')</when>
					<!-- 19	매출확정자 -->
					<when test="item.searchCode == 19">and IFNULL(MEMBER_TB.MEM_NAME, '') like concat('%',#{item.searchWord},'%')</when>
					<!-- 30	수정요청 -->
					<when test="item.searchCode == 30">and IFNULL(QUO_MOD_TB.STATE_CODE, '') = #{item.searchWord}</when>
					<!-- 46	미수금액 -->
					<when test="item.searchCode == 46">
						<if test="item.searchWord == 0">and ARREARS = 0</if>
						<if test="item.searchWord == 1">and ARREARS != 0</if>
					</when>
					<!-- 28	납부상태 -->
					<when test="item.searchCode == 28">AND IFNULL(PAY_CODE, '0') = #{item.searchWord}</when>
					<!-- 29	발행여부 -->
					<when test="item.searchCode == 29">AND IFNULL(BILL_YN, '0') = #{item.searchWord}</when>
					<!-- 5	견적서번호 -->
					<when test="item.searchCode == 5">AND CONCAT ('Q', QUO_TB.QUO_YM, '-' , QUO_TB.TYPE, LPAD(QUO_TB.QUO_SEQ,4,0)) LIKE CONCAT ('%',#{item.searchWord},'%')</when>
					<!-- 69 취합견적서번호 -->
					<when test="item.searchCode == 69">AND IF ( QUO_TB.CHQ_SEQ = 0,
													        '',
													        CONCAT (
													            'CH',
													            SLS_TB.CHQ_YM,
													            '-',
													            LPAD (SLS_TB.CHQ_SEQ, 3, 0)
													        )
													    ) LIKE CONCAT('%',#{item.searchWord},'%')</when>
					<!-- 70 매출번호 -->
					<when test="item.searchCode == 70">AND FN_GET_SEQSTRING ('M', SLS_TB.sls_ym, '', SLS_TB.sls_seq) LIKE CONCAT ('%',#{item.searchWord},'%')</when>
					<!-- 71 납부완료일 -->
					<when test="item.searchCode == 71">AND DATE_FORMAT(BILL_TB.PAY_DT, '%Y%m%d') between date_format(#{item.startDate}, '%Y%m%d') and date_format(#{item.endDate}, '%Y%m%d')</when>
					<!-- 72 계산서발행일 -->
					<when test="item.searchCode == 72">AND DATE_FORMAT(BILL_TB.OTHER_BILL_DT, '%Y%m%d') between date_format(#{item.startDate}, '%Y%m%d') and date_format(#{item.endDate}, '%Y%m%d')</when>
	
	        	</choose>
			</foreach>
		</if>
	</sql>
	<sql id="whereListChq">
		<if test="searchVO != null">
	        <foreach collection="searchVO" item="item" separator="">
	        	<choose>
					<!-- 1	고객유형 -->
					<when test="item.searchCode == 1">and ifnull(CMPY_TB.CMPY_CODE,'9999') = #{item.searchWord}</when>
					<!-- 4	컨설팅명 -->
					<when test="item.searchCode == 4">and IFNULL(CMPY_TB.CMPY_NAME, '') like concat('%',#{item.searchWord},'%')</when>
					<!-- 6	제품명 -->
					<when test="item.searchCode == 6">and IFNULL(JOB_TB.PRDCT_NAME, '') like concat('%',#{item.searchWord},'%')</when>
					<!-- 12	회사명 -->
					<when test="item.searchCode == 12">and IFNULL(JOB_TB.CMPY_NAME, '') like concat('%',#{item.searchWord},'%')</when>
					<!-- 16	매출확정일 -->
					<when test="item.searchCode == 16">and date_format(SLS_TB.CNFRM_DT, '%Y%m%d') between date_format(#{item.startDate}, '%Y%m%d') and date_format(#{item.endDate}, '%Y%m%d')</when>
					<!-- 19	매출확정자 -->
					<when test="item.searchCode == 19">and IFNULL(MEMBER_TB.MEM_NAME, '') like concat('%',#{item.searchWord},'%')</when>
					<!-- 30	수정요청 -->
					<when test="item.searchCode == 30">and 1 != 1</when>
					<!-- 46	미수금액 -->
					<when test="item.searchCode == 46">
						<if test="item.searchWord == 0">and ARREARS = 0</if>
						<if test="item.searchWord == 1">and ARREARS != 0</if>
					</when>
					<!-- 28	납부상태 -->
					<when test="item.searchCode == 28">AND IFNULL(PAY_CODE, '0') = #{item.searchWord}</when>
					<!-- 29	발행여부 -->
					<when test="item.searchCode == 29">AND IFNULL(BILL_YN, '0') = #{item.searchWord}</when>
					<!-- 5	견적서번호 -->
					<when test="item.searchCode == 5">AND CONCAT ('Q', QUO_TB.QUO_YM, '-' , QUO_TB.TYPE, LPAD(QUO_TB.QUO_SEQ,4,0)) LIKE CONCAT ('%',#{item.searchWord},'%')</when>
					<!-- 69 취합견적서번호 -->
					<when test="item.searchCode == 69">AND IF ( QUO_TB.CHQ_SEQ = 0,
													        '',
													        CONCAT (
													            'CH',
													            SLS_TB.CHQ_YM,
													            '-',
													            LPAD (SLS_TB.CHQ_SEQ, 3, 0)
													        )
													    ) LIKE CONCAT('%',#{item.searchWord},'%')</when>
					<!-- 70 매출번호 -->
					<when test="item.searchCode == 70">AND FN_GET_SEQSTRING ('M', SLS_TB.sls_ym, '', SLS_TB.sls_seq) LIKE CONCAT ('%',#{item.searchWord},'%')</when>
					<!-- 71 납부완료일 -->
					<when test="item.searchCode == 71">AND DATE_FORMAT(BILL_TB.PAY_DT, '%Y%m%d') between date_format(#{item.startDate}, '%Y%m%d') and date_format(#{item.endDate}, '%Y%m%d')</when>
					<!-- 72 계산서발행일 -->
					<when test="item.searchCode == 72">AND DATE_FORMAT(BILL_TB.OTHER_BILL_DT, '%Y%m%d') between date_format(#{item.startDate}, '%Y%m%d') and date_format(#{item.endDate}, '%Y%m%d')</when>

	        	</choose>
			</foreach>
		</if>
	</sql>
	
	<insert id="insert" parameterType="slsReq" >
		 <selectKey resultType="String" keyProperty="slsId" order="AFTER">
	        SELECT FN_GET_SEQSTRING ('M', date_format(now(), '%y%m'), '', MAX(sls_seq)) slsId FROM SLS_TB WHERE SLS_YM = date_format(now(), '%y%m');
	    </selectKey>
		INSERT INTO SLS_TB
		(
			SLS_YM,
			SLS_SEQ,
			<if test="quoId != null and quoId != ''">
			QUO_YM,
			QUO_SEQ,
			SLS_TOTAL,
			ARREARS,
			</if>
			<if test="chqId != null and chqId != ''">
			CHQ_YM,
			CHQ_SEQ,
			SLS_TOTAL,
			ARREARS,
			</if>
			CNFRM_ID,
			CNFRM_DT,
			INS_MEM_ID,
			UDT_MEM_ID
		)
		VALUES
		(
			date_format(now(), '%y%m'),
			(SELECT ifnull(max(sub.SLS_SEQ),0)+1 FROM SLS_TB sub WHERE sub.SLS_YM = date_format(now(), '%y%m')),
			<if test="quoId != null and quoId != ''">
			substring(#{quoId},2,4),
			substring(#{quoId},8,4),
			(SELECT TOTAL_VAT CHRGS FROM QUO_TB where state != 'D' AND QUO_YM = substring(#{quoId},2,4) AND QUO_SEQ = substring(#{quoId},8,4)),
			(SELECT TOTAL_VAT CHRGS FROM QUO_TB where state != 'D' AND QUO_YM = substring(#{quoId},2,4) AND QUO_SEQ = substring(#{quoId},8,4)),
			</if>
			<if test="chqId != null and chqId != ''">
			substring(#{chqId},3,4),
			substring(#{chqId},8,3),
			(SELECT
			    sum(TOTAL_VAT) CHRGS
			FROM QUO_TB 
			where 1=1
			    AND QUO_TB.CHQ_YM = substring(#{chqId}, 3, 4)
			    AND QUO_TB.CHQ_SEQ = substring(#{chqId}, 8, 3)
			group by
			    QUO_TB.CHQ_YM,
			    QUO_TB.CHQ_SEQ),
			(SELECT
			    sum(TOTAL_VAT) CHRGS
			FROM QUO_TB 
			where 1=1
			    AND QUO_TB.CHQ_YM = substring(#{chqId}, 3, 4)
			    AND QUO_TB.CHQ_SEQ = substring(#{chqId}, 8, 3)
			group by
			    QUO_TB.CHQ_YM,
			    QUO_TB.CHQ_SEQ),
			</if>
			#{insMemId},
			CURDATE(),
			#{insMemId},
			#{udtMemId}
		);
	</insert>
	
	<select id="selectDetail" parameterType="String" resultType="slsRes">
		SELECT sls_seq FROM SLS_TB
		WHERE 1=1
		<if test="quoId != null and quoId != ''">
		AND SLS_TB.QUO_YM = substring(#{quoId},2,4)
		AND SLS_TB.QUO_SEQ = substring(#{quoId},8,4)
		</if>
		<if test="chqId != null and chqId != ''">
		AND SLS_TB.CHQ_YM = substring(#{chqId},3,4)
		AND SLS_TB.CHQ_SEQ = substring(#{chqId},8,3)
		</if>
		and STATE != 'D'
	</select>
	
	<update id="updateQuoState" parameterType="slsReq">
		UPDATE QUO_TB
		SET
			QUO_STATE_CODE = #{quoStateCode},
			UDT_MEM_ID = #{udtMemId},
			UDT_DT = current_timestamp(),	
			STATE = 'U'
		WHERE QUO_TB.quo_ym = substring(#{quoId},2,4)
		AND QUO_TB.quo_seq = substring(#{quoId},8,4)
	</update>
	
	<update id="updateChqState" parameterType="slsReq">
		UPDATE QUO_TB
		SET
			QUO_STATE_CODE = #{quoStateCode},
			UDT_MEM_ID = #{udtMemId},
			UDT_DT = current_timestamp(),	
			STATE = 'U'
		WHERE QUO_TB.CHQ_YM = substring(#{chqId}, 3, 4)
		AND QUO_TB.CHQ_SEQ = substring(#{chqId}, 8, 3)
	</update>
	
	<select id="selectByTestListCnt" parameterType="comParam" resultType="int">
		SELECT
			Count(SLS_TB.sls_seq)
		FROM SLS_TB
         
			INNER join QUO_TB
			ON (
				(SLS_TB.quo_ym = QUO_TB.quo_ym and SLS_TB.quo_seq = QUO_TB.quo_seq)
				OR (SLS_TB.chq_ym = QUO_TB.chq_ym and SLS_TB.chq_seq = QUO_TB.chq_seq)
				)
			
			INNER JOIN JOB_TB ON QUO_TB.QUO_YM = JOB_TB.QUO_YM
			AND QUO_TB.QUO_SEQ = JOB_TB.QUO_SEQ
			AND JOB_TB.STATE != 'D'
			      
			INNER JOIN TEST_ITEM_TB
			ON QUO_TB.QUO_YM = TEST_ITEM_TB.QUO_YM
			AND QUO_TB.quo_seq = TEST_ITEM_TB.QUO_SEQ
			AND TEST_ITEM_TB.state != 'D'
			      
			LEFT JOIN TEST_STNDR_TB
			ON TEST_ITEM_TB.TEST_STNDR_SEQ = TEST_STNDR_TB.TEST_STNDR_SEQ
			
			LEFT JOIN TEST_CATE_TB cate4 ON TEST_ITEM_TB.CRTF_TYPE_SEQ = cate4.TEST_CATE_SEQ
			LEFT JOIN TEST_CATE_TB cate3 ON cate4.TOP_DEPTH_SEQ = cate3.TEST_CATE_SEQ
			LEFT JOIN TEST_CATE_TB cate2 ON cate3.TOP_DEPTH_SEQ = cate2.TEST_CATE_SEQ
			LEFT JOIN TEST_CATE_TB cate1 ON cate2.TOP_DEPTH_SEQ = cate1.TEST_CATE_SEQ
			      
			INNER JOIN MEMBER_TB
			ON SLS_TB.cnfrm_id = MEMBER_TB.id
			
			LEFT JOIN CMPY_TB
			ON JOB_TB.CMPY_SEQ = CMPY_TB.CMPY_SEQ
           
		WHERE 1=1
		AND SLS_TB.state != 'D'
	<if test="searchVO != null">
        <foreach collection="searchVO" item="item" separator="">
        	<choose>
        		<!-- 1	고객유형 -->
				<when test="item.searchCode == 1">and IFNULL (CMPY_TB.CMPY_CODE,'9999') = #{item.searchWord}</when>
				<!-- 4	컨설팅명 -->
				<when test="item.searchCode == 4">and IFNULL (CMPY_TB.CMPY_NAME, '') like concat('%',#{item.searchWord},'%')</when>
				<!-- 6	제품명 -->
				<when test="item.searchCode == 6">and IFNULL (JOB_TB.PRDCT_NAME, '') like concat('%',#{item.searchWord},'%')</when>
				<!-- 12	회사명 -->
				<when test="item.searchCode == 12">and IFNULL (JOB_TB.CMPY_NAME, '') like concat('%',#{item.searchWord},'%')</when>
				<!-- 16	매출확정일 -->
				<when test="item.searchCode == 16">and DATE_FORMAT(SLS_TB.CNFRM_DT, '%Y%m%d') between date_format(#{item.startDate}, '%Y%m%d') and date_format(#{item.endDate}, '%Y%m%d')</when>
				<!-- 19	매출확정자 -->
				<when test="item.searchCode == 19">and IFNULL (MEMBER_TB.MEM_NAME, '') like concat('%',#{item.searchWord},'%')</when>
				<!-- 23	시험부 -->
	       		<when test="item.searchCode == 23">AND TEST_ITEM_TB.TEST_TYPE_CODE IN
	       			<foreach collection="item.searchWords" item="sub" open="(" close=")" separator=",">#{sub}</foreach>
	       		</when>
       			<!-- 5	견적서번호 -->
				<when test="item.searchCode == 5">AND CONCAT ('Q', QUO_TB.QUO_YM, '-' , QUO_TB.TYPE, LPAD(QUO_TB.QUO_SEQ,4,0)) LIKE CONCAT ('%',#{item.searchWord},'%')</when>
				<!-- 69 취합견적서번호 -->
				<when test="item.searchCode == 69">AND IF ( QUO_TB.CHQ_SEQ = 0,
												        '',
												        CONCAT (
												            'CH',
												            SLS_TB.CHQ_YM,
												            '-',
												            LPAD (SLS_TB.CHQ_SEQ, 3, 0)
												        )
												    ) LIKE CONCAT('%',#{item.searchWord},'%')</when>

        	</choose>
		</foreach>
	</if>
	</select>
	<select id="selectByTestList" parameterType="comParam" resultType="slsRes">
		select 
			@rownum:=@rownum+1 as no,
			lst.*
		from (
			select
				FN_GET_SEQSTRING('M',SLS_TB.sls_ym,'',SLS_TB.sls_seq) slsId,
	            if(QUO_TB.chq_seq=0,'-',concat (
												'CH',
												SLS_TB.CHQ_YM,
												'-',
												LPAD (SLS_TB.CHQ_SEQ, 3, 0)
											)) chqId,
	            FN_GET_SEQSTRING('Q',QUO_TB.quo_ym,QUO_TB.type,QUO_TB.quo_seq) quoId,
	            IFNULL(date_format(SLS_TB.CNFRM_DT, '%Y-%m-%d'),'') cnfrmDtStr,
	            MEMBER_TB.MEM_NAME cnfrmName,
	            IFNULL(FN_CODE_NAME(CMPY_TB.CMPY_CODE,'PT'), '미등록') cmpy_type,
	            IFNULL(CMPY_TB.CMPY_NAME, '') cmpyTitle,
	            IFNULL(JOB_TB.CMPY_NAME, '') cmpyName,
	            JOB_TB.PRDCT_NAME,
	            JOB_TB.MODEL_NAME,
	            
	            concat(cate3.name,'-',cate4.name) testCate,
				fn_code_name(TEST_ITEM_TB.TEST_TYPE_CODE,'TT') TEST_TYPE,
	            
	            IFNULL (FEE+LCNS_TAX+SPCL_DSCNT+TEST_FEE, 0) COST_TOTAL,
	            IFNULL (TEST_FEE, 0) TEST_FEE,
				IFNULL (NET_SALES, 0) NET_SALES
	           
				
			FROM SLS_TB
	          
				inner join QUO_TB
	            on (SLS_TB.quo_ym = QUO_TB.quo_ym and SLS_TB.quo_seq = QUO_TB.quo_seq)
                or (SLS_TB.chq_ym = QUO_TB.chq_ym and SLS_TB.chq_seq = QUO_TB.chq_seq)
	
	           	INNER JOIN JOB_TB ON QUO_TB.QUO_YM = JOB_TB.QUO_YM
			    AND QUO_TB.QUO_SEQ = JOB_TB.QUO_SEQ
			    AND JOB_TB.STATE != 'D'
	            
	            INNER JOIN TEST_ITEM_TB
			    ON QUO_TB.QUO_YM = TEST_ITEM_TB.QUO_YM
			    AND QUO_TB.quo_seq = TEST_ITEM_TB.QUO_SEQ
	            and TEST_ITEM_TB.state != 'D'
	            
	            LEFT JOIN TEST_STNDR_TB
			    ON TEST_ITEM_TB.TEST_STNDR_SEQ = TEST_STNDR_TB.TEST_STNDR_SEQ
			    
			    LEFT JOIN TEST_CATE_TB cate4 ON TEST_ITEM_TB.CRTF_TYPE_SEQ = cate4.TEST_CATE_SEQ
			    LEFT JOIN TEST_CATE_TB cate3 ON cate4.TOP_DEPTH_SEQ = cate3.TEST_CATE_SEQ
			    LEFT JOIN TEST_CATE_TB cate2 ON cate3.TOP_DEPTH_SEQ = cate2.TEST_CATE_SEQ
			    LEFT JOIN TEST_CATE_TB cate1 ON cate2.TOP_DEPTH_SEQ = cate1.TEST_CATE_SEQ
	            
	            inner join MEMBER_TB
	            on SLS_TB.cnfrm_id = MEMBER_TB.id
				
	            LEFT JOIN CMPY_TB
				ON JOB_TB.CMPY_SEQ = CMPY_TB.CMPY_SEQ
				
				INNER JOIN (SELECT @rownum:=0) r
	            
			where 1=1
			AND SLS_TB.state != 'D'
			<if test="searchVO != null">
		        <foreach collection="searchVO" item="item" separator="">
		        	<choose>
		        		<!-- 1	고객유형 -->
						<when test="item.searchCode == 1">and IFNULL (CMPY_TB.CMPY_CODE,'9999') = #{item.searchWord}</when>
						<!-- 4	컨설팅명 -->
						<when test="item.searchCode == 4">and IFNULL (CMPY_TB.CMPY_NAME, '') like concat('%',#{item.searchWord},'%')</when>
						<!-- 6	제품명 -->
						<when test="item.searchCode == 6">and IFNULL (JOB_TB.PRDCT_NAME, '') like concat('%',#{item.searchWord},'%')</when>
						<!-- 12	회사명 -->
						<when test="item.searchCode == 12">and IFNULL (JOB_TB.CMPY_NAME, '') like concat('%',#{item.searchWord},'%')</when>
						<!-- 16	매출확정일 -->
						<when test="item.searchCode == 16">and DATE_FORMAT(SLS_TB.CNFRM_DT, '%Y%m%d') between date_format(#{item.startDate}, '%Y%m%d') and date_format(#{item.endDate}, '%Y%m%d')</when>
						<!-- 19	매출확정자 -->
						<when test="item.searchCode == 19">and IFNULL (MEMBER_TB.MEM_NAME, '') like concat('%',#{item.searchWord},'%')</when>
						<!-- 23	시험부 -->
			       		<when test="item.searchCode == 23">AND TEST_ITEM_TB.TEST_TYPE_CODE IN
			       			<foreach collection="item.searchWords" item="sub" open="(" close=")" separator=",">#{sub}</foreach>
			       		</when>
		  				<!-- 5	견적서번호 -->
						<when test="item.searchCode == 5">AND CONCAT ('Q', QUO_TB.QUO_YM, '-' , QUO_TB.TYPE, LPAD(QUO_TB.QUO_SEQ,4,0)) LIKE CONCAT ('%',#{item.searchWord},'%')</when>
						<!-- 69 취합견적서번호 -->
						<when test="item.searchCode == 69">AND IF ( QUO_TB.CHQ_SEQ = 0,
														        '',
														        CONCAT (
														            'CH',
														            SLS_TB.CHQ_YM,
														            '-',
														            LPAD (SLS_TB.CHQ_SEQ, 3, 0)
														        )
														    ) LIKE CONCAT('%',#{item.searchWord},'%')</when>
		        	</choose>
				</foreach>
			</if>
	        
	        order by SLS_TB.ins_dt asc
	    ) lst
	    order by no desc
		LIMIT #{pageUnit} OFFSET #{firstIndex};
	</select>
	
	<select id="selectPayList" parameterType="String" resultType="egovMap">
		select
			date_format(PAY_STATUS_TB.ins_dt, '%Y-%m-%d') instDtStr,
		    MEMBER_TB.MEM_NAME insName,
		    fn_code_name(PAY_STATUS_TB.state_code,'MP') stateType,
		    PAY,
		    memo
		from PAY_STATUS_TB
		
			inner join MEMBER_TB
			on PAY_STATUS_TB.ins_mem_id = MEMBER_TB.id
		
		where 1=1
		and PAY_STATUS_TB.sls_ym = substring(#{slsId},2,4)
		and PAY_STATUS_TB.sls_seq = substring(#{slsId},7,4)
		order by PAY_STATUS_SEQ desc
	</select>
	
	<insert id="payInsert" parameterType="PayReq" >
		INSERT INTO PAY_STATUS_TB
		(
			SLS_YM,
			SLS_SEQ,
			STATE_CODE,
			PAY,
			MEMO,
			INS_MEM_ID,
			UDT_MEM_ID
		)
		VALUES
		(
			substring(#{slsId},2,4),
			substring(#{slsId},7,4),
			#{stateCode},
			#{pay},
			#{memo},
			#{insMemId},
			#{udtMemId}
		);
	</insert>

	<select id="selectBillList" parameterType="String" resultType="egovMap">
		SELECT
		    DATE_FORMAT(BILL_TB.ins_dt, '%Y-%m-%d') instDtStr,
		    MEMBER_TB.MEM_NAME insName,
		    BILL,
		    IF (BILL_YN = 1, '발행완료', '미발행') billYnStr,
		    IFNULL (DATE_FORMAT(BILL_TB.BILL_DT, '%Y-%m-%d'),'') BILL_DT,
		    IFNULL (FN_MEM_NAME (bill_id),'') bill_id,
		    IFNULL (fn_code_name (PAY_CODE, 'MP'), '미납') PAY_CODE,
		    IFNULL (DATE_FORMAT(BILL_TB.PAY_DT, '%Y-%m-%d'),'') PAY_DT,
		    IFNULL (FN_MEM_NAME (pay_id),'') pay_id
		FROM
		    BILL_TB
		    inner join MEMBER_TB on BILL_TB.ins_mem_id = MEMBER_TB.id
		
		where 1=1
		and BILL_TB.sls_ym = substring(#{slsId},2,4)
		and BILL_TB.sls_seq = substring(#{slsId},7,4)
		order by BILL_SEQ desc
	</select>
	
	<insert id="billInsert" parameterType="slsReq" >
		INSERT INTO BILL_TB
		(
			SLS_YM,
			SLS_SEQ,
			BILL_SEQ,
			BILL,
			INS_MEM_ID,
			UDT_MEM_ID
		)
		VALUES
		(
			substring(#{slsId},2,4),
			substring(#{slsId},7,4),
			IF(#{billSeq}=0, (SELECT IFNULL(MAX(seq.BILL_SEQ)+1,1) billSeq FROM BILL_TB seq WHERE seq.SLS_YM = substring(#{slsId},2,4) AND seq.sls_seq = substring(#{slsId},7,4)), #{billSeq}),
			IF(#{bill}=0,(SELECT
							    sum(TOTAL_VAT) CHRGS
							FROM
							    QUO_TB 
							where
							    1=1
							    AND QUO_TB.CHQ_YM = substring(#{chqId}, 3, 4)
							    AND QUO_TB.CHQ_SEQ = substring(#{chqId}, 8, 3)
							group by
							    QUO_TB.CHQ_YM,
							    QUO_TB.CHQ_SEQ),#{bill}),
			#{insMemId},
			#{udtMemId}
		)
		ON DUPLICATE KEY UPDATE
			<if test="billYn == 1">
			BILL_YN = 1,
			BILL_DT = NOW(),
			BILL_ID = #{udtMemId},
			</if>
			<if test="payCode != null and payCode != ''">
			PAY_CODE = #{payCode},
			PAY_DT = #{payDt},
			PAY_ID = #{udtMemId},
			</if>
			<if test="otherBillDt != null and otherBillDt != ''">
			OTHER_BILL_DT = #{otherBillDt},
			</if>
			UDT_DT = NOW()
	</insert>
	
	<select id="selectQuoId" parameterType="String" resultType="String">
		SELECT FN_GET_SEQSTRING('Q',SLS_TB.QUO_YM,'G',SLS_TB.QUO_SEQ) quoId 
		FROM SLS_TB
		WHERE SLS_TB.sls_ym = substring(#{slsId},2,4)
		AND SLS_TB.sls_seq = substring(#{slsId},7,4)
	</select>
	
	<select id="selectChqId" parameterType="String" resultType="String">
		SELECT concat ('CH',SLS_TB.CHQ_YM,'-',LPAD (SLS_TB.CHQ_SEQ, 3, 0)) chqId 
		FROM SLS_TB
		WHERE SLS_TB.sls_ym = substring(#{slsId},2,4)
		AND SLS_TB.sls_seq = substring(#{slsId},7,4)
	</select>
	
	<update id="delete">
		UPDATE SLS_TB
		SET
			QUO_YM = '',
			QUO_SEQ = 0,
			UDT_MEM_ID = #{memId},
			UDT_DT = NOW(),
			STATE = 'D'
			
		WHERE SLS_TB.sls_ym = substring(#{slsId},2,4)
		AND SLS_TB.sls_seq = substring(#{slsId},7,4)
	</update>
	
	<update id="update" parameterType="slsReq">
		UPDATE SLS_TB
		SET
			ARREARS = ARREARS-(SELECT
								    bill
								FROM
								    BILL_TB
								where
								    sls_ym = substring(#{slsId},2,4)
								    and sls_seq = substring(#{slsId},7,4)
								    and bill_seq = #{billSeq}),
			UDT_MEM_ID = #{udtMemId},
			UDT_DT = NOW(),
			STATE = 'U'
			
		WHERE SLS_TB.sls_ym = substring(#{slsId},2,4)
		AND SLS_TB.sls_seq = substring(#{slsId},7,4)
	</update>
	
	<select id="selectQuoIdList" parameterType="String" resultType="String">
		SELECT
			FN_GET_SEQSTRING ('Q', QUO_TB.quo_ym, type, QUO_TB.quo_seq) quoId
		FROM
			CHQ_TB
			inner join QUO_TB on QUO_TB.CHQ_YM = CHQ_TB.CHQ_YM
			and QUO_TB.CHQ_SEQ = CHQ_TB.CHQ_SEQ
		WHERE
			CHQ_TB.state != 'D'
			and CHQ_TB.CHQ_YM = substring(#{chqId}, 3, 4)
			and CHQ_TB.CHQ_SEQ = substring(#{chqId}, 8, 3)	
	</select>
	
	<select id="selectQuoDetail" parameterType="String" resultType="quo">
		SELECT 
			ifnull(TOTAL_VAT, 0) TOTAL_VAT,
			CHQ_SEQ
		FROM QUO_TB 
		WHERE state != 'D' 
		AND QUO_YM = substring(#{quoId},2,4) 
		AND QUO_SEQ = substring(#{quoId},8,4)
	</select>
	
	<update id="memoUpdate" parameterType="slsReq">
		UPDATE SLS_TB
		SET
			MEMO = #{memo}
		WHERE SLS_TB.sls_ym = substring(#{slsId},2,4)
		AND SLS_TB.sls_seq = substring(#{slsId},7,4)
	</update>
	
</mapper>