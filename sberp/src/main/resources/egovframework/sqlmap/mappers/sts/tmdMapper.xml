<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="egovframework.sts.service.TmdMapper">

	<resultMap type="tmdDTO" id="tmdMap">
		<id column="TEST_TYPE" property="testType" />
		<collection property="testMemList" ofType="tmdTestMem">
			<id column="TEST_MNG_ID" property="testMngId" />
			<result column="TEST_TYPE_CODE" property="testTypeCode"/>
			<result column="TEST_MEM" property="testMem"/>
			<result column="eaCnt" property="eaCnt"/>
			<result column="stand" property="stand"/>
			<result column="activ" property="activ"/>
			<result column="mainEaCnt" property="mainEaCnt"/>
			<result column="mainStand" property="mainStand"/>
			<result column="mainActiv" property="mainActiv"/>
			<result column="mainPart" property="mainPart"/>
			<result column="mainRating" property="mainRating"/>
			<result column="subEaCnt" property="subEaCnt"/>
			<result column="subStand" property="subStand"/>
			<result column="subActiv" property="subActiv"/>
			<result column="subPart" property="subPart"/>
			<result column="subRating" property="subRating"/>
		</collection>
	</resultMap>
	<select id="selectMemList" parameterType="comParam" resultMap="tmdMap">
		# 제품지수 계산값
		SET @dive = 1000000;
		
		SELECT 
			TEST_TB.TEST_TYPE_CODE,
			FN_CODE_NAME(TEST_TB.TEST_TYPE_CODE, 'TT') TEST_TYPE,
			TEST_MNGR_TB.TEST_MNG_ID,
			FN_MEM_NAME(TEST_MNGR_TB.TEST_MNG_ID) TEST_MEM,
			
			count(TEST_MNGR_TB.TEST_MNG_ID) eaCnt,
			TRUNCATE(SUM((NET_SALES * PART_RATE / 100) / @dive), 2) stand,
			TRUNCATE(SUM((TEST_TB.ACTIV * PART_RATE / 100)), 2) activ,
			
			COUNT(CASE WHEN TEST_MNGR_SEQ = 1 THEN 1 END) AS mainEaCnt,
			TRUNCATE(SUM(CASE WHEN TEST_MNGR_SEQ = 1 THEN (NET_SALES * PART_RATE / 100) / @dive END), 2) mainStand,
			TRUNCATE(SUM(CASE WHEN TEST_MNGR_SEQ = 1 THEN (TEST_TB.ACTIV * PART_RATE / 100) END), 2) mainActiv,
			TRUNCATE(AVG(CASE WHEN TEST_MNGR_SEQ = 1 THEN PART_RATE / 100 END), 0) mainPart,
			TRUNCATE(AVG(CASE WHEN TEST_MNGR_SEQ = 1 THEN RATING END), 1) mainRating,
			
			COUNT(CASE WHEN TEST_MNGR_SEQ IN (2, 3) THEN 1 END) AS subEaCnt,
			TRUNCATE(SUM(CASE WHEN TEST_MNGR_SEQ IN (2, 3) THEN (NET_SALES * PART_RATE / 100) / @dive END), 2) subStand,
			TRUNCATE(SUM(CASE WHEN TEST_MNGR_SEQ IN (2, 3) THEN (TEST_TB.ACTIV * PART_RATE / 100) END), 2) subActiv,
			TRUNCATE(AVG(CASE WHEN TEST_MNGR_SEQ IN (2, 3) THEN PART_RATE / 100 END), 0) subPart,
			TRUNCATE(AVG(CASE WHEN TEST_MNGR_SEQ IN (2, 3) THEN RATING END), 1) subRating
			
		FROM TEST_TB
			
		    /* 시험금액 */
		    INNER JOIN TEST_ITEM_TB
		    ON TEST_ITEM_TB.TEST_ITEM_SEQ = TEST_TB.TEST_ITEM_SEQ
		    AND TEST_ITEM_TB.STATE != 'D'
		    
		    /* 시험원 */
		    INNER JOIN TEST_MNGR_TB
		    ON TEST_TB.TEST_SEQ = TEST_MNGR_TB.TEST_SEQ
		    AND TEST_MNGR_TB.TEST_MNGR_SEQ BETWEEN 1 AND 3
		    AND IFNULL(TEST_MNG_ID, '') != ''
		
			/* 이름 */
            INNER JOIN MEMBER_TB
			ON ID = TEST_MNGR_TB.TEST_MNG_ID
			AND MEMBER_TB.STATE != 'D'
			
		WHERE 1=1
		
		<if test="searchVO != null">
	        <foreach collection="searchVO" item="item" separator="">
	        	<choose>
	        		<!-- 75 평가완료일 -->
	        		<when test="item.searchCode == 75">AND DATE_FORMAT(TEST_TB.RATING_DT, '%Y%m%d') BETWEEN DATE_FORMAT(#{item.startDate}, '%Y%m%d') AND DATE_FORMAT(#{item.endDate}, '%Y%m%d')</when>
					<!-- 23	시험부 -->
					<when test="item.searchCode == 23">AND TEST_TB.TEST_TYPE_CODE = #{item.searchWord}</when>
					<!-- 9	시험담당자 -->
					<when test="item.searchCode == 9">AND IFNULL(MEM_NAME, '') LIKE CONCAT('%',#{item.searchWord},'%')</when>
				</choose>
			</foreach>
		</if>
		
		GROUP BY TEST_TB.TEST_TYPE_CODE, TEST_MNGR_TB.TEST_MNG_ID
		
		ORDER BY 
		CASE 
			WHEN TEST_TB.TEST_TYPE_CODE = 'EM' THEN 1
			WHEN TEST_TB.TEST_TYPE_CODE = 'RF' THEN 2
			WHEN TEST_TB.TEST_TYPE_CODE = 'SR' THEN 3
			WHEN TEST_TB.TEST_TYPE_CODE = 'SF' THEN 4
			WHEN TEST_TB.TEST_TYPE_CODE = 'NS' THEN 5
		    WHEN TEST_TB.TEST_TYPE_CODE = 'MD' THEN 6
		END, FN_MEM_NAME(TEST_MNGR_TB.TEST_MNG_ID)
	</select>

	<resultMap type="tmdDTO" id="tmdMonMap">
		<id column="TEST_TYPE" property="testType" />
		<collection property="testMonList" ofType="tmdTestMon">
			<id column="TEST_MNG_ID" property="testMngId" />
			<result column="TEST_MEM" property="testMem"/>
		    <result column="stand1" property="stand1"/>
		    <result column="activ1" property="activ1"/>
		    <result column="stand2" property="stand2"/>
		    <result column="activ2" property="activ2"/>
		    <result column="stand3" property="stand3"/>
		    <result column="activ3" property="activ3"/>
		    <result column="stand4" property="stand4"/>
		    <result column="activ4" property="activ4"/>
		    <result column="stand5" property="stand5"/>
		    <result column="activ5" property="activ5"/>
		    <result column="stand6" property="stand6"/>
		    <result column="activ6" property="activ6"/>
		    <result column="stand7" property="stand7"/>
		    <result column="activ7" property="activ7"/>
		    <result column="stand8" property="stand8"/>
		    <result column="activ8" property="activ8"/>
		    <result column="stand9" property="stand9"/>
		    <result column="activ9" property="activ9"/>
		    <result column="stand10" property="stand10"/>
		    <result column="activ10" property="activ10"/>
		    <result column="stand11" property="stand11"/>
		    <result column="activ11" property="activ11"/>
		    <result column="stand12" property="stand12"/>
		    <result column="activ12" property="activ12"/>
		    <result column="standSum" property="standSum"/>
		    <result column="activSum" property="activSum"/>
		</collection>
	</resultMap>
	<select id="selectMonList" parameterType="comParam" resultMap="tmdMonMap">
		# 제품지수 계산값
		SET @dive = 1000000;
		
		SELECT
			mon.*,
			IFNULL(stand1, 0) + IFNULL(stand2, 0) + IFNULL(stand3, 0) + IFNULL(stand4, 0) + IFNULL(stand5, 0) + IFNULL(stand6, 0) + 
			IFNULL(stand7, 0) + IFNULL(stand8, 0) + IFNULL(stand9, 0) + IFNULL(stand10, 0) + IFNULL(stand11, 0) + IFNULL(stand12, 0) AS standSum,
		    IFNULL(activ1, 0) + IFNULL(activ2, 0) + IFNULL(activ3, 0) + IFNULL(activ4, 0) + IFNULL(activ5, 0) + IFNULL(activ6, 0) + 
		    IFNULL(activ7, 0) + IFNULL(activ8, 0) + IFNULL(activ9, 0) + IFNULL(activ10, 0) + IFNULL(activ11, 0) + IFNULL(activ12, 0) AS activSum
		
		FROM (
			SELECT 
			
			    TEST_TB.TEST_TYPE_CODE,
			    FN_CODE_NAME(TEST_TB.TEST_TYPE_CODE, 'TT') AS TEST_TYPE,
			    TEST_MNGR_TB.TEST_MNG_ID,
			    FN_MEM_NAME(TEST_MNGR_TB.TEST_MNG_ID) AS TEST_MEM,
			    
			    TRUNCATE(SUM(CASE WHEN DATE_FORMAT(TEST_TB.RATING_DT, '%m') = 1 THEN (NET_SALES * PART_RATE / 100) / @dive END), 2) AS stand1,
			    TRUNCATE(SUM(CASE WHEN DATE_FORMAT(TEST_TB.RATING_DT, '%m') = 1 THEN (TEST_TB.ACTIV * PART_RATE / 100) END), 2) AS activ1,
			    TRUNCATE(SUM(CASE WHEN DATE_FORMAT(TEST_TB.RATING_DT, '%m') = 2 THEN (NET_SALES * PART_RATE / 100) / @dive END), 2) AS stand2,
			    TRUNCATE(SUM(CASE WHEN DATE_FORMAT(TEST_TB.RATING_DT, '%m') = 2 THEN (TEST_TB.ACTIV * PART_RATE / 100) END), 2) AS activ2,
			    TRUNCATE(SUM(CASE WHEN DATE_FORMAT(TEST_TB.RATING_DT, '%m') = 3 THEN (NET_SALES * PART_RATE / 100) / @dive END), 2) AS stand3,
			    TRUNCATE(SUM(CASE WHEN DATE_FORMAT(TEST_TB.RATING_DT, '%m') = 3 THEN (TEST_TB.ACTIV * PART_RATE / 100) END), 2) AS activ3,
			    TRUNCATE(SUM(CASE WHEN DATE_FORMAT(TEST_TB.RATING_DT, '%m') = 4 THEN (NET_SALES * PART_RATE / 100) / @dive END), 2) AS stand4,
			    TRUNCATE(SUM(CASE WHEN DATE_FORMAT(TEST_TB.RATING_DT, '%m') = 4 THEN (TEST_TB.ACTIV * PART_RATE / 100) END), 2) AS activ4,
			    TRUNCATE(SUM(CASE WHEN DATE_FORMAT(TEST_TB.RATING_DT, '%m') = 5 THEN (NET_SALES * PART_RATE / 100) / @dive END), 2) AS stand5,
			    TRUNCATE(SUM(CASE WHEN DATE_FORMAT(TEST_TB.RATING_DT, '%m') = 5 THEN (TEST_TB.ACTIV * PART_RATE / 100) END), 2) AS activ5,
			    TRUNCATE(SUM(CASE WHEN DATE_FORMAT(TEST_TB.RATING_DT, '%m') = 6 THEN (NET_SALES * PART_RATE / 100) / @dive END), 2) AS stand6,
			    TRUNCATE(SUM(CASE WHEN DATE_FORMAT(TEST_TB.RATING_DT, '%m') = 6 THEN (TEST_TB.ACTIV * PART_RATE / 100) END), 2) AS activ6,
			    TRUNCATE(SUM(CASE WHEN DATE_FORMAT(TEST_TB.RATING_DT, '%m') = 7 THEN (NET_SALES * PART_RATE / 100) / @dive END), 2) AS stand7,
			    TRUNCATE(SUM(CASE WHEN DATE_FORMAT(TEST_TB.RATING_DT, '%m') = 7 THEN (TEST_TB.ACTIV * PART_RATE / 100) END), 2) AS activ7,
			    TRUNCATE(SUM(CASE WHEN DATE_FORMAT(TEST_TB.RATING_DT, '%m') = 8 THEN (NET_SALES * PART_RATE / 100) / @dive END), 2) AS stand8,
			    TRUNCATE(SUM(CASE WHEN DATE_FORMAT(TEST_TB.RATING_DT, '%m') = 8 THEN (TEST_TB.ACTIV * PART_RATE / 100) END), 2) AS activ8,
			    TRUNCATE(SUM(CASE WHEN DATE_FORMAT(TEST_TB.RATING_DT, '%m') = 9 THEN (NET_SALES * PART_RATE / 100) / @dive END), 2) AS stand9,
			    TRUNCATE(SUM(CASE WHEN DATE_FORMAT(TEST_TB.RATING_DT, '%m') = 9 THEN (TEST_TB.ACTIV * PART_RATE / 100) END), 2) AS activ9,
			    TRUNCATE(SUM(CASE WHEN DATE_FORMAT(TEST_TB.RATING_DT, '%m') = 10 THEN (NET_SALES * PART_RATE / 100) / @dive END), 2) AS stand10,
			    TRUNCATE(SUM(CASE WHEN DATE_FORMAT(TEST_TB.RATING_DT, '%m') = 10 THEN (TEST_TB.ACTIV * PART_RATE / 100) END), 2) AS activ10,
			    TRUNCATE(SUM(CASE WHEN DATE_FORMAT(TEST_TB.RATING_DT, '%m') = 11 THEN (NET_SALES * PART_RATE / 100) / @dive END), 2) AS stand11,
			    TRUNCATE(SUM(CASE WHEN DATE_FORMAT(TEST_TB.RATING_DT, '%m') = 11 THEN (TEST_TB.ACTIV * PART_RATE / 100) END), 2) AS activ11,
			    TRUNCATE(SUM(CASE WHEN DATE_FORMAT(TEST_TB.RATING_DT, '%m') = 12 THEN (NET_SALES * PART_RATE / 100) / @dive END), 2) AS stand12,
			    TRUNCATE(SUM(CASE WHEN DATE_FORMAT(TEST_TB.RATING_DT, '%m') = 12 THEN (TEST_TB.ACTIV * PART_RATE / 100) END), 2) AS activ12
			    
			FROM TEST_TB
				
			    /* 시험금액 */
			    INNER JOIN TEST_ITEM_TB
			    ON TEST_ITEM_TB.TEST_ITEM_SEQ = TEST_TB.TEST_ITEM_SEQ
			    AND TEST_ITEM_TB.STATE != 'D'
			    
			    /* 시험원 */
			    INNER JOIN TEST_MNGR_TB
			    ON TEST_TB.TEST_SEQ = TEST_MNGR_TB.TEST_SEQ
			    AND TEST_MNGR_TB.TEST_MNGR_SEQ BETWEEN 1 AND 3
			    AND IFNULL(TEST_MNG_ID, '') != ''
			
				/* 이름 */
	            INNER JOIN MEMBER_TB
				ON ID = TEST_MNGR_TB.TEST_MNG_ID
				AND MEMBER_TB.STATE != 'D'
			
			WHERE 1=1
			
			<if test="searchVO != null">
		        <foreach collection="searchVO" item="item" separator="">
		        	<choose>
		        		<!-- 75 평가완료일 -->
		        		<when test="item.searchCode == 75">AND DATE_FORMAT(TEST_TB.RATING_DT, '%Y')  = #{item.searchWord}</when>
						<!-- 23	시험부 -->
						<when test="item.searchCode == 23">AND TEST_TB.TEST_TYPE_CODE = #{item.searchWord}</when>
						<!-- 9	시험담당자 -->
						<when test="item.searchCode == 9">AND IFNULL(MEM_NAME, '') LIKE CONCAT('%',#{item.searchWord},'%')</when>
					</choose>
				</foreach>
			</if>
		
			GROUP BY TEST_TB.TEST_TYPE_CODE, TEST_MNGR_TB.TEST_MNG_ID
			
					ORDER BY 
					CASE 
						WHEN TEST_TB.TEST_TYPE_CODE = 'EM' THEN 1
						WHEN TEST_TB.TEST_TYPE_CODE = 'RF' THEN 2
						WHEN TEST_TB.TEST_TYPE_CODE = 'SR' THEN 3
						WHEN TEST_TB.TEST_TYPE_CODE = 'SF' THEN 4
						WHEN TEST_TB.TEST_TYPE_CODE = 'NS' THEN 5
					    WHEN TEST_TB.TEST_TYPE_CODE = 'MD' THEN 6
					END, FN_MEM_NAME(TEST_MNGR_TB.TEST_MNG_ID)
		) mon
	</select>
	
	<resultMap type="tmdResult" id="tmdResultMap">
		<id column="testMem" property="testMem" />
		<id column="testMngId" property="testMngId" />
		
		<collection property="testMonList" ofType="tmdMonResult">
			<id column="baseMon" property="baseMon" />
			
			<collection property="testTypeList" ofType="tmdTypeResult">
				<id column="type" property="type" />
				<result column="inCnt" property="inCnt"/>
				<result column="ingCnt" property="ingCnt"/>
				<result column="debCnt" property="debCnt"/>
				<result column="holCnt" property="holCnt"/>
				<result column="rdCnt" property="rdCnt"/>
				<result column="celCnt" property="celCnt"/>
				<result column="endCnt" property="endCnt"/>
				<result column="endAmt" property="endAmt"/>
				<result column="endPart" property="endPart"/>
			</collection>
		</collection>
	</resultMap>
	<select id="selectResultList" parameterType="comParam" resultMap="tmdResultMap">
		#시험원 월별 평가표(종속) - 기본
		SELECT
		
			MEM_NAME testMem, 
		    ID testMngId,
		    baseMon,
		    
		    CASE TEST_MNGR_SEQ WHEN 1 THEN 'main' WHEN 2 THEN 'sub' WHEN 3 THEN 'sub' END type,
			COUNT(TEST_TB.TEST_SEQ) inCnt,
			SUM(IF (TEST_TB.TEST_STATE_CODE=2,1,0)) ingCnt,
			SUM(IF (TEST_TB.TEST_STATE_CODE=3,1,0)) debCnt,
			SUM(IF (TEST_TB.TEST_STATE_CODE=4,1,0)) holCnt,
			SUM(IF (TEST_TB.TEST_STATE_CODE=6,1,0)) rdCnt,
			SUM(IF (TEST_TB.TEST_STATE_CODE=19,1,0)) celCnt,
			SUM(IF (TEST_TB.TEST_STATE_CODE=18,1,0)) endCnt,
		    TRUNCATE (SUM(IF (TEST_TB.TEST_STATE_CODE=18,NET_SALES,0) * IF (TEST_TB.TEST_STATE_CODE=18,PART_RATE,0)) / 1000000, 0) endAmt,
			TRUNCATE (SUM(IF (TEST_TB.TEST_STATE_CODE=18,PART_RATE,0)) / SUM(IF (TEST_TB.TEST_STATE_CODE=18,1,0)), 2) endPart
		    
		FROM  MEMBER_TB
		
	<![CDATA[	
			INNER JOIN
			      (
				/* 날짜 테이블 */
				SELECT 
					seq baseMon
				FROM (SELECT @num := @num + 1 AS seq
					  FROM information_schema.tables a
						, (SELECT @num := 0) c
					 ) T
				WHERE 1=1
			    AND seq <=  12
				 
			) T
	]]>
			      
			LEFT JOIN TEST_MNGR_TB
			ON TEST_MNGR_TB.TEST_MNG_ID = MEMBER_TB.ID
			AND TEST_MNGR_SEQ IN (1, 2, 3)
			          
			          
			LEFT JOIN TEST_TB
			ON TEST_MNGR_TB.TEST_SEQ = TEST_TB.TEST_SEQ
			AND DATE_FORMAT(TEST_TB.INS_DT, '%Y') = <if test="searchVO != null">
												        <foreach collection="searchVO" item="item" separator="">
												        	<choose>
												        		<!-- 18 시험배정일 -->
												        		<when test="item.searchCode == 18">#{item.searchWord}</when>
															</choose>
														</foreach>
													</if>
			AND T.baseMon = DATE_FORMAT(TEST_TB.INS_DT, '%m')
			
			LEFT JOIN TEST_ITEM_TB
            ON TEST_ITEM_TB.TEST_ITEM_SEQ = TEST_TB.TEST_ITEM_SEQ
		              
		WHERE 1=1
		# 시험부서
		AND DEPT_SEQ IN (5, 6, 15, 16, 17)
		# 제외 시험원 (기책배정)
		AND ID NOT IN ('comsaf', 'comsar', 'comemc')
		
		<if test="searchVO != null">
		     <foreach collection="searchVO" item="item" separator="">
		     	<choose>
		     		<!-- 23	시험부 -->
					<when test="item.searchCode == 23">AND DEPT_SEQ = #{item.searchWord}</when>
					<!-- 9	시험담당자 -->
					<when test="item.searchCode == 9">AND IFNULL(MEM_NAME, '') LIKE CONCAT('%',#{item.searchWord},'%')</when>
				</choose>
			</foreach>
		</if>
														
		GROUP BY MEMBER_TB.ID, baseMon, IF(TEST_MNGR_SEQ = 1,1,2)
		ORDER BY MEMBER_TB.MEM_NAME, MEMBER_TB.ID, baseMon, IF(TEST_MNGR_SEQ = 1,1,2)
	</select>
	
	<select id="selectActionListCnt" parameterType="comParam" resultType="int">
		
		SELECT COUNT(1) FROM
		(
		
		SELECT 
		
		    DATE_FORMAT(curr.INS_DT, '%Y-%m-%d %T') instDtStr,
		    FN_DEPT_NAME(curr.INS_MEM_ID) insPos,
		    FN_MEM_NAME(curr.INS_MEM_ID) insName,
		    
		    CONCAT ('SB', JOB_TB.SBK_YM, '-' , JOB_TB.SBK_TYPE, LPAD(JOB_TB.SBK_SEQ,4,0),
				    			'-', IF (TEST_TB.TEST_TYPE_CODE = 'NS', 'SF', TEST_TB.TEST_TYPE_CODE), LPAD(TEST_TB.TEST_NO,4,0),
				    			IF(JOB_TB.SBK_REVISION > 0, CONCAT ('-',JOB_TB.SBK_REVISION), '')) testId,
							
			FN_CODE_NAME (TEST_ITEM_TB.TEST_TYPE_CODE,'TT') TEST_TYPE,
			FN_MEM_NAME(mngr1.TEST_MNG_ID) TestMng1Name,
			
			FN_MEM_NAME (JOB_TB.MNG_ID) mngName,
		     
			prevCode.TYPE_NAME prevState,
			currCode.TYPE_NAME currState,
			curr.MEMO
		    
		FROM 
		    TEST_STATE_TB curr
		
			INNER JOIN TEST_TB ON TEST_TB.TEST_SEQ = curr.TEST_SEQ
			INNER JOIN TEST_ITEM_TB ON TEST_ITEM_TB.TEST_ITEM_SEQ = TEST_TB.TEST_ITEM_SEQ
			INNER JOIN JOB_TB ON JOB_TB.QUO_YM = TEST_ITEM_TB.QUO_YM AND JOB_TB.QUO_SEQ = TEST_ITEM_TB.QUO_SEQ
			
			# 액션자
			INNER JOIN MEMBER_TB ins ON curr.INS_MEM_ID = ins.ID
			
			LEFT JOIN TEST_MNGR_TB mngr1 ON mngr1.TEST_SEQ = TEST_TB.TEST_SEQ AND mngr1.TEST_MNGR_SEQ = 1
		            
		LEFT JOIN 
		    TEST_STATE_TB prev 
		    ON curr.TEST_SEQ = prev.TEST_SEQ 
		    AND prev.TEST_SUB_SEQ = curr.TEST_SUB_SEQ - 1
		    
		INNER JOIN 
		    COMCODE_TB currCode 
		    ON curr.STATE_CODE = currCode.TYPE_CD 
		    AND currCode.TOP_CD = 'TS'
		LEFT JOIN 
		    COMCODE_TB prevCode 
		    ON prev.STATE_CODE = prevCode.TYPE_CD 
		    AND prevCode.TOP_CD = 'TS'
		
		WHERE 1=1
		AND curr.TEST_STATE_SEQ != 0
	
	<if test="searchVO != null">
       <foreach collection="searchVO" item="item" separator="">
	       	<choose>
			<!-- 15	액션일 -->
			<when test="item.searchCode == 15">AND curr.INS_DT BETWEEN #{item.startDate} AND DATE_ADD(#{item.endDate}, INTERVAL 1 DAY)</when>
			<!-- 73	히스토리여부 -->
	        <when test="item.searchCode == 73">AND IF (curr.MEMO = '', '0', '1') = #{item.searchWord}</when>
	        <!-- 51	액션부서 -->
			<when test="item.searchCode == 51">AND ins.DEPT_SEQ = #{item.searchWord}</when>
	        <!-- 2	액션자 -->
			<when test="item.searchCode == 2">AND FN_MEM_NAME(curr.INS_MEM_ID) LIKE CONCAT('%',#{item.searchWord},'%')</when>
			<!-- 23	시험부 -->
      		<when test="item.searchCode == 23">AND TEST_ITEM_TB.TEST_TYPE_CODE = #{item.searchWord}</when>
			<!-- 9	시험담당자 -->
			<when test="item.searchCode == 9">AND FN_MEM_NAME(mngr1.TEST_MNG_ID) LIKE CONCAT('%',#{item.searchWord},'%')</when>
			<!-- 7	고지부담당자 -->
			<when test="item.searchCode == 7">and FN_MEM_NAME(JOB_TB.MNG_ID) LIKE CONCAT('%',#{item.searchWord},'%')</when>
			<!-- 31	시험상태 -->
			<when test="item.searchCode == 31">AND curr.STATE_CODE = #{item.searchWord}</when>
			</choose>
		</foreach>
	</if>
		
		UNION ALL
		
		SELECT
			DATE_FORMAT(TEST_MEMO_TB.INS_DT, '%Y-%m-%d %T') instDtStr,
			FN_DEPT_NAME(TEST_MEMO_TB.INS_MEM_ID) insPos,
		    ins.MEM_NAME insName,
            
            CONCAT ('SB', JOB_TB.SBK_YM, '-' , JOB_TB.SBK_TYPE, LPAD(JOB_TB.SBK_SEQ,4,0),
		    			'-', IF (TEST_TB.TEST_TYPE_CODE = 'NS', 'SF', TEST_TB.TEST_TYPE_CODE), LPAD(TEST_TB.TEST_NO,4,0),
		    			IF(JOB_TB.SBK_REVISION > 0, CONCAT ('-',JOB_TB.SBK_REVISION), '')) testId,
			
            
            FN_CODE_NAME (TEST_ITEM_TB.TEST_TYPE_CODE,'TT') TEST_TYPE,
            FN_MEM_NAME(mngr1.TEST_MNG_ID) TestMng1Name,
            
            FN_MEM_NAME (JOB_TB.MNG_ID) mngName,
            
            '-' prevState,
            '-' currState,
            
		    TEST_MEMO_TB.MEMO
		    
		FROM TEST_MEMO_TB
			
            # 액션자
			INNER JOIN MEMBER_TB ins
			ON TEST_MEMO_TB.INS_MEM_ID = ins.ID
			
            INNER JOIN TEST_TB ON TEST_TB.TEST_SEQ = TEST_MEMO_TB.TEST_SEQ
            INNER JOIN TEST_ITEM_TB ON TEST_ITEM_TB.TEST_ITEM_SEQ = TEST_TB.TEST_ITEM_SEQ
            INNER JOIN JOB_TB ON JOB_TB.QUO_YM = TEST_ITEM_TB.QUO_YM AND JOB_TB.QUO_SEQ = TEST_ITEM_TB.QUO_SEQ
            
            LEFT JOIN TEST_MNGR_TB mngr1 ON mngr1.TEST_SEQ = TEST_TB.TEST_SEQ AND mngr1.TEST_MNGR_SEQ = 1
            
		where 1=1
	
	<if test="searchVO != null">
       <foreach collection="searchVO" item="item" separator="">
	       	<choose>
			<!-- 15	액션일 -->
			<when test="item.searchCode == 15">AND TEST_MEMO_TB.INS_DT BETWEEN #{item.startDate} AND DATE_ADD(#{item.endDate}, INTERVAL 1 DAY)</when>
			<!-- 73	히스토리여부 -->
	        <when test="item.searchCode == 73">AND IF (TEST_MEMO_TB.MEMO = '', '0', '1') = #{item.searchWord}</when>
	        <!-- 51	액션부서 -->
			<when test="item.searchCode == 51">AND ins.DEPT_SEQ = #{item.searchWord}</when>
	        <!-- 2	액션자 -->
			<when test="item.searchCode == 2">AND ins.MEM_NAME LIKE CONCAT('%',#{item.searchWord},'%')</when>
			<!-- 23	시험부 -->
      		<when test="item.searchCode == 23">AND TEST_ITEM_TB.TEST_TYPE_CODE = #{item.searchWord}</when>
      		<!-- 9	시험담당자 -->
			<when test="item.searchCode == 9">AND FN_MEM_NAME(mngr1.TEST_MNG_ID) LIKE CONCAT('%',#{item.searchWord},'%')</when>
			<!-- 7	고지부담당자 -->
			<when test="item.searchCode == 7">and FN_MEM_NAME(JOB_TB.MNG_ID) LIKE CONCAT('%',#{item.searchWord},'%')</when>
			<!-- 31	시험상태 -->
			<when test="item.searchCode == 31">AND 1 != 1</when> 
			</choose>
		</foreach>
	</if>
	
        AND TEST_MEMO_TB.memo not like '[시험상태변경]%'
		
		) cnt	
	</select>
	
	<select id="selectActionList" parameterType="comParam" resultType="tmdTestAction">
		SELECT 
		
		    DATE_FORMAT(curr.INS_DT, '%Y-%m-%d %T') instDtStr,
		    FN_DEPT_NAME(curr.INS_MEM_ID) insPos,
		    FN_MEM_NAME(curr.INS_MEM_ID) insName,
		    
		    CONCAT ('SB', JOB_TB.SBK_YM, '-' , JOB_TB.SBK_TYPE, LPAD(JOB_TB.SBK_SEQ,4,0),
				    			'-', IF (TEST_TB.TEST_TYPE_CODE = 'NS', 'SF', TEST_TB.TEST_TYPE_CODE), LPAD(TEST_TB.TEST_NO,4,0),
				    			IF(JOB_TB.SBK_REVISION > 0, CONCAT ('-',JOB_TB.SBK_REVISION), '')) testId,
							
			FN_CODE_NAME (TEST_ITEM_TB.TEST_TYPE_CODE,'TT') TEST_TYPE,
			FN_MEM_NAME(mngr1.TEST_MNG_ID) TestMng1Name,
			
			FN_MEM_NAME (JOB_TB.MNG_ID) mngName,
		     
			IFNULL(prevCode.TYPE_NAME, '') prevState,
			currCode.TYPE_NAME currState,
			curr.MEMO
		    
		FROM 
		    TEST_STATE_TB curr
		
			INNER JOIN TEST_TB ON TEST_TB.TEST_SEQ = curr.TEST_SEQ
			INNER JOIN TEST_ITEM_TB ON TEST_ITEM_TB.TEST_ITEM_SEQ = TEST_TB.TEST_ITEM_SEQ
			INNER JOIN JOB_TB ON JOB_TB.QUO_YM = TEST_ITEM_TB.QUO_YM AND JOB_TB.QUO_SEQ = TEST_ITEM_TB.QUO_SEQ
			
			# 액션자
			INNER JOIN MEMBER_TB ins ON curr.INS_MEM_ID = ins.ID
			
			LEFT JOIN TEST_MNGR_TB mngr1 ON mngr1.TEST_SEQ = TEST_TB.TEST_SEQ AND mngr1.TEST_MNGR_SEQ = 1
		            
		LEFT JOIN 
		    TEST_STATE_TB prev 
		    ON curr.TEST_SEQ = prev.TEST_SEQ 
		    AND prev.TEST_SUB_SEQ = curr.TEST_SUB_SEQ - 1
		    
		INNER JOIN 
		    COMCODE_TB currCode 
		    ON curr.STATE_CODE = currCode.TYPE_CD 
		    AND currCode.TOP_CD = 'TS'
		LEFT JOIN 
		    COMCODE_TB prevCode 
		    ON prev.STATE_CODE = prevCode.TYPE_CD 
		    AND prevCode.TOP_CD = 'TS'
		
		WHERE 1=1
		AND curr.TEST_STATE_SEQ != 0
	
	<if test="searchVO != null">
       <foreach collection="searchVO" item="item" separator="">
	       	<choose>
			<!-- 15	액션일 -->
			<when test="item.searchCode == 15">AND curr.INS_DT BETWEEN #{item.startDate} AND DATE_ADD(#{item.endDate}, INTERVAL 1 DAY)</when>
			<!-- 73	히스토리여부 -->
	        <when test="item.searchCode == 73">AND IF (curr.MEMO = '', '0', '1') = #{item.searchWord}</when>
	        <!-- 51	액션부서 -->
			<when test="item.searchCode == 51">AND ins.DEPT_SEQ = #{item.searchWord}</when>
	        <!-- 2	액션자 -->
			<when test="item.searchCode == 2">AND FN_MEM_NAME(curr.INS_MEM_ID) LIKE CONCAT('%',#{item.searchWord},'%')</when>
			<!-- 23	시험부 -->
      		<when test="item.searchCode == 23">AND TEST_ITEM_TB.TEST_TYPE_CODE = #{item.searchWord}</when>
			<!-- 9	시험담당자 -->
			<when test="item.searchCode == 9">AND FN_MEM_NAME(mngr1.TEST_MNG_ID) LIKE CONCAT('%',#{item.searchWord},'%')</when>
			<!-- 7	고지부담당자 -->
			<when test="item.searchCode == 7">AND FN_MEM_NAME(JOB_TB.MNG_ID) LIKE CONCAT('%',#{item.searchWord},'%')</when>
			<!-- 31	시험상태 -->
			<when test="item.searchCode == 31">AND curr.STATE_CODE = #{item.searchWord}</when>
			</choose>
		</foreach>
	</if>
		
		UNION ALL
		
		SELECT
			DATE_FORMAT(TEST_MEMO_TB.INS_DT, '%Y-%m-%d %T') instDtStr,
			FN_DEPT_NAME(TEST_MEMO_TB.INS_MEM_ID) insPos,
		    ins.MEM_NAME insName,
            
            CONCAT ('SB', JOB_TB.SBK_YM, '-' , JOB_TB.SBK_TYPE, LPAD(JOB_TB.SBK_SEQ,4,0),
		    			'-', IF (TEST_TB.TEST_TYPE_CODE = 'NS', 'SF', TEST_TB.TEST_TYPE_CODE), LPAD(TEST_TB.TEST_NO,4,0),
		    			IF(JOB_TB.SBK_REVISION > 0, CONCAT ('-',JOB_TB.SBK_REVISION), '')) testId,
			
            
            FN_CODE_NAME (TEST_ITEM_TB.TEST_TYPE_CODE,'TT') TEST_TYPE,
            FN_MEM_NAME(mngr1.TEST_MNG_ID) TestMng1Name,
            
            FN_MEM_NAME (JOB_TB.MNG_ID) mngName,
            
            '-' prevState,
            '-' currState,
            
		    TEST_MEMO_TB.MEMO
		    
		FROM TEST_MEMO_TB
			
            # 액션자
			INNER JOIN MEMBER_TB ins
			ON TEST_MEMO_TB.INS_MEM_ID = ins.ID
			
            INNER JOIN TEST_TB ON TEST_TB.TEST_SEQ = TEST_MEMO_TB.TEST_SEQ
            INNER JOIN TEST_ITEM_TB ON TEST_ITEM_TB.TEST_ITEM_SEQ = TEST_TB.TEST_ITEM_SEQ
            INNER JOIN JOB_TB ON JOB_TB.QUO_YM = TEST_ITEM_TB.QUO_YM AND JOB_TB.QUO_SEQ = TEST_ITEM_TB.QUO_SEQ
            
            LEFT JOIN TEST_MNGR_TB mngr1 ON mngr1.TEST_SEQ = TEST_TB.TEST_SEQ AND mngr1.TEST_MNGR_SEQ = 1
            
		where 1=1
	
	<if test="searchVO != null">
       <foreach collection="searchVO" item="item" separator="">
	       	<choose>
			<!-- 15	액션일 -->
			<when test="item.searchCode == 15">AND TEST_MEMO_TB.INS_DT BETWEEN #{item.startDate} AND DATE_ADD(#{item.endDate}, INTERVAL 1 DAY)</when>
			<!-- 73	히스토리여부 -->
	        <when test="item.searchCode == 73">AND IF (TEST_MEMO_TB.MEMO = '', '0', '1') = #{item.searchWord}</when>
	        <!-- 51	액션부서 -->
			<when test="item.searchCode == 51">AND ins.DEPT_SEQ = #{item.searchWord}</when>
	        <!-- 2	액션자 -->
			<when test="item.searchCode == 2">AND ins.MEM_NAME LIKE CONCAT('%',#{item.searchWord},'%')</when>
			<!-- 23	시험부 -->
      		<when test="item.searchCode == 23">AND TEST_ITEM_TB.TEST_TYPE_CODE = #{item.searchWord}</when>
      		<!-- 9	시험담당자 -->
			<when test="item.searchCode == 9">AND FN_MEM_NAME(mngr1.TEST_MNG_ID) LIKE CONCAT('%',#{item.searchWord},'%')</when>
			<!-- 7	고지부담당자 -->
			<when test="item.searchCode == 7">AND FN_MEM_NAME(JOB_TB.MNG_ID) LIKE CONCAT('%',#{item.searchWord},'%')</when>
			<!-- 31	시험상태 -->
			<when test="item.searchCode == 31">AND 1 != 1</when> 
			</choose>
		</foreach>
	</if>
	
        AND TEST_MEMO_TB.memo not like '[시험상태변경]%'
       

		ORDER BY instDtStr DESC
		LIMIT #{pageUnit} OFFSET #{firstIndex};
		
	</select>
	
</mapper>