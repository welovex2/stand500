<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="egovframework.tst.service.TstMapper">
	
	<select id="selectCrtfList" parameterType="int" resultType="egovMap">
  		SELECT test_cate_seq,
				name
		FROM TEST_CATE_TB
		WHERE use_yn = 1
		AND STATE != 'D'
		AND ifnull(top_depth_seq,0) = #{topCode}
	</select>

	<select id="selectStndrList" parameterType="tstParam" resultType="egovMap">
		select test_stndr_seq, test_stndr
		from TEST_STNDR_TB
		where use_yn = 1
		and country_code = #{countryCode}
		and crtf_type_seq = #{crtfTypeSeq}
		and test_type_code = #{testTypeCode}
	</select>

	<select id="selectDetail" parameterType="testReq" resultType="testRes">
		select test_seq
		from TEST_ITEM_TB
			inner join TEST_TB
		    on TEST_ITEM_TB.test_item_seq = TEST_TB.test_item_seq
		where TEST_ITEM_TB.test_item_seq = #{testItemSeq}
	</select>

	<insert id="insert" parameterType="testReq">
    <selectKey resultType="int" keyProperty="testNo" order="BEFORE">
        SELECT ifnull(MAX(TEST_NO)+1,1) testNo FROM TEST_TB where TEST_TYPE_CODE = #{testTypeCode}
    </selectKey> 
		INSERT INTO TEST_TB
		(
			TEST_NO,
			TEST_TYPE_CODE,
			TEST_ITEM_SEQ,
			INS_MEM_ID,
			UDT_MEM_ID
		)
		VALUES
		(
			#{testNo},
			#{testTypeCode},
			#{testItemSeq},
        	#{insMemId},
			#{udtMemId}
		)
	</insert>
	
	<select id="selectListCnt" parameterType="testReq" resultType="int">
		SELECT 
			count(TEST_TB.test_seq)
		from TEST_ITEM_TB
		
			INNER JOIN TEST_TB
		    ON TEST_ITEM_TB.TEST_ITEM_SEQ = TEST_TB.TEST_ITEM_SEQ
		    
		    INNER JOIN JOB_TB
		    ON JOB_TB.QUO_YM = TEST_ITEM_TB.QUO_YM
		    AND JOB_TB.QUO_SEQ = TEST_ITEM_TB.QUO_SEQ
		    
		    INNER JOIN SBK_TB
		    ON JOB_TB.SBK_YM = SBK_TB.SBK_YM
		    AND JOB_TB.SBK_SEQ = SBK_TB.SBK_SEQ
		    AND JOB_TB.SBK_REVISION = SBK_TB.REVISION
		    
			INNER JOIN TEST_STNDR_TB
			ON TEST_ITEM_TB.TEST_STNDR_SEQ = TEST_STNDR_TB.TEST_STNDR_SEQ
		            
		    LEFT JOIN TEST_CATE_TB cate4 ON TEST_ITEM_TB.CRTF_TYPE_SEQ = cate4.TEST_CATE_SEQ
		    LEFT JOIN TEST_CATE_TB cate3 ON cate4.TOP_DEPTH_SEQ = cate3.TEST_CATE_SEQ
		    LEFT JOIN TEST_CATE_TB cate2 ON cate3.TOP_DEPTH_SEQ = cate2.TEST_CATE_SEQ
		    LEFT JOIN TEST_CATE_TB cate1 ON cate2.TOP_DEPTH_SEQ = cate1.TEST_CATE_SEQ
		    
		    left join TEST_STATE_TB
            on TEST_STATE_TB.TEST_STATE_SEQ = (
								select TEST_STATE_SEQ
                                from TEST_STATE_TB sub
                                where sub.TEST_SEQ = TEST_TB.TEST_SEQ
                                order by TEST_STATE_SEQ desc
                                limit 1
            )
            
            left join TEST_MNGR_TB
            on TEST_MNGR_TB.TEST_MNGR_SEQ = (
								select TEST_MNGR_SEQ
                                from TEST_MNGR_TB sub
                                where sub.TEST_SEQ = TEST_TB.TEST_SEQ
                                order by TEST_MNGR_SEQ desc
                                limit 1
            )
              
		where 1=1
		and TEST_ITEM_TB.state != 'D'
		<if test="searchVO != null">
	        <foreach collection="searchVO" item="item" separator="">
	        	<choose>
					<!-- 6	제품명 -->
					<when test="item.searchCode == 6">and IFNULL(JOB_TB.PRDCT_NAME, '') like concat('%',#{item.searchWord},'%')</when>
					<!-- 7	고지부담당자 -->
					<when test="item.searchCode == 7">and FN_MEM_NAME(SBK_TB.ins_mem_id) like concat('%',#{item.searchWord},'%')</when>
					<!-- 8	기술책임자 -->
					<when test="item.searchCode == 8">and IFNULL(FN_MEM_NAME(TEST_ITEM_TB.rev_id), '') like concat('%',#{item.searchWord},'%')</when>
					<!-- 9	시험담당자 -->
					<when test="item.searchCode == 9">and IFNULL(FN_MEM_NAME(TEST_MNGR_TB.TEST_MNG_ID), '') like concat('%',#{item.searchWord},'%')</when>
					<!-- 18	시험배정일 -->
					<when test="item.searchCode == 18">and date_format(TEST_TB.ins_dt, '%Y%m%d') between date_format(#{item.startDate}, '%Y%m%d') and date_format(#{item.endDate}, '%Y%m%d')</when>
					<!-- 20	예상완료일 -->
					<when test="item.searchCode == 20">and date_format(SBK_TB.est_cmp_dt, '%Y%m%d') between date_format(#{item.startDate}, '%Y%m%d') and date_format(#{item.endDate}, '%Y%m%d')</when>
					<!-- 22	신청구분 -->
					<when test="item.searchCode == 22">
						<choose>
							<when test="item.searchWord == 1">and SG_NEW_YN=1</when>
							<when test="item.searchWord == 2">and SG_GB_YN=1</when>
							<when test="item.searchWord == 3">and SG_DG_YN=1</when>
							<when test="item.searchWord == 4">and SG_ETC_YN=1</when>
						</choose>
					</when>
					<!-- 35	국가-->
					<when test="item.searchCode == 35">and cate1.TEST_CATE_SEQ = #{item.searchWord}</when>
					<!-- 36	인증종류1 -->
					<when test="item.searchCode == 36">and cate2.TEST_CATE_SEQ = #{item.searchWord}</when>
					<!-- 37	인증종류2 -->
					<when test="item.searchCode == 37">and cate3.TEST_CATE_SEQ = #{item.searchWord}</when>
					<!-- 38	인증종류3 -->
					<when test="item.searchCode == 38">and cate4.TEST_CATE_SEQ = #{item.searchWord}</when>
					<!-- 23	시험부 -->
					<when test="item.searchCode == 23">and if(TEST_TB.TEST_SEQ is null, '9999', TEST_ITEM_TB.TEST_TYPE_CODE) = #{item.searchWord}</when>
					<!-- 26	로데이터 -->
					<when test="item.searchCode == 26"></when>
					<!-- 27	모델명 -->
					<when test="item.searchCode == 27">and IFNULL(TEST_ITEM_TB.model, '') like concat('%',#{item.searchWord},'%')</when>
					<!-- 31	시험상태 -->
					<when test="item.searchCode == 31">and TEST_STATE_TB.STATE_CODE = #{item.searchWord}</when> 
	        	</choose>
			</foreach>
		</if>
        
	</select>
		
	<select id="selectList" parameterType="testReq" resultType="egovMap">
		SELECT 
			@rownum:=@rownum+1 as no,
			lst.*
		FROM (
			SELECT
				#ROW_NUMBER() OVER(ORDER BY TEST_TB.ins_dt) AS no,
			    TEST_TB.TEST_SEQ,
			    CONCAT ('SB', JOB_TB.SBK_YM, '-' , 'G', LPAD(JOB_TB.SBK_SEQ,4,0), IF(JOB_TB.SBK_REVISION > 0, CONCAT ('-',JOB_TB.SBK_REVISION), '')) sbkId,
			    DATE_FORMAT (TEST_TB.INS_DT, '%Y-%m-%d') insDtStr,
			    CONCAT (CONCAT ('SB', JOB_TB.SBK_YM, '-' , 'G', LPAD(JOB_TB.SBK_SEQ,4,0), IF(JOB_TB.SBK_REVISION > 0, CONCAT ('-',JOB_TB.SBK_REVISION), ''))
			    			,'-',TEST_TB.TEST_TYPE_CODE,LPAD(TEST_TB.TEST_NO,4,0)) testId,
			    IFNULL (FN_CODE_NAME(TEST_STATE_TB.STATE_CODE,'TS'), '-') test_state,
			    IFNULL (TEST_STATE_TB.STATE_CODE, '') STATE_CODE,
			    IFNULL (DATE_FORMAT (SBK_TB.EST_CMP_DT, '%Y-%m-%d'), '-') estCmpDt,
			    '미반입' imPoint,
			    '0' imSeq,
			    TEST_ITEM_TB.PRODUCT,
				CONCAT_WS(',', IF(SG_NEW_YN=1,'신규',NULL),IF(SG_GB_YN=1,'기술기준 변경',NULL),IF(SG_DG_YN=1,'동일기자재',NULL),IF(SG_ETC_YN=1,'기술기준외 변경',NULL)) sgText,
				cate1.NAME crtfc1Name,
			    cate2.NAME crtfc2Name,
			    cate3.NAME crtfc3Name,
			    cate4.NAME crtfc4Name,
			    FN_CODE_NAME (TEST_ITEM_TB.TEST_TYPE_CODE,'TT') TEST_TYPE,
			    TEST_STNDR_TB.TEST_STNDR_SEQ,
			    TEST_STNDR_TB.TEST_STNDR,
			    TEST_ITEM_TB.MODEL,
			    IFNULL (FN_MEM_NAME(TEST_ITEM_TB.REV_ID), '-') RevName,
				IFNULL (FN_MEM_NAME(TEST_MNGR_TB.TEST_MNG_ID), '미배정') TestMngName,
				IFNULL (FN_POS_NAME(TEST_MNGR_TB.TEST_MNG_ID), '') TestMngPos,
				IFNULL (TEST_MNGR_TB.TEST_MNG_ID, '') TEST_MNG_ID,
			    FN_MEM_NAME (SBK_TB.INS_MEM_ID) memName,
			    IFNULL (RAW_TB.RAW_SEQ, '') raw_Seq,
			    IFNULL (DATE_FORMAT (IF (TEST_ITEM_TB.TEST_STNDR_SEQ = 10, RAW_TB.REPORT_DT, TEST_TB.TEST_REPORT_DT), '%Y-%m-%d'), '-') REPORT_DT,
			    IF(TEST_TB.TEST_REPORT_DT IS NULL, '-', CONCAT (FN_DEPT_NAME(TEST_TB.UDT_MEM_ID),' ',FN_MEM_NAME(TEST_TB.UDT_MEM_ID))) REPORT_DT_INS_NAME,
				IF(TEST_TB.TEST_REPORT_DT IS NULL, '-', DATE_FORMAT (TEST_TB.UDT_DT, '%Y-%m-%d')) REPORT_DT_INS_DT,
			    '-' rawState
			    
			FROM TEST_ITEM_TB
			
				INNER JOIN TEST_TB ON TEST_ITEM_TB.TEST_ITEM_SEQ = TEST_TB.TEST_ITEM_SEQ
			    
			    INNER JOIN JOB_TB ON JOB_TB.QUO_YM = TEST_ITEM_TB.QUO_YM
			    AND JOB_TB.QUO_SEQ = TEST_ITEM_TB.QUO_SEQ
			    
			    INNER JOIN SBK_TB ON JOB_TB.SBK_YM = SBK_TB.SBK_YM
			    AND JOB_TB.SBK_SEQ = SBK_TB.SBK_SEQ
			    AND JOB_TB.SBK_REVISION = SBK_TB.REVISION
			     
				INNER JOIN TEST_STNDR_TB
				ON TEST_ITEM_TB.TEST_STNDR_SEQ = TEST_STNDR_TB.TEST_STNDR_SEQ
			            
			    LEFT JOIN TEST_CATE_TB cate4 ON TEST_ITEM_TB.CRTF_TYPE_SEQ = cate4.TEST_CATE_SEQ
			    LEFT JOIN TEST_CATE_TB cate3 ON cate4.TOP_DEPTH_SEQ = cate3.TEST_CATE_SEQ
			    LEFT JOIN TEST_CATE_TB cate2 ON cate3.TOP_DEPTH_SEQ = cate2.TEST_CATE_SEQ
			    LEFT JOIN TEST_CATE_TB cate1 ON cate2.TOP_DEPTH_SEQ = cate1.TEST_CATE_SEQ
				
			    LEFT JOIN TEST_STATE_TB
	            ON TEST_STATE_TB.TEST_STATE_SEQ = (
									SELECT TEST_STATE_SEQ
	                                FROM TEST_STATE_TB SUB
	                                WHERE SUB.TEST_SEQ = TEST_TB.TEST_SEQ
	                                ORDER BY TEST_STATE_SEQ DESC
	                                LIMIT 1
	            )
	            
			    LEFT JOIN TEST_MNGR_TB
	            ON TEST_MNGR_TB.TEST_MNGR_SEQ = (
									SELECT TEST_MNGR_SEQ
	                                FROM TEST_MNGR_TB SUB
	                                WHERE SUB.TEST_SEQ = TEST_TB.TEST_SEQ
	                                ORDER BY TEST_MNGR_SEQ DESC
	                                LIMIT 1
	            )
	            
	            LEFT JOIN RAW_TB
	            ON TEST_TB.TEST_SEQ = RAW_TB.TEST_SEQ
	            
	            INNER JOIN (SELECT @rownum:=0) r
			WHERE 1=1
			AND TEST_ITEM_TB.STATE != 'D'
			<if test="searchVO != null">
		        <foreach collection="searchVO" item="item" separator="">
		        	<choose>
						<!-- 6	제품명 -->
						<when test="item.searchCode == 6">and IFNULL(JOB_TB.PRDCT_NAME, '') like concat('%',#{item.searchWord},'%')</when>
						<!-- 7	고지부담당자 -->
						<when test="item.searchCode == 7">and FN_MEM_NAME(SBK_TB.ins_mem_id) like concat('%',#{item.searchWord},'%')</when>
						<!-- 8	기술책임자 -->
						<when test="item.searchCode == 8">and IFNULL(FN_MEM_NAME(TEST_ITEM_TB.rev_id), '') like concat('%',#{item.searchWord},'%')</when>
						<!-- 9	시험담당자 -->
						<when test="item.searchCode == 9">and IFNULL(FN_MEM_NAME(TEST_MNGR_TB.TEST_MNG_ID), '') like concat('%',#{item.searchWord},'%')</when>
						<!-- 18	시험배정일 -->
						<when test="item.searchCode == 18">and date_format(TEST_TB.ins_dt, '%Y%m%d') between date_format(#{item.startDate}, '%Y%m%d') and date_format(#{item.endDate}, '%Y%m%d')</when>
						<!-- 20	예상완료일 -->
						<when test="item.searchCode == 20">and date_format(SBK_TB.est_cmp_dt, '%Y%m%d') between date_format(#{item.startDate}, '%Y%m%d') and date_format(#{item.endDate}, '%Y%m%d')</when>
						<!-- 22	신청구분 -->
						<when test="item.searchCode == 22">
							<choose>
								<when test="item.searchWord == 1">and SG_NEW_YN=1</when>
								<when test="item.searchWord == 2">and SG_GB_YN=1</when>
								<when test="item.searchWord == 3">and SG_DG_YN=1</when>
								<when test="item.searchWord == 4">and SG_ETC_YN=1</when>
							</choose>
						</when>
						<!-- 35	국가-->
						<when test="item.searchCode == 35">and cate1.TEST_CATE_SEQ = #{item.searchWord}</when>
						<!-- 36	인증종류1 -->
						<when test="item.searchCode == 36">and cate2.TEST_CATE_SEQ = #{item.searchWord}</when>
						<!-- 37	인증종류2 -->
						<when test="item.searchCode == 37">and cate3.TEST_CATE_SEQ = #{item.searchWord}</when>
						<!-- 38	인증종류3 -->
						<when test="item.searchCode == 38">and cate4.TEST_CATE_SEQ = #{item.searchWord}</when>
						<!-- 23	시험부 -->
						<when test="item.searchCode == 23">and if(TEST_TB.TEST_SEQ is null, '9999', TEST_ITEM_TB.TEST_TYPE_CODE) = #{item.searchWord}</when>
						<!-- 26	로데이터 -->
						<when test="item.searchCode == 26"></when>
						<!-- 27	모델명 -->
						<when test="item.searchCode == 27">and IFNULL(TEST_ITEM_TB.model, '') like concat('%',#{item.searchWord},'%')</when>
						<!-- 31	시험상태 -->
						<when test="item.searchCode == 31">and TEST_STATE_TB.STATE_CODE = #{item.searchWord}</when> 
		        	</choose>
				</foreach>
			</if>
	        ORDER BY TEST_TB.INS_DT
	    ) lst
	    order by no desc
        LIMIT #{pageUnit} OFFSET #{firstIndex};
        
	</select>
	
	<select id="testMemList" parameterType="String" resultType="egovMap">
		select
			date_format(TEST_MNGR_TB.ins_dt, '%Y-%m-%d') instDtStr,
			MEMBER_TB.MEM_NAME memName,
			fn_dept_name(TEST_MNGR_TB.INS_MEM_ID) insPos,
		    ins.MEM_NAME insName,
		    memo
		    
		from TEST_MNGR_TB
		
			inner join MEMBER_TB
			on TEST_MNGR_TB.TEST_MNG_ID = MEMBER_TB.id
			
			inner join MEMBER_TB ins
			on TEST_MNGR_TB.INS_MEM_ID = ins.id
		
		where 1=1
		and TEST_MNGR_TB.TEST_SEQ = #{testSeq}
		order by TEST_MNGR_SEQ desc
	</select>
	
	<insert id="testMemInsert" parameterType="testReq" >
		INSERT INTO TEST_MNGR_TB
		(
			TEST_SEQ,
			TEST_MNG_ID,
			MEMO,
			INS_MEM_ID,
			UDT_MEM_ID
		)
		VALUES
		(
			#{testSeq},
			#{testMngId},
			#{memo},
			#{insMemId},
			#{udtMemId}
		);
	</insert>
	
	<select id="testStateList" parameterType="String" resultType="egovMap">
		select
			date_format(TEST_STATE_TB.ins_dt, '%Y-%m-%d') instDtStr,
			ifnull(fn_code_name(TEST_STATE_TB.STATE_CODE ,'TS'), '-') state,
			fn_dept_name(TEST_STATE_TB.INS_MEM_ID) insPos,
		    ins.MEM_NAME insName,
		    memo
		    
		from TEST_STATE_TB
			
			inner join MEMBER_TB ins
			on TEST_STATE_TB.INS_MEM_ID = ins.id
		
		where 1=1
		and TEST_STATE_TB.TEST_SEQ = #{testSeq}
		order by TEST_STATE_SEQ desc
	</select>
	
	<insert id="testStateInsert" parameterType="testReq" useGeneratedKeys="true" keyProperty="testStateSeq">
		INSERT INTO TEST_STATE_TB
		(
			TEST_SEQ,
			STATE_CODE,
			MEMO,
			INS_MEM_ID,
			UDT_MEM_ID
		)
		VALUES
		(
			#{testSeq},
			#{stateCode},
			#{memo},
			#{insMemId},
			#{udtMemId}
		);
	</insert>

	<select id="testBoardList" parameterType="String" resultType="egovMap">
		select
			date_format(TEST_MEMO_TB.ins_dt, '%Y-%m-%d %T') instDtStr,
			fn_dept_name(TEST_MEMO_TB.INS_MEM_ID) insPos,
		    ins.MEM_NAME insName,
		    memo
		    
		from TEST_MEMO_TB
			
			inner join MEMBER_TB ins
			on TEST_MEMO_TB.INS_MEM_ID = ins.id
		
		where 1=1
		and TEST_MEMO_TB.TEST_SEQ = #{testSeq}
		order by TEST_MEMO_SEQ desc
	</select>
	
	<insert id="testBoardInsert" parameterType="testReq" >
		INSERT INTO TEST_MEMO_TB
		(
			TEST_SEQ,
			MEMO,
			INS_MEM_ID,
			UDT_MEM_ID
		)
		VALUES
		(
			#{testSeq},
			#{memo},
			#{insMemId},
			#{udtMemId}
		);
	</insert>
	
	<select id="testBoardAppDetail" parameterType="String" resultType="sbkRes">
		SELECT
		
			CONCAT ('SB', SBK_TB.SBK_YM, '-' , SBK_TB.TYPE, LPAD(SBK_TB.SBK_SEQ,4,0), IF(REVISION > 0, CONCAT ('-',REVISION), '')) sbkId,
			
			/* 신청기기 */
			JOB_TB.PRDCT_NAME,
			JOB_TB.MODEL_NAME,
			EXTEND_MODEL,
			CMPNY_IDNTF,
			ATHNT_NMBR,
			NEW_CMPNY_IDNTF1,
			NEW_CMPNY_IDNTF2,
			NEW_CMPNY_IDNTF3,
			ELCTR_RTNG_W,
			CLOCK_FRQNC,
			MDL_IDNTF,
			ADD_DEV,
			
			TEST_RPRT_K_YN,
			TEST_RPRT_N_YN,
			ELCTR_TEST_C_YN,
			ELCTR_TEST_K_YN,
			ELCTR_TEST_N_YN
		
		FROM SBK_TB	
			
			INNER JOIN JOB_TB ON SBK_TB.SBK_YM = JOB_TB.SBK_YM
		    AND SBK_TB.SBK_SEQ = JOB_TB.SBK_SEQ
	     	AND SBK_TB.REVISION = JOB_TB.SBK_REVISION
	     
		WHERE 1=1
		AND SBK_TB.SBK_YM = SUBSTRING(#{sbkId},3,2)
		AND SBK_TB.SBK_SEQ = SUBSTRING(#{sbkId},7,4)
		AND SBK_TB.REVISION = SUBSTRING(#{sbkId},12,1)
	</select>
	
	<update id="update" parameterType="testReq">
		UPDATE TEST_TB
		SET
			TEST_REPORT_DT = #{reportDt},
			UDT_MEM_ID = #{udtMemId},
			UDT_DT = NOW()
		WHERE TEST_SEQ = #{testSeq}
	</update>
	
</mapper>