<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="egovframework.tst.service.TstMapper">
	
	<select id="selectCrtfList" parameterType="int" resultType="egovMap">
  		SELECT test_cate_seq,
				name
		FROM TEST_CATE_TB
		WHERE use_yn = 1
		AND STATE != 'D'
		AND ifnull(top_depth_seq,0) = #{topCode}
	</select>

	<select id="selectStndrList" parameterType="tstParam" resultType="egovMap">
		select test_stndr_seq, test_stndr
		from TEST_STNDR_TB
		where use_yn = 1
		and country_code = #{countryCode}
		and crtf_type_seq = #{crtfTypeSeq}
		and test_type_code = #{testTypeCode}
	</select>

	<select id="selectDetail" parameterType="testReq" resultType="testRes">
		select test_seq
		from TEST_ITEM_TB
			inner join TEST_TB
		    on TEST_ITEM_TB.test_item_seq = TEST_TB.test_item_seq
		where TEST_ITEM_TB.test_item_seq = #{testItemSeq}
	</select>

	<insert id="insert" parameterType="testReq">
    <selectKey resultType="int" keyProperty="testNo" order="BEFORE">
		# 해당 발급년도에 신청된 시험
		SELECT 
			IF ( IFNULL(org.ORG_TEST_ITEM_SEQ,0) = 0,
					IFNULL(MAX(TEST_TB.TEST_NO)+1,1),
					orgNo.TEST_NO)  testNo
		FROM TEST_TB
		
			INNER JOIN TEST_ITEM_TB
		    ON TEST_ITEM_TB.TEST_ITEM_SEQ = TEST_TB.TEST_ITEM_SEQ
		    
		    INNER JOIN JOB_TB
		    ON JOB_TB.QUO_YM = TEST_ITEM_TB.QUO_YM
		    AND JOB_TB.QUO_SEQ = TEST_ITEM_TB.QUO_SEQ
		    
			LEFT JOIN TEST_ITEM_TB org
			ON org.TEST_TYPE_CODE = TEST_TB.TEST_TYPE_CODE
			AND org.TEST_ITEM_SEQ = #{testItemSeq}
			
			LEFT JOIN TEST_TB orgNo
			ON orgNo.TEST_ITEM_SEQ = org.ORG_TEST_ITEM_SEQ
		            
		# 특정 시험부
		WHERE TEST_TB.TEST_TYPE_CODE = #{testTypeCode}
		# 내 신청서의 발급년도
		AND JOB_TB.SBK_YM = (SELECT
								JOB_TB.SBK_YM
							FROM TEST_ITEM_TB
								
							    INNER JOIN JOB_TB
							    ON JOB_TB.QUO_YM = TEST_ITEM_TB.QUO_YM
							    AND JOB_TB.QUO_SEQ = TEST_ITEM_TB.QUO_SEQ
							    
							
							WHERE TEST_ITEM_TB.TEST_ITEM_SEQ = #{testItemSeq})
    </selectKey> 
		INSERT INTO TEST_TB
		(
			TEST_NO,
			TEST_TYPE_CODE,
			TEST_ITEM_SEQ,
			INS_MEM_ID,
			UDT_MEM_ID
		)
		VALUES
		(
			#{testNo},
			#{testTypeCode},
			#{testItemSeq},
        	#{insMemId},
			#{udtMemId}
		)
	</insert>
	
	<select id="selectListCnt" parameterType="testReq" resultType="int">
		SELECT 
			count(TEST_TB.test_seq)
		from TEST_ITEM_TB
		
			INNER JOIN TEST_TB
		    ON TEST_ITEM_TB.TEST_ITEM_SEQ = TEST_TB.TEST_ITEM_SEQ
		    
		    INNER JOIN JOB_TB
		    ON JOB_TB.QUO_YM = TEST_ITEM_TB.QUO_YM
		    AND JOB_TB.QUO_SEQ = TEST_ITEM_TB.QUO_SEQ
		    
		    INNER JOIN SBK_TB
		    ON JOB_TB.SBK_YM = SBK_TB.SBK_YM
		    AND JOB_TB.SBK_TYPE = SBK_TB.TYPE
		    AND JOB_TB.SBK_SEQ = SBK_TB.SBK_SEQ
		    AND JOB_TB.SBK_REVISION = SBK_TB.REVISION
		    
			INNER JOIN TEST_STNDR_TB
			ON TEST_ITEM_TB.TEST_STNDR_SEQ = TEST_STNDR_TB.TEST_STNDR_SEQ
		            
		    LEFT JOIN TEST_CATE_TB cate4 ON TEST_ITEM_TB.CRTF_TYPE_SEQ = cate4.TEST_CATE_SEQ
		    LEFT JOIN TEST_CATE_TB cate3 ON cate4.TOP_DEPTH_SEQ = cate3.TEST_CATE_SEQ
		    LEFT JOIN TEST_CATE_TB cate2 ON cate3.TOP_DEPTH_SEQ = cate2.TEST_CATE_SEQ
		    LEFT JOIN TEST_CATE_TB cate1 ON cate2.TOP_DEPTH_SEQ = cate1.TEST_CATE_SEQ
		    
            left join TEST_MNGR_TB
            on TEST_MNGR_TB.TEST_MNGR_SEQ = (
								select TEST_MNGR_SEQ
                                from TEST_MNGR_TB sub
                                where sub.TEST_SEQ = TEST_TB.TEST_SEQ
                                order by TEST_MNGR_SEQ desc
                                limit 1
            )
              
		where 1=1
		and TEST_ITEM_TB.state != 'D'
		<if test="searchVO != null">
	        <foreach collection="searchVO" item="item" separator="">
	        	<choose>
					<!-- 6	제품명 -->
					<when test="item.searchCode == 6">and IFNULL(JOB_TB.PRDCT_NAME, '') LIKE CONCAT('%',#{item.searchWord},'%')</when>
					<!-- 7	고지부담당자 -->
					<when test="item.searchCode == 7">and FN_MEM_NAME(JOB_TB.MNG_ID) LIKE CONCAT('%',#{item.searchWord},'%')</when>
					<!-- 8	기술책임자 -->
					<when test="item.searchCode == 8">and IFNULL(FN_MEM_NAME(TEST_ITEM_TB.REV_ID), '') LIKE CONCAT('%',#{item.searchWord},'%')</when>
					<!-- 9	시험담당자 -->
					<when test="item.searchCode == 9">and IFNULL(FN_MEM_NAME(TEST_MNGR_TB.TEST_MNG_ID), '') LIKE CONCAT('%',#{item.searchWord},'%')</when>
					<!-- 12	업체명 -->
					<when test="item.searchCode == 12">and IFNULL(CMPY_NAME, '') LIKE CONCAT('%',#{item.searchWord},'%')</when>
					<!-- 18	시험배정일 -->
					<when test="item.searchCode == 18">and DATE_FORMAT(TEST_TB.INS_DT, '%Y%m%d') BETWEEN DATE_FORMAT(#{item.startDate}, '%Y%m%d') AND DATE_FORMAT(#{item.endDate}, '%Y%m%d')</when>
					<!-- 20	예상완료일 -->
					<when test="item.searchCode == 20">and DATE_FORMAT(SBK_TB.EST_CMP_DT, '%Y%m%d') BETWEEN DATE_FORMAT(#{item.startDate}, '%Y%m%d') AND DATE_FORMAT(#{item.endDate}, '%Y%m%d')</when>
					<!-- 22	신청구분 -->
					<when test="item.searchCode == 22">AND 1 IN 
						<foreach collection="item.searchWords" item="sub" open="(" close=")" separator=",">${sub}</foreach>
					</when>
					<!-- 56	재발행구분 -->
	        		<when test="item.searchCode == 56">
	        			<choose>
	        				<when test="item.searchWord == 1">AND REVISION = 0</when>
	        				<when test="item.searchWord == 2">AND REVISION != 0</when>
	        			</choose>
	        		</when>
					<!-- 35	국가-->
					<when test="item.searchCode == 35">and cate1.TEST_CATE_SEQ = #{item.searchWord}</when>
					<!-- 36	인증종류1 -->
					<when test="item.searchCode == 36">and cate2.TEST_CATE_SEQ = #{item.searchWord}</when>
					<!-- 37	인증종류2 -->
					<when test="item.searchCode == 37">and cate3.TEST_CATE_SEQ = #{item.searchWord}</when>
					<!-- 38	인증종류3 -->
					<when test="item.searchCode == 38">and cate4.TEST_CATE_SEQ = #{item.searchWord}</when>
					<!-- 23	시험부 -->
	        		<when test="item.searchCode == 23">AND TEST_ITEM_TB.TEST_TYPE_CODE IN
	        			<foreach collection="item.searchWords" item="sub" open="(" close=")" separator=",">#{sub}</foreach>
	        		</when>
	        		<!-- 26	로데이터 -->
					<when test="item.searchCode == 26"></when>
					<!-- 27	모델명 -->
					<when test="item.searchCode == 27">and IFNULL(TEST_ITEM_TB.model, '') LIKE CONCAT('%',#{item.searchWord},'%')</when>
					<!-- 31	시험상태 -->
					<when test="item.searchCode == 31">and TEST_TB.TEST_STATE_CODE = #{item.searchWord}</when>
					<!-- 40	시험규격 -->
	        		<when test="item.searchCode == 40">AND TEST_STNDR_TB.TEST_STNDR like CONCAT('%',#{item.searchWord},'%')</when>
					<!-- 50	시험번호 -->
					<when test="item.searchCode == 50">AND CONCAT ('SB', JOB_TB.SBK_YM, '-' , JOB_TB.SBK_TYPE, LPAD(JOB_TB.SBK_SEQ,4,0),
													    			'-',TEST_TB.TEST_TYPE_CODE,LPAD(TEST_TB.TEST_NO,4,0),
													    			IF(JOB_TB.SBK_REVISION > 0, CONCAT ('-',JOB_TB.SBK_REVISION), '')) LIKE CONCAT('%',#{item.searchWord},'%')</when> 
					<!-- 64	개별완료요청일 -->
					<when test="item.searchCode == 64">AND DATE_FORMAT(TEST_ITEM_TB.EST_CMP_DT, '%Y%m%d') BETWEEN DATE_FORMAT(#{item.startDate}, '%Y%m%d') AND DATE_FORMAT(#{item.endDate}, '%Y%m%d')</when>
	        	</choose>
			</foreach>
		</if>
        
	</select>
		
	<select id="selectList" parameterType="testReq" resultType="testRes">
		SELECT
		
			JOB_TB.JOB_SEQ,
		    TEST_TB.TEST_SEQ,
		    IFNULL (MEMO_CNT, 0) MEMO_CNT,
		    IFNULL (FILE_CNT, 0) FILE_CNT,
		    CONCAT ('SB', JOB_TB.SBK_YM, '-' , JOB_TB.SBK_TYPE, LPAD(JOB_TB.SBK_SEQ,4,0), IF(JOB_TB.SBK_REVISION > 0, CONCAT ('-',JOB_TB.SBK_REVISION), '')) sbkId,
		    DATE_FORMAT(TEST_TB.INS_DT, '%Y-%m-%d') insDtStr,
		    CONCAT ('SB', JOB_TB.SBK_YM, '-' , JOB_TB.SBK_TYPE, LPAD(JOB_TB.SBK_SEQ,4,0),
		    			'-',TEST_TB.TEST_TYPE_CODE,LPAD(TEST_TB.TEST_NO,4,0),
		    			IF(JOB_TB.SBK_REVISION > 0, CONCAT ('-',JOB_TB.SBK_REVISION), '')) testId,
		    IFNULL (FN_CODE_NAME(TEST_TB.TEST_STATE_CODE,'TS'), '-') test_state,
		    IFNULL (TEST_TB.TEST_STATE_CODE, '') STATE_CODE,
		    IFNULL (DATE_FORMAT(TEST_ITEM_TB.EST_CMP_DT, '%Y-%m-%d'), '-') estCmpDt,
		    '미반입' imPoint,
		    '0' imSeq,
		    CMPY_NAME,
		    TEST_ITEM_TB.PRODUCT,
			CONCAT_WS(',', IF(SG_NEW_YN=1,'신규',NULL),IF(SG_GB_YN=1,'기술기준 변경',NULL),IF(SG_DG_YN=1,'동일기자재',NULL),IF(SG_ETC_YN=1,'기술기준외 변경',NULL)) sgText,
			cate1.NAME crtfc1Name,
		    cate2.NAME crtfc2Name,
		    cate3.NAME crtfc3Name,
		    cate4.NAME crtfc4Name,
		    FN_CODE_NAME (TEST_ITEM_TB.TEST_TYPE_CODE,'TT') TEST_TYPE,
		    TEST_STNDR_TB.TEST_STNDR_SEQ,
		    IF (TEST_ITEM_TB.TEST_STNDR_SEQ=0, TEST_ITEM_TB.TEST_STNDR_TEXT, IFNULL (TEST_STNDR_TB.TEST_STNDR, '')) TEST_STNDR,
		    TEST_ITEM_TB.MEMO,
		    TEST_ITEM_TB.MODEL,
		    IFNULL (FN_MEM_NAME(TEST_ITEM_TB.REV_ID), '-') RevName,
			IFNULL (FN_MEM_NAME(TEST_MNGR_TB.TEST_MNG_ID), '미배정') TestMngName,
			IFNULL (FN_POS_NAME(TEST_MNGR_TB.TEST_MNG_ID), '') TestMngPos,
			IFNULL (TEST_MNGR_TB.TEST_MNG_ID, '') TEST_MNG_ID,
		    FN_MEM_NAME (JOB_TB.MNG_ID) memName,
		    IF (JOB_TB.SBK_REVISION=0, 
		    	
		    	/* 원본신청서의 경우 내 로데이터 */
		    	IFNULL (RAW_TB.RAW_SEQ, ''), 
		    	/* 재발행신청서의 경우 원본신청서의 로데이터 */
		    	(SELECT subRaw.RAW_SEQ FROM TEST_TB subTest
					INNER JOIN RAW_TB subRaw
				    ON subTest.TEST_SEQ = subRaw.TEST_SEQ
				WHERE subTest.TEST_ITEM_SEQ = TEST_ITEM_TB.ORG_TEST_ITEM_SEQ
				    LIMIT 1
			)) raw_seq,
		    IFNULL (DATE_FORMAT(TEST_TB.REPORT_DT, '%Y-%m-%d'), '-') REPORT_DT,
		    CONCAT (FN_DEPT_NAME(TEST_TB.UDT_MEM_ID),' ',FN_MEM_NAME(TEST_TB.UDT_MEM_ID)) REPORT_DT_INS_NAME,
			DATE_FORMAT(TEST_TB.UDT_DT, '%Y-%m-%d') REPORT_DT_INS_DT,
		    '-' rawState
		    
		FROM TEST_ITEM_TB
		
			INNER JOIN TEST_TB ON TEST_ITEM_TB.TEST_ITEM_SEQ = TEST_TB.TEST_ITEM_SEQ
		    
		    INNER JOIN JOB_TB ON JOB_TB.QUO_YM = TEST_ITEM_TB.QUO_YM
		    AND JOB_TB.QUO_SEQ = TEST_ITEM_TB.QUO_SEQ
		    
		    INNER JOIN SBK_TB ON JOB_TB.SBK_YM = SBK_TB.SBK_YM
		    AND JOB_TB.SBK_TYPE = SBK_TB.TYPE
		    AND JOB_TB.SBK_SEQ = SBK_TB.SBK_SEQ
		    AND JOB_TB.SBK_REVISION = SBK_TB.REVISION
		     
			INNER JOIN TEST_STNDR_TB
			ON TEST_ITEM_TB.TEST_STNDR_SEQ = TEST_STNDR_TB.TEST_STNDR_SEQ
		            
		    LEFT JOIN TEST_CATE_TB cate4 ON TEST_ITEM_TB.CRTF_TYPE_SEQ = cate4.TEST_CATE_SEQ
		    LEFT JOIN TEST_CATE_TB cate3 ON cate4.TOP_DEPTH_SEQ = cate3.TEST_CATE_SEQ
		    LEFT JOIN TEST_CATE_TB cate2 ON cate3.TOP_DEPTH_SEQ = cate2.TEST_CATE_SEQ
		    LEFT JOIN TEST_CATE_TB cate1 ON cate2.TOP_DEPTH_SEQ = cate1.TEST_CATE_SEQ
			
		    LEFT JOIN TEST_MNGR_TB
            ON TEST_MNGR_TB.TEST_MNGR_SEQ = (
								SELECT TEST_MNGR_SEQ
                                FROM TEST_MNGR_TB SUB
                                WHERE SUB.TEST_SEQ = TEST_TB.TEST_SEQ
                                ORDER BY TEST_MNGR_SEQ DESC
                                LIMIT 1
            )
            
            LEFT JOIN RAW_TB
            ON TEST_TB.TEST_SEQ = RAW_TB.TEST_SEQ
            
            /* 게시판 게시글 갯수 */
            LEFT JOIN (SELECT TEST_SEQ, COUNT(1) MEMO_CNT FROM TEST_MEMO_TB GROUP BY TEST_MEMO_TB.TEST_SEQ) TEST_MEMO_TB
            ON TEST_TB.TEST_SEQ = TEST_MEMO_TB.TEST_SEQ
               
           	/* 첨부파일 갯수 */
            LEFT JOIN (SELECT TEST_SEQ, COUNT(1) FILE_CNT FROM FILE_RAW_TB GROUP BY FILE_RAW_TB.TEST_SEQ) FILE_RAW_TB
            ON TEST_TB.TEST_SEQ = FILE_RAW_TB.TEST_SEQ
               
		WHERE 1=1
		AND TEST_ITEM_TB.STATE != 'D'
		<if test="searchVO != null">
	        <foreach collection="searchVO" item="item" separator="">
	        	<choose>
					<!-- 6	제품명 -->
					<when test="item.searchCode == 6">and IFNULL(JOB_TB.PRDCT_NAME, '') LIKE CONCAT('%',#{item.searchWord},'%')</when>
					<!-- 7	고지부담당자 -->
					<when test="item.searchCode == 7">and FN_MEM_NAME(JOB_TB.MNG_ID) LIKE CONCAT('%',#{item.searchWord},'%')</when>
					<!-- 8	기술책임자 -->
					<when test="item.searchCode == 8">and IFNULL(FN_MEM_NAME(TEST_ITEM_TB.REV_ID), '') LIKE CONCAT('%',#{item.searchWord},'%')</when>
					<!-- 9	시험담당자 -->
					<when test="item.searchCode == 9">and IFNULL(FN_MEM_NAME(TEST_MNGR_TB.TEST_MNG_ID), '') LIKE CONCAT('%',#{item.searchWord},'%')</when>
					<!-- 12	업체명 -->
					<when test="item.searchCode == 12">and IFNULL(CMPY_NAME, '') LIKE CONCAT('%',#{item.searchWord},'%')</when>
					<!-- 18	시험배정일 -->
					<when test="item.searchCode == 18">and DATE_FORMAT(TEST_TB.INS_DT, '%Y%m%d') BETWEEN DATE_FORMAT(#{item.startDate}, '%Y%m%d') AND DATE_FORMAT(#{item.endDate}, '%Y%m%d')</when>
					<!-- 20	예상완료일 -->
					<when test="item.searchCode == 20">and DATE_FORMAT(SBK_TB.EST_CMP_DT, '%Y%m%d') BETWEEN DATE_FORMAT(#{item.startDate}, '%Y%m%d') AND DATE_FORMAT(#{item.endDate}, '%Y%m%d')</when>
					<!-- 22	신청구분 -->
					<when test="item.searchCode == 22">AND 1 IN 
						<foreach collection="item.searchWords" item="sub" open="(" close=")" separator=",">${sub}</foreach>
					</when>
					<!-- 35	국가-->
					<when test="item.searchCode == 35">and cate1.TEST_CATE_SEQ = #{item.searchWord}</when>
					<!-- 36	인증종류1 -->
					<when test="item.searchCode == 36">and cate2.TEST_CATE_SEQ = #{item.searchWord}</when>
					<!-- 37	인증종류2 -->
					<when test="item.searchCode == 37">and cate3.TEST_CATE_SEQ = #{item.searchWord}</when>
					<!-- 38	인증종류3 -->
					<when test="item.searchCode == 38">and cate4.TEST_CATE_SEQ = #{item.searchWord}</when>
					<!-- 23	시험부 -->
	        		<when test="item.searchCode == 23">AND TEST_ITEM_TB.TEST_TYPE_CODE IN
	        			<foreach collection="item.searchWords" item="sub" open="(" close=")" separator=",">#{sub}</foreach>
	        		</when>
	        		<!-- 56	재발행구분 -->
	        		<when test="item.searchCode == 56">
	        			<choose>
	        				<when test="item.searchWord == 1">AND REVISION = 0</when>
	        				<when test="item.searchWord == 2">AND REVISION != 0</when>
	        			</choose>
	        		</when>
					<!-- 26	로데이터 -->
					<when test="item.searchCode == 26"></when>
					<!-- 27	모델명 -->
					<when test="item.searchCode == 27">and IFNULL(TEST_ITEM_TB.model, '') LIKE CONCAT('%',#{item.searchWord},'%')</when>
					<!-- 31	시험상태 -->
					<when test="item.searchCode == 31">and TEST_TB.TEST_STATE_CODE = #{item.searchWord}</when>
					<!-- 40	시험규격 -->
	        		<when test="item.searchCode == 40">AND TEST_STNDR_TB.TEST_STNDR like CONCAT('%',#{item.searchWord},'%')</when>
					<!-- 50	시험번호 -->
					<when test="item.searchCode == 50">AND CONCAT ('SB', JOB_TB.SBK_YM, '-' , JOB_TB.SBK_TYPE, LPAD(JOB_TB.SBK_SEQ,4,0),
													    			'-',TEST_TB.TEST_TYPE_CODE,LPAD(TEST_TB.TEST_NO,4,0),
													    			IF(JOB_TB.SBK_REVISION > 0, CONCAT ('-',JOB_TB.SBK_REVISION), '')) LIKE CONCAT('%',#{item.searchWord},'%')</when>
					<!-- 61	신청서번호 -->
					<when test="item.searchCode == 61">AND CONCAT ('SB', SBK_TB.SBK_YM, '-' , SBK_TB.TYPE, LPAD(SBK_TB.SBK_SEQ,4,0), IF(REVISION > 0, CONCAT ('-',REVISION), '')) LIKE CONCAT ('%',#{item.searchWord},'%')</when>
					<!-- 64	개별완료요청일 -->
					<when test="item.searchCode == 64">AND DATE_FORMAT(TEST_ITEM_TB.EST_CMP_DT, '%Y%m%d') BETWEEN DATE_FORMAT(#{item.startDate}, '%Y%m%d') AND DATE_FORMAT(#{item.endDate}, '%Y%m%d')</when>
			
	        	</choose>
			</foreach>
		</if>
        ORDER BY TEST_TB.TEST_SEQ DESC
      		LIMIT #{pageUnit} OFFSET #{firstIndex};
	</select>
	
	<select id="testMemList" parameterType="String" resultType="egovMap">
		select
			date_format(TEST_MNGR_TB.ins_dt, '%Y-%m-%d') instDtStr,
			MEMBER_TB.MEM_NAME memName,
			fn_dept_name(TEST_MNGR_TB.INS_MEM_ID) insPos,
		    ins.MEM_NAME insName,
		    memo
		    
		from TEST_MNGR_TB
		
			inner join MEMBER_TB
			on TEST_MNGR_TB.TEST_MNG_ID = MEMBER_TB.id
			
			inner join MEMBER_TB ins
			on TEST_MNGR_TB.INS_MEM_ID = ins.id
		
		where 1=1
		and TEST_MNGR_TB.TEST_SEQ = #{testSeq}
		order by TEST_MNGR_SEQ desc
	</select>
	
	<insert id="testMemInsert" parameterType="testReq" >
		INSERT INTO TEST_MNGR_TB
		(
			TEST_SEQ,
			TEST_MNG_ID,
			MEMO,
			INS_MEM_ID,
			UDT_MEM_ID
		)
		VALUES
		(
			#{testSeq},
			#{testMngId},
			#{memo},
			#{insMemId},
			#{udtMemId}
		);
	</insert>
	
	<select id="testStateList" parameterType="String" resultType="egovMap">
		select
			date_format(TEST_STATE_TB.ins_dt, '%Y-%m-%d') instDtStr,
			ifnull(fn_code_name(TEST_STATE_TB.STATE_CODE ,'TS'), '-') state,
			fn_dept_name(TEST_STATE_TB.INS_MEM_ID) insPos,
		    ins.MEM_NAME insName,
		    memo
		    
		from TEST_STATE_TB
			
			inner join MEMBER_TB ins
			on TEST_STATE_TB.INS_MEM_ID = ins.id
		
		where 1=1
		and TEST_STATE_TB.TEST_SEQ = #{testSeq}
		order by TEST_STATE_SEQ desc
	</select>
	
	<insert id="testStateInsert" parameterType="testReq" useGeneratedKeys="true" keyProperty="testStateSeq">
		INSERT INTO TEST_STATE_TB
		(
			TEST_SEQ,
			STATE_CODE,
			MEMO,
			INS_MEM_ID,
			UDT_MEM_ID
		)
		VALUES
		(
			#{testSeq},
			#{stateCode},
			#{memo},
			#{insMemId},
			#{udtMemId}
		);
	</insert>

	<update id="testStateUpdate" parameterType="testReq">
		UPDATE TEST_TB
		SET
			TEST_STATE_CODE = #{stateCode},
			UDT_MEM_ID = #{udtMemId},
			UDT_DT = NOW()
		WHERE TEST_SEQ = #{testSeq}
	</update>
	
	<select id="testBoardList" parameterType="String" resultType="egovMap">
		select
			date_format(TEST_MEMO_TB.ins_dt, '%Y-%m-%d %T') instDtStr,
			fn_dept_name(TEST_MEMO_TB.INS_MEM_ID) insPos,
		    ins.MEM_NAME insName,
		    memo
		    
		from TEST_MEMO_TB
			
			inner join MEMBER_TB ins
			on TEST_MEMO_TB.INS_MEM_ID = ins.id
		
		where 1=1
		and TEST_MEMO_TB.TEST_SEQ = #{testSeq}
		order by TEST_MEMO_SEQ desc
	</select>
	
	<insert id="testBoardInsert" parameterType="testReq" >
		INSERT INTO TEST_MEMO_TB
		(
			TEST_SEQ,
			MEMO,
			INS_MEM_ID,
			UDT_MEM_ID
		)
		VALUES
		(
			#{testSeq},
			#{memo},
			#{insMemId},
			#{udtMemId}
		);
	</insert>
	
	<select id="testBoardAppDetail" parameterType="String" resultType="sbkRes">
		SELECT
		
			CONCAT ('SB', SBK_TB.SBK_YM, '-' , SBK_TB.TYPE, LPAD(SBK_TB.SBK_SEQ,4,0), IF(REVISION > 0, CONCAT ('-',REVISION), '')) sbkId,
			SBK_TB.REVISION,
			
			/* 신청기기 */
			JOB_TB.PRDCT_NAME,
			JOB_TB.MODEL_NAME,
			EXTEND_MODEL,
			SBK_TB.CMPNY_IDNTF,
			ATHNT_NMBR,
			NEW_CMPNY_IDNTF1,
			NEW_CMPNY_IDNTF2,
			NEW_CMPNY_IDNTF3,
			ELCTR_RTNG_W,
			CLOCK_FRQNC,
			MDL_IDNTF,
			ADD_DEV,
			
			/* 23-10-12 : 내용추가 */
            CMPNY_MEMO,
            CLASS_A_YN,
            CLASS_B_YN,
            IFNULL (CMPY_TB.CMPY_NAME, '') CMPY_TITLE,
            
            /* 23-10-20 : 내용추가 */
            JOB_TB.CMPY_NAME,
            ADDRESS,
            MNFCT_CMPNY,
            MNFCT_ADRES,
            IFNULL (FN_CODE_NAME (MNFCT_CNTRY_CODE, 'SN'), '') MNFCT_CNTRY,
            
			TEST_RPRT_K_YN,
			TEST_RPRT_N_YN,
			ELCTR_TEST_C_YN,
			ELCTR_TEST_K_YN,
			ELCTR_TEST_N_YN
		
		FROM SBK_TB	
			
			INNER JOIN JOB_TB ON SBK_TB.SBK_YM = JOB_TB.SBK_YM
			AND SBK_TB.TYPE = JOB_TB.SBK_TYPE
		    AND SBK_TB.SBK_SEQ = JOB_TB.SBK_SEQ
	     	AND SBK_TB.REVISION = JOB_TB.SBK_REVISION
	     
			LEFT JOIN CMPY_TB ON JOB_TB.CMPY_SEQ = CMPY_TB.CMPY_SEQ AND CMPY_CODE = '0000'
	     
		WHERE 1=1
		AND SBK_TB.SBK_YM = SUBSTRING(#{sbkId},3,2)
		AND SBK_TB.TYPE = SUBSTRING(#{sbkId},6,1)
		AND SBK_TB.SBK_SEQ = SUBSTRING(#{sbkId},7,4)
		AND SBK_TB.REVISION = SUBSTRING(#{sbkId},12,1)
	</select>
	
	<update id="update" parameterType="testReq">
		UPDATE TEST_TB
		SET
			REPORT_DT = IF (#{reportDt} = '', NULL, #{reportDt}),
			UDT_MEM_ID = #{udtMemId},
			UDT_DT = NOW()
		WHERE TEST_SEQ = #{testSeq}
	</update>
	
	
	<select id="selectSaleListCnt" parameterType="comParam" resultType="int">
		SELECT COUNT(1) FROM (		
			SELECT 
				COUNT(1)
			FROM
			    SBK_TB
				
				INNER JOIN JOB_TB ON SBK_TB.SBK_YM = JOB_TB.SBK_YM
				AND SBK_TB.TYPE = JOB_TB.SBK_TYPE
				AND SBK_TB.SBK_SEQ = JOB_TB.SBK_SEQ 
				AND SBK_TB.REVISION = JOB_TB.SBK_REVISION
				AND JOB_TB.STATE != 'D'
			   
				INNER JOIN QUO_TB ON QUO_TB.QUO_YM = JOB_TB.QUO_YM
				AND QUO_TB.QUO_SEQ = JOB_TB.QUO_SEQ
                
                LEFT JOIN CMPY_TB ON JOB_TB.CMPY_SEQ = CMPY_TB.CMPY_SEQ
                
                INNER JOIN TEST_ITEM_TB on JOB_TB.QUO_YM = TEST_ITEM_TB.QUO_YM
			    AND JOB_TB.QUO_SEQ = TEST_ITEM_TB.QUO_SEQ and TEST_ITEM_TB.STATE != 'D'
                
                INNER JOIN TEST_TB on TEST_TB.TEST_ITEM_SEQ = TEST_ITEM_TB.TEST_ITEM_SEQ
			    INNER JOIN TEST_STNDR_TB on TEST_ITEM_TB.TEST_STNDR_SEQ = TEST_STNDR_TB.TEST_STNDR_SEQ
                  
                LEFT JOIN TEST_MNGR_TB
				ON TEST_MNGR_TB.TEST_MNGR_SEQ = (
									SELECT TEST_MNGR_SEQ
									FROM TEST_MNGR_TB SUB
									WHERE SUB.TEST_SEQ = TEST_TB.TEST_SEQ
									ORDER BY TEST_MNGR_SEQ DESC
									LIMIT 1
				)
                      
	            LEFT JOIN 
	            (
				    SELECT 
				        SBK_ID,
			            IM_YM,
			            IM_SEQ,
			            CARRY_IN_DATE
				    FROM
				        IM_TB
				        
					    LEFT JOIN IM_SUB_TB ON IM_SUB_TB.im_id = CONCAT ('IM', IM_TB.IM_YM, '-', 'G', LPAD(IM_TB.IM_SEQ,4,0))
				    WHERE DIV_CODE = 1 AND IM_SUB_TB.STATE != 'D' GROUP BY SBK_ID
			    ) IM_TB ON IM_TB.SBK_ID = CONCAT ('SB', SBK_TB.SBK_YM, '-' , SBK_TB.TYPE, LPAD(SBK_TB.SBK_SEQ,4,0), IF(REVISION > 0, CONCAT ('-',REVISION), ''))
					        
			WHERE 1 = 1
			
			<include refid="whereList"/>
			
			GROUP BY SBK_TB.SBK_YM, SBK_TB.TYPE, SBK_TB.SBK_SEQ, SBK_TB.REVISION
        
        ) cnt
	</select>
			
	<resultMap type="testRes" id="sbkMap">
		<id column="sbkId" property="sbkId"/>
		<result column="no" property="no"/>
		<result column="sbkInsDtStr" property="sbkInsDtStr"/>
		<result column="quoId" property="quoId"/>
		<result column="quoInsDtStr" property="quoInsDtStr"/>
		<result column="carryInDt" property="carryInDt"/>
		<result column="estCmpDt" property="estCmpDt"/>
		<result column="cmpyTitle" property="cmpyTitle"/>
		<result column="cmpyName" property="cmpyName"/>
		<result column="prdctName" property="prdctName"/>
      	<result column="modelName" property="modelName"/>
		<result column="sgText" property="sgText"/>
		<result column="mngName" property="mngName"/>
		<result column="job_seq" property="jobSeq"/>
		<result column="stateCode" property="stateCode"/>
		<result column="stateUdtDt" property="stateUdtDt"/>
       	<result column="testCnt" property="testCnt"/>
		<collection property="items" ofType="testItemDTO">
        	<id column="test_item_seq" property="testItemSeq"/>
        	<result column="test_seq" property="testSeq"/>
        	<result column="testId" property="testId"/>
        	<result column="testEstCmpDt" property="estCmpDt"/>
        	<result column="crtfc1" property="crtfc1"/>
	        <result column="crtfc1Name" property="crtfc1Name"/>
    	    <result column="crtfc2" property="crtfc2"/>
       	 	<result column="crtfc2Name" property="crtfc2Name"/>
       	 	<result column="crtfc3" property="crtfc3"/>
       	 	<result column="crtfc3Name" property="crtfc3Name"/>
       	 	<result column="crtfc4" property="crtfc4"/>
       	 	<result column="crtfc4Name" property="crtfc4Name"/>
       	 	<result column="test_stndr_seq" property="testStndrSeq"/>
       	 	<result column="test_stndr" property="testStndr"/>
       	 	<result column="memo" property="memo"/>
       	 	<result column="test_type" property="testType"/>
       	 	<result column="testMem" property="testMem"/>
       	 	<result column="testInDt" property="testInDt"/>
       	 	<result column="testState" property="testState"/>
       	 	<result column="netSales" property="netSales"/>
       	 	<result column="memoCnt" property="memoCnt"/>
        </collection>
	</resultMap>
	<select id="selectSaleList" parameterType="comParam" resultMap="sbkMap">

        SELECT
        
            CONCAT ('Q', QUO_TB.QUO_YM, '-' , QUO_TB.TYPE, LPAD(QUO_TB.QUO_SEQ,4,0)) quoId, 
			DATE_FORMAT(QUO_TB.INS_DT, '%Y-%m-%d') quoInsDtStr,
                       
		    CONCAT ('SB', SBK_TB.SBK_YM, '-' , SBK_TB.TYPE, LPAD(SBK_TB.SBK_SEQ,4,0), IF(REVISION > 0, CONCAT ('-',REVISION), '')) sbkId,
		    DATE_FORMAT(SBK_TB.INS_DT, '%Y-%m-%d') sbkInsDtStr,

			/* 현장시험일 경우에는 시료반입일에 현장시험 노출 */
			IF (TEST_PLACE_OUT_YN=1,'현장시험',IFNULL (DATE_FORMAT(IM_TB.CARRY_IN_DATE, '%Y-%m-%d'),'-')) carryInDt,
			IFNULL (DATE_FORMAT(TEST_TB.INS_DT, '%y-%m-%d'), '') testInDt,
		    IFNULL (DATE_FORMAT(SBK_TB.EST_CMP_DT, '%Y-%m-%d'), '-') estCmpDt,
		    
            JOB_TB.CMPY_SEQ,
		    IFNULL (CODE_PT.TYPE_NAME, '미등록') cmpyType,
		    IFNULL (CMPY_TB.CMPY_NAME, '') cmpyTitle,
		    IFNULL (JOB_TB.CMPY_NAME, '') cmpyName,
		    JOB_TB.PRDCT_NAME prdctName,
            JOB_TB.MODEL_NAME modelName,
                     
		    CONCAT_WS (
		        ',',
		        IF (SG_NEW_YN = 1, '신규', null),
		        IF (SG_GB_YN = 1, '기술기준 변경', null),
		        IF (SG_DG_YN = 1, '동일기자재', null),
		        IF (SG_ETC_YN = 1, '기술기준외 변경', null)
		    ) sgText,
		    
		    /* 시험항목 및 비용 */
		    COUNT(TEST_TB.TEST_SEQ) testCnt,
		    TEST_TB.TEST_SEQ,
		    CONCAT ('SB', JOB_TB.SBK_YM, '-' , JOB_TB.SBK_TYPE, LPAD(JOB_TB.SBK_SEQ,4,0),
    			'-',TEST_TB.TEST_TYPE_CODE,LPAD(TEST_TB.TEST_NO,4,0),
    			IF(JOB_TB.SBK_REVISION > 0, CONCAT ('-',JOB_TB.SBK_REVISION), '')) testId,
		    TEST_ITEM_TB.TEST_ITEM_SEQ,
		    IFNULL (DATE_FORMAT(TEST_ITEM_TB.EST_CMP_DT, '%y-%m-%d'), '-') testEstCmpDt,
		    cate1.TEST_CATE_SEQ crtfc1,
		    cate2.TEST_CATE_SEQ crtfc2,
		    cate3.TEST_CATE_SEQ crtfc3,
		    cate4.TEST_CATE_SEQ crtfc4,
		    cate1.NAME crtfc1Name,
		    IFNULL (cate2.NAME, '') crtfc2Name,
		    IFNULL (cate3.NAME, '') crtfc3Name,
		    IFNULL (cate4.NAME, '') crtfc4Name,
                     
		    TEST_STNDR_TB.TEST_STNDR_SEQ,
		    IF (TEST_ITEM_TB.TEST_STNDR_SEQ=0, TEST_ITEM_TB.TEST_STNDR_TEXT, IFNULL (TEST_STNDR_TB.TEST_STNDR, '')) TEST_STNDR,
		    
		    TEST_ITEM_TB.MEMO,
		    IFNULL (CODE_TT.TYPE_NAME, '') TEST_TYPE,
		   
		
		    IF (FN_MEM_NAME(TEST_MNGR_TB.TEST_MNG_ID)='', '미배정', FN_MEM_NAME(TEST_MNGR_TB.TEST_MNG_ID)) testMem,
            FN_MEM_NAME (JOB_TB.MNG_ID) mngName,
                      
		    IFNULL (CODE_TS.TYPE_NAME, '-') testState,
			TEST_ITEM_TB.NET_SALES netSales,

			IFNULL (MEMO_CNT, 0) memoCnt,
            JOB_TB.JOB_SEQ,
            IFNULL (CODE_CP.TYPE_NAME, '') stateCode,
    		IFNULL (DATE_FORMAT(JOB_TB.STATE_UDT_DT, '%Y-%m-%d'), '') stateUdtDt
                     
		FROM
		    SBK_TB
			
			INNER JOIN JOB_TB ON SBK_TB.SBK_YM = JOB_TB.SBK_YM
			AND SBK_TB.TYPE = JOB_TB.SBK_TYPE
			AND SBK_TB.SBK_SEQ = JOB_TB.SBK_SEQ 
			AND SBK_TB.REVISION = JOB_TB.SBK_REVISION
			AND JOB_TB.STATE != 'D'
		   
			INNER JOIN QUO_TB ON QUO_TB.QUO_YM = JOB_TB.QUO_YM
			AND QUO_TB.QUO_SEQ = JOB_TB.QUO_SEQ
                    
            LEFT JOIN CMPY_TB ON JOB_TB.CMPY_SEQ = CMPY_TB.CMPY_SEQ
		    
            INNER JOIN TEST_ITEM_TB on JOB_TB.QUO_YM = TEST_ITEM_TB.QUO_YM
		    AND JOB_TB.QUO_SEQ = TEST_ITEM_TB.QUO_SEQ and TEST_ITEM_TB.STATE != 'D'
            INNER JOIN TEST_TB on TEST_TB.TEST_ITEM_SEQ = TEST_ITEM_TB.TEST_ITEM_SEQ
		    INNER JOIN TEST_STNDR_TB on TEST_ITEM_TB.TEST_STNDR_SEQ = TEST_STNDR_TB.TEST_STNDR_SEQ
                     
		    LEFT JOIN TEST_CATE_TB cate4 ON TEST_ITEM_TB.CRTF_TYPE_SEQ = cate4.TEST_CATE_SEQ
		    LEFT JOIN TEST_CATE_TB cate3 ON cate4.TOP_DEPTH_SEQ = cate3.TEST_CATE_SEQ
		    LEFT JOIN TEST_CATE_TB cate2 ON cate3.TOP_DEPTH_SEQ = cate2.TEST_CATE_SEQ
		    LEFT JOIN TEST_CATE_TB cate1 ON cate2.TOP_DEPTH_SEQ = cate1.TEST_CATE_SEQ
		    
            LEFT JOIN TEST_MNGR_TB
			ON TEST_MNGR_TB.TEST_MNGR_SEQ = (
								SELECT TEST_MNGR_SEQ
								FROM TEST_MNGR_TB SUB
								WHERE SUB.TEST_SEQ = TEST_TB.TEST_SEQ
								ORDER BY TEST_MNGR_SEQ DESC
								LIMIT 1
			)
                     
            LEFT JOIN 
            (
			    SELECT 
			        SBK_ID,
		            IM_YM,
		            IM_SEQ,
		            CARRY_IN_DATE
			    FROM
			        IM_TB
			        
				    LEFT JOIN IM_SUB_TB ON IM_SUB_TB.im_id = CONCAT ('IM', IM_TB.IM_YM, '-', 'G', LPAD(IM_TB.IM_SEQ,4,0))
			    WHERE DIV_CODE = 1 AND IM_SUB_TB.STATE != 'D' GROUP BY SBK_ID
		    ) IM_TB ON IM_TB.SBK_ID = CONCAT ('SB', SBK_TB.SBK_YM, '-' , SBK_TB.TYPE, LPAD(SBK_TB.SBK_SEQ,4,0), IF(REVISION > 0, CONCAT ('-',REVISION), ''))
                     
            /* 게시판 게시글 갯수 */
			LEFT JOIN (SELECT TEST_SEQ, COUNT(1) MEMO_CNT FROM TEST_MEMO_TB GROUP BY TEST_MEMO_TB.TEST_SEQ) TEST_MEMO_TB
			ON TEST_TB.TEST_SEQ = TEST_MEMO_TB.TEST_SEQ
             
            LEFT JOIN COMCODE_TB CODE_PT ON CODE_PT.TYPE_CD = CMPY_TB.CMPY_CODE AND CODE_PT.TOP_CD = 'PT'
            LEFT JOIN COMCODE_TB CODE_TT ON CODE_TT.TYPE_CD = TEST_ITEM_TB.TEST_TYPE_CODE AND CODE_TT.TOP_CD = 'TT'
            LEFT JOIN COMCODE_TB CODE_TS ON CODE_TS.TYPE_CD = TEST_TB.TEST_STATE_CODE AND CODE_TS.TOP_CD = 'TS'
            LEFT JOIN COMCODE_TB CODE_CP ON CODE_CP.TYPE_CD = JOB_TB.STATE_CODE AND CODE_CP.TOP_CD = 'CP'
                     
		WHERE
		    1 = 1
		    
		<include refid="whereList"/>
		
		GROUP BY JOB_SEQ
      	ORDER BY JOB_SEQ DESC
		
		LIMIT #{pageUnit} OFFSET #{firstIndex};
	</select>
	
	<select id="selectSubList" parameterType="String" resultType="testItemDTO">
		SELECT
		
		    /* 시험항목 및 비용 */
		    TEST_TB.TEST_SEQ,
		    IFNULL (DATE_FORMAT(TEST_TB.INS_DT, '%y-%m-%d'), '') testInDt,
		    IFNULL (DATE_FORMAT(TEST_ITEM_TB.EST_CMP_DT, '%y-%m-%d'), '-') estCmpDt,
		    CONCAT ('SB', JOB_TB.SBK_YM, '-' , JOB_TB.SBK_TYPE, LPAD(JOB_TB.SBK_SEQ,4,0),
    			'-',TEST_TB.TEST_TYPE_CODE,LPAD(TEST_TB.TEST_NO,4,0),
    			IF(JOB_TB.SBK_REVISION > 0, CONCAT ('-',JOB_TB.SBK_REVISION), '')) testId,
		    TEST_ITEM_TB.TEST_ITEM_SEQ,
		    cate1.TEST_CATE_SEQ crtfc1,
		    cate2.TEST_CATE_SEQ crtfc2,
		    cate3.TEST_CATE_SEQ crtfc3,
		    cate4.TEST_CATE_SEQ crtfc4,
		    cate1.NAME crtfc1Name,
		    IFNULL (cate2.NAME, '') crtfc2Name,
		    IFNULL (cate3.NAME, '') crtfc3Name,
		    IFNULL (cate4.NAME, '') crtfc4Name,
                     
		    TEST_STNDR_TB.TEST_STNDR_SEQ,
		    IF (TEST_ITEM_TB.TEST_STNDR_SEQ=0, TEST_ITEM_TB.TEST_STNDR_TEXT, IFNULL (TEST_STNDR_TB.TEST_STNDR, '')) TEST_STNDR,
		    
		    TEST_ITEM_TB.MEMO,
		    IFNULL (CODE_TT.TYPE_NAME, '') TEST_TYPE,
		   
		
		    IF (FN_MEM_NAME(TEST_MNGR_TB.TEST_MNG_ID)='', '미배정', FN_MEM_NAME(TEST_MNGR_TB.TEST_MNG_ID)) testMem,
            FN_MEM_NAME (SBK_TB.INS_MEM_ID) mngName,
                      
		    IFNULL (CODE_TS.TYPE_NAME, '-') testState,
			TEST_ITEM_TB.NET_SALES netSales,

			IFNULL (MEMO_CNT, 0) memoCnt,
            JOB_TB.JOB_SEQ,
            IFNULL (CODE_CP.TYPE_NAME, '') stateCode,
    		IFNULL (DATE_FORMAT(JOB_TB.STATE_UDT_DT, '%Y-%m-%d'), '') stateUdtDt
		    
		FROM
		    SBK_TB
			
			INNER JOIN JOB_TB ON SBK_TB.SBK_YM = JOB_TB.SBK_YM
			AND SBK_TB.TYPE = JOB_TB.SBK_TYPE
			AND SBK_TB.SBK_SEQ = JOB_TB.SBK_SEQ 
			AND SBK_TB.REVISION = JOB_TB.SBK_REVISION
			AND JOB_TB.STATE != 'D'
		   
			INNER JOIN QUO_TB ON QUO_TB.QUO_YM = JOB_TB.QUO_YM
			AND QUO_TB.QUO_SEQ = JOB_TB.QUO_SEQ
                    
            LEFT JOIN CMPY_TB ON JOB_TB.CMPY_SEQ = CMPY_TB.CMPY_SEQ
		    
            INNER JOIN TEST_ITEM_TB on JOB_TB.QUO_YM = TEST_ITEM_TB.QUO_YM
		    AND JOB_TB.QUO_SEQ = TEST_ITEM_TB.QUO_SEQ and TEST_ITEM_TB.STATE != 'D'
            INNER JOIN TEST_TB on TEST_TB.TEST_ITEM_SEQ = TEST_ITEM_TB.TEST_ITEM_SEQ
		    INNER JOIN TEST_STNDR_TB on TEST_ITEM_TB.TEST_STNDR_SEQ = TEST_STNDR_TB.TEST_STNDR_SEQ
                     
		    LEFT JOIN TEST_CATE_TB cate4 ON TEST_ITEM_TB.CRTF_TYPE_SEQ = cate4.TEST_CATE_SEQ
		    LEFT JOIN TEST_CATE_TB cate3 ON cate4.TOP_DEPTH_SEQ = cate3.TEST_CATE_SEQ
		    LEFT JOIN TEST_CATE_TB cate2 ON cate3.TOP_DEPTH_SEQ = cate2.TEST_CATE_SEQ
		    LEFT JOIN TEST_CATE_TB cate1 ON cate2.TOP_DEPTH_SEQ = cate1.TEST_CATE_SEQ
		    
            LEFT JOIN TEST_MNGR_TB
			ON TEST_MNGR_TB.TEST_MNGR_SEQ = (
								SELECT TEST_MNGR_SEQ
								FROM TEST_MNGR_TB SUB
								WHERE SUB.TEST_SEQ = TEST_TB.TEST_SEQ
								ORDER BY TEST_MNGR_SEQ DESC
								LIMIT 1
			)
                     
            LEFT JOIN 
            (
			    SELECT 
			        SBK_ID,
		            IM_YM,
		            IM_SEQ,
		            CARRY_IN_DATE
			    FROM
			        IM_TB
			        
				    LEFT JOIN IM_SUB_TB ON IM_SUB_TB.im_id = CONCAT ('IM', IM_TB.IM_YM, '-', 'G', LPAD(IM_TB.IM_SEQ,4,0))
			    WHERE DIV_CODE = 1 AND IM_SUB_TB.STATE != 'D' GROUP BY SBK_ID
		    ) IM_TB ON IM_TB.SBK_ID = CONCAT ('SB', SBK_TB.SBK_YM, '-' , SBK_TB.TYPE, LPAD(SBK_TB.SBK_SEQ,4,0), IF(REVISION > 0, CONCAT ('-',REVISION), ''))
                     
            /* 게시판 게시글 갯수 */
			LEFT JOIN (SELECT TEST_SEQ, COUNT(1) MEMO_CNT FROM TEST_MEMO_TB GROUP BY TEST_MEMO_TB.TEST_SEQ) TEST_MEMO_TB
			ON TEST_TB.TEST_SEQ = TEST_MEMO_TB.TEST_SEQ
             
            LEFT JOIN COMCODE_TB CODE_TT ON CODE_TT.TYPE_CD = TEST_ITEM_TB.TEST_TYPE_CODE AND CODE_TT.TOP_CD = 'TT'
            LEFT JOIN COMCODE_TB CODE_TS ON CODE_TS.TYPE_CD = TEST_TB.TEST_STATE_CODE AND CODE_TS.TOP_CD = 'TS'
            LEFT JOIN COMCODE_TB CODE_CP ON CODE_CP.TYPE_CD = JOB_TB.STATE_CODE AND CODE_CP.TOP_CD = 'CP'
               
		WHERE 1=1
		AND TEST_ITEM_TB.STATE != 'D'
		AND CONCAT ('SB', SBK_TB.SBK_YM, '-' , SBK_TB.TYPE, LPAD(SBK_TB.SBK_SEQ,4,0), IF(REVISION > 0, CONCAT ('-',REVISION), '')) = #{sbkId}
        
		<include refid="whereList"/>
			
	</select>
	
	<sql id="whereList">

        	<if test="searchVO != null">
		        <foreach collection="searchVO" item="item" separator="">
		        	<choose>
		        		<!-- 15 작성일 -->
				        <when test="item.searchCode == 15">AND DATE_FORMAT(QUO_TB.INS_DT, '%Y%m%d') BETWEEN DATE_FORMAT(#{item.startDate}, '%Y%m%d') AND DATE_FORMAT(#{item.endDate}, '%Y%m%d')</when>
				        <!-- 59 신청일 -->
				        <when test="item.searchCode == 59">AND DATE_FORMAT(SBK_TB.INS_DT, '%Y%m%d') BETWEEN DATE_FORMAT(#{item.startDate}, '%Y%m%d') AND DATE_FORMAT(#{item.endDate}, '%Y%m%d')</when>
				        <!-- 20	완료요청일 -->
						<when test="item.searchCode == 20">AND DATE_FORMAT(SBK_TB.EST_CMP_DT, '%Y%m%d') BETWEEN DATE_FORMAT(#{item.startDate}, '%Y%m%d') AND DATE_FORMAT(#{item.endDate}, '%Y%m%d')</when>
						<!-- 64	개별완료요청일 -->
						<when test="item.searchCode == 64">AND DATE_FORMAT(TEST_ITEM_TB.EST_CMP_DT, '%Y%m%d') BETWEEN DATE_FORMAT(#{item.startDate}, '%Y%m%d') AND DATE_FORMAT(#{item.endDate}, '%Y%m%d')</when>
						<!-- 21	시료반입일 -->
						<when test="item.searchCode == 21">AND DATE_FORMAT(IM_TB.CARRY_IN_DATE, '%Y%m%d') BETWEEN DATE_FORMAT(#{item.startDate}, '%Y%m%d') AND DATE_FORMAT(#{item.endDate}, '%Y%m%d')</when>
						<!-- 58	프로젝트상태변경일 -->
	        			<when test="item.searchCode == 58">AND DATE_FORMAT(JOB_TB.STATE_UDT_DT, '%Y%m%d') BETWEEN DATE_FORMAT(#{item.startDate}, '%Y%m%d') AND DATE_FORMAT(#{item.endDate}, '%Y%m%d')</when>
		        		<!-- 18	시험배정일 -->
						<when test="item.searchCode == 18">and DATE_FORMAT(TEST_TB.INS_DT, '%Y%m%d') BETWEEN DATE_FORMAT(#{item.startDate}, '%Y%m%d') AND DATE_FORMAT(#{item.endDate}, '%Y%m%d')</when>
		        		<!-- 56	재발행구분 -->
		        		<when test="item.searchCode == 56">
		        			<choose>
		        				<when test="item.searchWord == 1">AND REVISION = 0</when>
		        				<when test="item.searchWord == 2">AND REVISION != 0</when>
		        			</choose>
		        		</when>
		        		<!-- 1	고객유형 -->
						<when test="item.searchCode == 1">AND IFNULL (CMPY_TB.CMPY_CODE,'9999') = #{item.searchWord}</when>
						<!-- 31	시험상태 -->
						<when test="item.searchCode == 31">AND TEST_TB.TEST_STATE_CODE = #{item.searchWord}</when> 
						<!-- 57	프로젝트상태 -->
		        		<when test="item.searchCode == 57">AND JOB_TB.STATE_CODE = #{item.searchWord}</when>
		        		<!-- 5	견적서번호 -->
						<when test="item.searchCode == 5">AND CONCAT ('Q', QUO_TB.QUO_YM, '-' , QUO_TB.TYPE, LPAD(QUO_TB.QUO_SEQ,4,0)) LIKE CONCAT ('%',#{item.searchWord},'%')</when>
						<!-- 61	신청서번호 -->
						<when test="item.searchCode == 61">AND CONCAT ('SB', SBK_TB.SBK_YM, '-' , SBK_TB.TYPE, LPAD(SBK_TB.SBK_SEQ,4,0), IF(REVISION > 0, CONCAT ('-',REVISION), '')) LIKE CONCAT ('%',#{item.searchWord},'%')</when>
						<!-- 4	컨설팅명 -->
						<when test="item.searchCode == 4">AND IFNULL (CMPY_TB.CMPY_NAME, '') LIKE CONCAT('%',#{item.searchWord},'%')</when>
						<!-- 12	회사명 -->
						<when test="item.searchCode == 12">AND IFNULL (JOB_TB.CMPY_NAME, '') LIKE CONCAT('%',#{item.searchWord},'%')</when>
						<!-- 6	제품명 -->
						<when test="item.searchCode == 6">AND IFNULL (JOB_TB.PRDCT_NAME, '') LIKE CONCAT('%',#{item.searchWord},'%')</when>
						<!-- 27-모델명 -->
				        <when test="item.searchCode == 27">AND IFNULL (JOB_TB.MODEL_NAME, '') LIKE CONCAT('%',#{item.searchWord},'%')</when>
						<!-- 7	고지부담당자 -->
						<when test="item.searchCode == 7">AND FN_MEM_NAME (JOB_TB.MNG_ID) LIKE CONCAT('%',#{item.searchWord},'%')</when>
						<!-- 9	시험담당자 -->
						<when test="item.searchCode == 9">AND IF (FN_MEM_NAME(TEST_MNGR_TB.TEST_MNG_ID)='', '미배정', FN_MEM_NAME(TEST_MNGR_TB.TEST_MNG_ID)) LIKE CONCAT('%',#{item.searchWord},'%')</when>
						<!-- 40	시험규격 -->
	        			<when test="item.searchCode == 40">AND TEST_STNDR_TB.TEST_STNDR like CONCAT('%',#{item.searchWord},'%')</when>
						<!-- 62	참고메모 -->
						<when test="item.searchCode == 62">AND TEST_ITEM_TB.MEMO LIKE CONCAT('%',#{item.searchWord},'%')</when>
						<!-- 23	시험부 -->
			       		<when test="item.searchCode == 23">AND TEST_ITEM_TB.TEST_TYPE_CODE IN
			       			<foreach collection="item.searchWords" item="sub" open="(" close=")" separator=",">#{sub}</foreach>
			       		</when>
			       		<!-- 22	신청구분 -->
						<when test="item.searchCode == 22">AND 1 IN 
							<foreach collection="item.searchWords" item="sub" open="(" close=")" separator=",">${sub}</foreach>
						</when>
						<!-- 50	시험번호 -->
			       		<when test="item.searchCode == 50">AND CONCAT ('SB', JOB_TB.SBK_YM, '-' , JOB_TB.SBK_TYPE, LPAD(JOB_TB.SBK_SEQ,4,0),
													    			'-',TEST_TB.TEST_TYPE_CODE,LPAD(TEST_TB.TEST_NO,4,0),
													    			IF(JOB_TB.SBK_REVISION > 0, CONCAT ('-',JOB_TB.SBK_REVISION), '')) LIKE CONCAT('%',#{item.searchWord},'%')</when>
		        	</choose>
				</foreach>
			</if>
				
	</sql>
</mapper>